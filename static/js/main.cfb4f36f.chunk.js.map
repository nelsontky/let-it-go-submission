{"version":3,"sources":["components/layout.js","utils/firebase.js","components/randomToiletQuote.js","components/panorama.js","components/preview.js","components/submissionsSortingDropdown.js","Admin.js","components/map.js","components/status.js","components/submitted.js","App.js","components/switchPortals.js","Main.js","index.js"],"names":["layout","_ref","children","react_default","a","createElement","style","margin","maxWidth","padding","firebase","require","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","quoteStyle","color","fontFamily","fontSize","fontStyle","lineHeight","textShadow","zIndex","textAlign","RandomToiletQuote","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","unmounted","db","firestore","_this2","collection","doc","get","then","quotes","data","randomQuote","Math","floor","random","length","setState","quote","catch","React","Component","Panorama","viewer","window","pannellum","type","panorama","url","vaov","maxPitch","minPitch","autoLoad","destroy","id","width","height","Preview","submission","staticMapUrl","concat","lat","lon","facilities","handicapped","separateHandicapped","bool","textDecoration","name","src","alt","listStyle","glanceStyle","male","className","female","handicappedText","waterCooler","showerHeads","hose","SubmissionsSortingDropdown","FormControl","InputLabel","Select","value","autoWidth","onChange","handleSorting","MenuItem","Admin","submissionsDb","toiletDb","reviewsDb","storage","bind","assertThisInitialized","submissions","submissionToReject","submissionToApprove","remarks","previewRow","sortBy","showAcceptedReviews","getAllSubmissions","newSubmissions","map","Map","users","forEach","userObj","user","currentUser","uid","console","log","onSnapshot","querySnapshot","obj","userUid","userPhoto","photoURL","docId","date","isFemale","isMale","isHandicapped","isSeparateHandicapped","hasHose","hasShowerHeads","hasWaterCooler","paranomaUrl","panoramaFileName","fileName","status","approval","has","set","push","docChanges","change","idToRemove","submissionToRemove","find","element","rowId","index","sort","compareByDate","_this3","event","target","triggerDialogToConfirmApprove","handleRejectSubmissionClicked","submissionIndex","approveDialogOpened","_this4","update","refFromURL","getDownloadURL","xhr","XMLHttpRequest","responseType","onload","blob","response","uploadTask","ref","child","put","on","error","snapshot","panoramaUrl","open","send","rejectDialogOpened","_this5","defineProperty","_this6","filter","unfilteredSubmission","i","Fragment","key","TableRow","TableCell","whiteSpace","wordWrap","ListItem","justifyContent","flexDirection","Avatar","Typography","variant","noWrap","Button","onClick","toDate","toLocaleString","day","month","year","hour","minute","generateFacilities","size","TextField","multiline","defaultValue","fullWidth","inputProps","handleTextChange","submissionAction","colSpan","preview","assign","slice","compareByName","compareByStatus","_this7","Container","Paper","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","approveSubmission","rejectSubmission","submissionsSortingDropdown_SubmissionsSortingDropdown","Table","minWidth","TableHead","TableBody","generateTable","b","localeCompare","aValue","bValue","navigator","geolocation","watchPosition","position","coords","latitude","longitude","updateMyLocation","myLocation","setPosition","lng","accuracyRadius","setCenter","setRadius","accuracy","enableHighAccuracy","NUS","google","maps","document","getElementById","zoom","center","Marker","icon","Circle","radius","fillColor","fillOpacity","strokeWeight","addListener","e","handleMapClick","latLng","marker","setMap","getPosition","self","centerControlDiv","controlDiv","controlUI","backgroundColor","border","borderRadius","boxShadow","cursor","marginBottom","title","appendChild","controlText","innerHTML","addEventListener","controls","ControlPosition","LEFT_BOTTOM","watchLocation","clearWatch","Status","remarksShown","Submission","status_Status","previewId","handleHide","handlePreview","disabled","handleEdit","handleDelete","Delete_default","Submitted","loading","x","submitted_Submission","uniqid","App","myLat","myLon","progress","progressShown","submissionsShown","edit","editPanorama","editDocId","fileInput","createRef","handleInputChange","setToCurrentLocation","handleSubmit","_this$setState2","checked","preventDefault","trim","Date","now","delete","location","reload","current","files","test","Resizer","imageFileResizer","TaskEvent","STATE_CHANGED","bytesTransferred","totalBytes","err","displayName","alert","submissionId","confirm","scrollTo","href","rel","onSubmit","label","placeholder","InputLabelProps","shrink","marginRight","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","accept","display","htmlFor","submitted","SwitchPortals","isAdmin","Admin_Admin","src_App","uiConfig","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","Main","isSignedIn","unregisterAuthObserver","onAuthStateChanged","signOut","email","switchPortals_SwitchPortals","StyledFirebaseAuth_default","firebaseAuth","randomToiletQuote_RandomToiletQuote","typography","fairyGatesTheme","injectStyles","injectFonts","ReactDOM","render","Main_Main"],"mappings":"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","file":"static/js/main.cfb4f36f.chunk.js","sourcesContent":["import React from 'react';\n\nexport default ({children}) => (\n  <div style={{margin: `3rem auto`, maxWidth: 650, padding: `0 1rem`}}>\n    {children}\n  </div>\n);\n","const firebase = require('firebase/app');\nrequire('firebase/firestore');\nrequire(\"firebase/auth\");\nrequire(\"firebase/storage\");\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n  authDomain: \"let-it-go-e6229.firebaseapp.com\",\n  databaseURL: \"https://let-it-go-e6229.firebaseio.com\",\n  projectId: \"let-it-go-e6229\",\n  storageBucket: \"let-it-go-e6229.appspot.com\",\n  messagingSenderId: \"917575844853\",\n  appId: \"1:917575844853:web:88ec0cbe059a0d43\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from 'react';\nimport firebase from '../utils/firebase';\n\nconst quoteStyle = {\n  color: 'gray',\n  fontFamily: 'Georgia, serif',\n  fontSize: '1.5em',\n  fontStyle: 'italic',\n  lineHeight: '1.4',\n  margin: '0',\n  textShadow: '0 1px white',\n  zIndex: '600',\n  textAlign: 'center',\n};\n\nexport default class RandomToiletQuote extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.unmounted = false;\n    this.db = firebase.firestore();\n  }\n\n  componentDidMount() {\n    this.db\n      .collection('toiletQuotes')\n      .doc('quotes')\n      .get()\n      .then(doc => {\n        const quotes = doc.data().quotes;\n        const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];\n        if (!this.unmounted) {\n          this.setState({quote: '“' + randomQuote + '”'});\n        }\n      })\n      .catch(() =>\n        this.setState({quote: '“Feces are meant to be released in peace.”'}),\n      );\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n  }\n\n  render() {\n    return <p style={quoteStyle}>{this.state.quote}</p>;\n  }\n}\n","import React from 'react';\n\nclass Panorama extends React.Component {\n  componentDidMount() {\n    this.viewer = window.pannellum.viewer('panorama', {\n      type: 'equirectangular',\n      panorama: this.props.url,\n      vaov: 45,\n      maxPitch: 0,\n      minPitch: 0,\n      autoLoad: true,\n    });\n  }\n\n  componentWillUnmount() {\n    this.viewer.destroy();\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"panorama\" style={{width: '100%', height: 200}} />\n      </div>\n    );\n  }\n}\n\nexport default Panorama;\n","import React from 'react';\nimport Layout from './layout';\nimport Panorama from './panorama';\n\nclass Preview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submission = this.props.submission;\n\n    this.staticMapUrl = `https://maps.googleapis.com/maps/api/staticmap?size=650x300&markers=|${this.submission.lat}, ${this.submission.lon}&key=${process.env.REACT_APP_GOOGLE_API_KEY}`;\n  }\n\n  handicappedText() {\n    if (!this.submission.facilities.handicapped) {\n      return 'Is handicapped accessible';\n    } else if (!this.submission.facilities.separateHandicapped)\n      return 'Is handicapped accessible (Handicapped cubicle inside toilet)';\n    else {\n      return 'Is handicapped accessible (Has separate handicapped toilet)';\n    }\n  }\n\n  glanceStyle(bool) {\n    return {\n      textDecoration: bool ? '' : 'line-through',\n      color: bool ? '' : 'gray',\n    };\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h3>{this.submission.name}</h3>\n        <img src={this.staticMapUrl} alt=\"Static map preview\" />\n        <Panorama url={this.submission.panorama.url} />\n        <h4>At a glance</h4>\n        <ul style={{listStyle: 'none'}}>\n          <li style={this.glanceStyle(this.submission.facilities.male)}>\n            <i className=\"em-svg em-man-raising-hand\" />\n            Has Male toilet\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.female)}>\n            <i className=\"em-svg em-woman-raising-hand\" />\n            Has Female toilet\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.handicapped)}>\n            <i className=\"em-svg em-wheelchair\" />\n            {this.handicappedText()}\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.waterCooler)}>\n            <i className=\"em-svg em-potable_water\" />\n            Has water cooler\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.showerHeads)}>\n            <i className=\"em-svg em-shower\" />\n            Has shower heads\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.hose)}>\n            <i className=\"em-svg em-sweat_drops\" />\n            Has hose\n          </li>\n        </ul>\n      </Layout>\n    );\n  }\n}\n\nexport default Preview;\n","import React from 'react';\n\n// Material UI imports\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nexport default class SubmissionsSortingDropdown extends React.Component {\n  render() {\n    return (\n      <FormControl>\n        <InputLabel>Sort by</InputLabel>\n        <Select\n          value={this.props.value}\n          autoWidth\n          onChange={this.props.handleSorting}\n        >\n          <MenuItem value=\"name\">Name</MenuItem>\n          <MenuItem value=\"date\">Date (Newest first)</MenuItem>\n          <MenuItem value=\"status\">Status</MenuItem>\n        </Select>\n      </FormControl>\n    );\n  }\n}\n","import React from 'react';\nimport Preview from './components/preview';\nimport SortingDropdown from './components/submissionsSortingDropdown';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport firebase from './utils/firebase';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport {\n  DialogContent,\n  DialogTitle,\n  Dialog,\n  DialogActions,\n  DialogContentText,\n  TextField,\n  Avatar,\n  ListItem,\n  Container,\n  Typography,\n} from '@material-ui/core';\n\nexport default class Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submissionsDb = firebase.firestore().collection('userSubmissions');\n    this.toiletDb = firebase.firestore().collection('toilets');\n    this.reviewsDb = firebase.firestore().collection('reviews');\n\n    this.storage = firebase.storage();\n\n    this.handleSorting = this.handleSorting.bind(this);\n\n    this.state = {\n      submissions: [],\n      submissionToReject: {},\n      submissionToApprove: {},\n      remarks: '',\n      previewRow: null,\n\n      sortBy: 'date',\n\n      showAcceptedReviews: false,\n    };\n    this.getAllSubmissions();\n  }\n\n  getAllSubmissions() {\n    let newSubmissions = [];\n    const map = new Map();\n\n    this.submissionsDb.get().then(users => {\n      users.forEach(userObj => {\n        let user = userObj.data().currentUser.uid;\n        console.log(userObj.data().currentUser);\n\n        this.submissionsDb\n          .doc(user)\n          .collection('submissions')\n          .onSnapshot(querySnapshot => {\n            querySnapshot.forEach(submission => {\n              let obj = {\n                userUid: user,\n                currentUser: userObj.data().currentUser,\n                userPhoto: userObj.data().currentUser.photoURL,\n                docId: submission.id,\n                date: submission.data().date,\n                isFemale: submission.data().facilities.female,\n                isMale: submission.data().facilities.male,\n                isHandicapped: submission.data().facilities.handicapped,\n                isSeparateHandicapped: submission.data().facilities\n                  .separateHandicapped,\n                hasHose: submission.data().facilities.hose,\n                hasShowerHeads: submission.data().facilities.showerHeads,\n                hasWaterCooler: submission.data().facilities.waterCooler,\n                lat: submission.data().lat,\n                lon: submission.data().lon,\n                name: submission.data().name,\n                paranomaUrl: submission.data().panorama.url,\n\n                // Needed for reupload of file\n                panoramaFileName: submission.data().panorama.fileName,\n\n                // editing\n                status: submission.data().status.approval,\n                remarks: submission.data().status.remarks,\n              };\n\n              if (!map.has(obj.docId)) {\n                map.set(obj.docId, true);\n                newSubmissions.push(obj);\n              } else {\n                // if not in array then replace with the new updated one at the same position\n              }\n            });\n\n            querySnapshot.docChanges().forEach(change => {\n              let idToRemove = change.doc.id;\n              let submissionToRemove = newSubmissions.find(\n                element => element.docId === idToRemove,\n              );\n              let rowId = submissionToRemove.rowId;\n              newSubmissions[rowId] = {\n                userUid: user,\n                docId: submissionToRemove.id,\n                date: change.doc.data().date,\n                isFemale: change.doc.data().facilities.female,\n                isMale: change.doc.data().facilities.male,\n                isHandicapped: change.doc.data().facilities.handicapped,\n                isSeparateHandicapped: change.doc.data().facilities\n                  .separateHandicapped,\n                hasHose: change.doc.data().facilities.hose,\n                hasShowerHeads: change.doc.data().facilities.showerHeads,\n                hasWaterCooler: change.doc.data().facilities.waterCooler,\n                lat: change.doc.data().lat,\n                lon: change.doc.data().lon,\n                name: change.doc.data().name,\n                paranomaUrl: change.doc.data().panorama.url,\n\n                // editing\n                status: change.doc.data().status.approval,\n                remarks: change.doc.data().status.remarks,\n              };\n            });\n\n            let index = -1;\n            newSubmissions.map(submission => {\n              index++;\n              submission.rowId = index;\n              return submission;\n            });\n\n            // Sorts by date by default\n            newSubmissions.sort(compareByDate);\n\n            this.setState({submissions: newSubmissions});\n          });\n      });\n    });\n  }\n\n  generateFacilities(submission) {\n    return (\n      <div style={{textAlign: 'center'}}>\n        {submission.isMale && <i className=\"em-svg em-man-raising-hand\" />}\n        {submission.isFemale && <i className=\"em-svg em-woman-raising-hand\" />}\n        {submission.hasWaterCooler && (\n          <i className=\"em-svg em-potable_water\" />\n        )}{' '}\n        {submission.hasShowerHeads && <i className=\"em-svg em-shower\" />}{' '}\n        {submission.hasHose && <i className=\"em-svg em-sweat_drops\" />}{' '}\n        {submission.isHandicapped && <i className=\"em-svg em-wheelchair\" />}\n      </div>\n    );\n  }\n\n  submissionAction(index) {\n    const values = {\n      age: [10, 20, 30],\n    };\n    return (\n      <FormControl>\n        <Select\n          value={values.age}\n          onChange={event => {\n            let submission = this.state.submissions[index];\n            switch (event.target.value) {\n              case 'Approve':\n                this.triggerDialogToConfirmApprove(submission, index);\n                break;\n              case 'Reject':\n                this.handleRejectSubmissionClicked(submission, index);\n                break;\n              default:\n                break;\n            }\n          }}>\n          <MenuItem value={'Approve'}>Approve</MenuItem>\n          <MenuItem value={'Reject'}>Reject</MenuItem>\n        </Select>\n      </FormControl>\n    );\n  }\n\n  triggerDialogToConfirmApprove(submission, index) {\n    this.setState({\n      submissionToApprove: submission,\n      submissionIndex: index,\n      approveDialogOpened: true,\n    });\n  }\n\n  approveSubmission() {\n    let remarks = this.state.remarks[this.state.submissionIndex];\n    let submission = this.state.submissionToApprove;\n    this.submissionsDb\n      .doc(this.state.submissionToApprove.userUid)\n      .collection('submissions')\n      .doc(this.state.submissionToApprove.docId)\n      .update({\n        status: {\n          approval: 'approved',\n          // In case of empty remarks\n          remarks: remarks == null ? '' : remarks,\n        },\n      });\n\n    // submission to official toilet database\n    // Downloads panorama to reupload\n    this.storage\n      .refFromURL(submission.paranomaUrl)\n      .getDownloadURL()\n      .then(url => {\n        // Downloading panorama\n        let xhr = new XMLHttpRequest();\n        xhr.responseType = 'blob';\n        xhr.onload = event => {\n          const blob = xhr.response;\n\n          // Uploading the downloaded blob\n          const uploadTask = this.storage\n            .ref()\n            .child(`approved/${submission.panoramaFileName}`)\n            .put(blob);\n\n          uploadTask.on(\n            'state_changed',\n            null,\n            error => console.log(error),\n            () => {\n              // Upload successful\n              uploadTask.snapshot.ref.getDownloadURL().then(panoramaUrl => {\n                // Submit to main db, changes the panoramaUrl too (This is\n                // largely your original code @zx)\n                this.toiletDb\n                  .doc(submission.name)\n                  .set({\n                    facilities: {\n                      female: submission.isFemale,\n                      handicapped: submission.isHandicapped,\n                      hose: submission.hasHose,\n                      male: submission.isMale,\n                      separateHandicapped: submission.isSeparateHandicapped,\n                      showerHeads: submission.hasShowerHeads,\n                      waterCooler: submission.hasWaterCooler,\n                    },\n                    lat: submission.lat,\n                    lon: submission.lon,\n                    name: submission.name,\n                    paranomaUrl: panoramaUrl,\n                  })\n                  .then(() => {\n                    this.setState({\n                      // submissions: submissions,\n                      approveDialogOpened: false,\n                    });\n                  }); // create a review object in the review database\n                this.reviewsDb.doc(submission.name).set({});\n              });\n            },\n          );\n        };\n        xhr.open('GET', url);\n        xhr.send();\n      });\n  }\n\n  handleRejectSubmissionClicked(submission, index) {\n    this.setState({\n      rejectDialogOpened: true,\n      submissionToReject: submission,\n      submissionIndex: index,\n    });\n  }\n\n  rejectSubmission() {\n    // update the rejection reason in the firestore\n    let remarks = this.state.remarks[this.state.submissionIndex];\n    this.submissionsDb\n      .doc(this.state.submissionToReject.userUid)\n      .collection('submissions')\n      .doc(this.state.submissionToReject.docId)\n      .update({\n        status: {\n          approval: 'rejected',\n          remarks: remarks ? remarks : this.state.submissionToReject.remarks,\n        },\n      })\n      .then(() => {\n        this.setState({\n          rejectDialogOpened: false,\n        });\n      });\n  }\n\n  handleTextChange(event, rowId) {\n    this.setState({\n      remarks: {\n        [rowId]: event.target.value,\n      },\n    });\n  }\n\n  generateTable() {\n    return this.state.submissions\n      .filter(unfilteredSubmission => {\n        return this.state.showAcceptedReviews\n          ? unfilteredSubmission\n          : unfilteredSubmission.status === 'pending' ||\n              unfilteredSubmission.status === 'rejected';\n      })\n      .map((submission, i) => {\n        return (\n          <React.Fragment key={i}>\n            <TableRow>\n              <TableCell style={{whiteSpace: 'normal', wordWrap: 'break-word'}}>\n                <ListItem\n                  style={{\n                    justifyContent: 'center',\n                    textAlign: 'center',\n                    flexDirection: 'column',\n                    margin: 0,\n                    padding: 0,\n                  }}>\n                  <Avatar src={submission.userPhoto} />\n                  <Typography\n                    variant=\"body1\"\n                    noWrap={true}\n                    style={{fontSize: 15, maxWidth: 120}}>\n                    <b>{submission.currentUser.name}</b>\n                  </Typography>\n                </ListItem>\n              </TableCell>\n              <TableCell>\n                {submission.name + ' '}\n\n                {/* Show preview button if toilet is not previewed. If toilet is\n              being previewed, then show hide button */}\n                {submission.rowId !== this.state.previewRow ? (\n                  <Button\n                    onClick={() =>\n                      this.setState({previewRow: submission.rowId})\n                    }\n                    color=\"primary\">\n                    Preview\n                  </Button>\n                ) : (\n                  <Button\n                    onClick={() => this.setState({previewRow: null})}\n                    color=\"secondary\">\n                    Hide\n                  </Button>\n                )}\n              </TableCell>\n              <TableCell>\n                {submission.date.toDate().toLocaleString('default', {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric',\n                  hour: 'numeric',\n                  minute: 'numeric',\n                })}\n              </TableCell>\n              <TableCell>{this.generateFacilities(submission)}</TableCell>\n              <TableCell size=\"small\">\n                {\n                  <TextField\n                    multiline\n                    defaultValue={submission.remarks}\n                    fullWidth\n                    margin=\"dense\"\n                    inputProps={{style: {fontSize: 15}}}\n                    onChange={event => {\n                      this.handleTextChange(event, submission.rowId);\n                    }}\n                  />\n                }\n              </TableCell>\n              <TableCell>\n                {submission.status == null ? 'Pending' : submission.status}{' '}\n              </TableCell>\n              <TableCell>{this.submissionAction(submission.rowId)}</TableCell>\n            </TableRow>\n\n            {/* Sets up preview, hacky way to fit zx \n          data structure to Nelson's */}\n            {this.state.previewRow === submission.rowId && (\n              <TableRow>\n                <TableCell colSpan={7}>\n                  <Preview\n                    submission={Object.assign(\n                      {\n                        panorama: {url: submission.paranomaUrl},\n                        facilities: {\n                          hose: submission.hasHose,\n                          showerHeads: submission.hasShowerHeads,\n                          waterCooler: submission.hasWaterCooler,\n                          male: submission.isMale,\n                          separateHandicapped: submission.isSeparateHandicapped,\n                          handicapped: submission.isHandicapped,\n                          female: submission.isFemale,\n                        },\n                      },\n                      submission,\n                    )}\n                  />\n                </TableCell>\n              </TableRow>\n            )}\n          </React.Fragment>\n        );\n      });\n  }\n\n  handleSorting(event) {\n    let submissions = this.state.submissions.slice();\n\n    switch (event.target.value) {\n      case 'name':\n        submissions.sort(compareByName);\n        break;\n      case 'date':\n        submissions.sort(compareByDate);\n        break;\n      case 'status':\n        submissions.sort(compareByStatus);\n        break;\n      default:\n        break;\n    }\n\n    this.setState({submissions, sortBy: event.target.value});\n  }\n\n  render() {\n    return (\n      <Container style={{padding: 0, textAlign: 'center'}}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() =>\n            this.setState({\n              showAcceptedReviews: !this.state.showAcceptedReviews,\n            })\n          }>\n          {(this.state.showAcceptedReviews ? 'Hide ' : 'Show ') +\n            'Accepted Reviews'}\n        </Button>\n        <Paper style={{margin: 20}}>\n          <Dialog\n            onClose={() => {\n              this.setState({approveDialogOpened: false});\n            }}\n            open={this.state.approveDialogOpened}>\n            <DialogTitle>Are you sure?</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                {'Do you really want to approve ' +\n                  this.state.submissionToApprove.name +\n                  ' with the remarks ' +\n                  (this.state.remarks[this.state.submissionIndex]\n                    ? this.state.remarks[this.state.submissionIndex]\n                    : this.state.submissionToApprove.remarks) +\n                  '?'}\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={() => this.approveSubmission()}>Approve</Button>\n              <Button\n                onClick={() => {\n                  this.setState({approveDialogOpened: false});\n                }}>\n                Cancel\n              </Button>\n            </DialogActions>\n          </Dialog>\n          <Dialog\n            onClose={() => {\n              this.setState({rejectDialogOpened: false});\n            }}\n            open={this.state.rejectDialogOpened}>\n            <DialogTitle>Are you sure?</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                {'Do you really want to reject ' +\n                  this.state.submissionToReject.name +\n                  ' with the remarks ' +\n                  (this.state.remarks[this.state.submissionIndex]\n                    ? this.state.remarks[this.state.submissionIndex]\n                    : this.state.submissionToReject.remarks) +\n                  '?'}\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={() => this.rejectSubmission()}>Reject</Button>\n              <Button\n                onClick={() => {\n                  this.setState({rejectDialogOpened: false});\n                }}>\n                Cancel\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <SortingDropdown\n            value={this.state.sortBy}\n            handleSorting={this.handleSorting}\n          />\n\n          <Table style={{minWidth: 650}}>\n            <TableHead>\n              <TableRow>\n                <TableCell>User</TableCell>\n                <TableCell>Name</TableCell>\n                <TableCell>Submission Date</TableCell>\n                <TableCell>Facilities</TableCell>\n                <TableCell>Remarks </TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>{this.generateTable()}</TableBody>\n          </Table>\n        </Paper>\n      </Container>\n    );\n  }\n}\n\n// Comparators\nfunction compareByName(a, b) {\n  return a.name.localeCompare(b.name);\n}\n\nfunction compareByDate(a, b) {\n  return b.date.toDate() - a.date.toDate();\n}\n\nfunction compareByStatus(a, b) {\n  let aValue;\n  let bValue;\n\n  switch (a.status) {\n    case 'rejected':\n      aValue = -1;\n      break;\n    case 'approved':\n      aValue = 0;\n      break;\n    default:\n      aValue = 1;\n      break;\n  }\n\n  switch (b.status) {\n    case 'rejected':\n      bValue = -1;\n      break;\n    case 'approved':\n      bValue = 0;\n      break;\n    default:\n      bValue = 1;\n      break;\n  }\n\n  return aValue - bValue;\n}\n","import React from 'react';\n\nclass Map extends React.Component {\n  watchLocation() {\n    if (navigator.geolocation) {\n      this.id = navigator.geolocation.watchPosition(\n        position => {\n          const lat = position.coords.latitude;\n          const lon = position.coords.longitude;\n          this.props.updateMyLocation(lat, lon);\n\n          this.myLocation.setPosition({lat: lat, lng: lon});\n          this.accuracyRadius.setCenter({lat: lat, lng: lon});\n          this.accuracyRadius.setRadius(position.coords.accuracy);\n        },\n        () => console.log('No permission'),\n        {\n          enableHighAccuracy: true,\n        },\n      );\n    } else {\n      // Browser doesn't support Geolocation\n      console.log('No permission');\n    }\n  }\n\n  componentDidMount() {\n    const NUS = {lat: 1.296675, lng: 103.776396};\n    this.map = new window.google.maps.Map(document.getElementById('map'), {\n      zoom: 13,\n      center: NUS,\n    });\n\n    this.myLocation = new window.google.maps.Marker({\n      position: NUS,\n      map: this.map,\n      icon:\n        'https://raw.githubusercontent.com/nelsontky/let-it-go/master/assets/icons/locationMarker.png',\n    });\n\n    this.accuracyRadius = new window.google.maps.Circle({\n      map: this.map,\n      center: NUS,\n      radius: 0,\n      fillColor: '#00F',\n      fillOpacity: 0.2,\n      strokeWeight: 0,\n    });\n\n    // Click listeners\n    this.map.addListener('click', e => {\n      this.props.handleMapClick(e.latLng.lat(), e.latLng.lng());\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: e.latLng,\n        map: this.map,\n      });\n    });\n    this.accuracyRadius.addListener('click', e => {\n      this.props.handleMapClick(e.latLng.lat(), e.latLng.lng());\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: e.latLng,\n        map: this.map,\n      });\n    });\n    this.myLocation.addListener('click', () => {\n      this.props.handleMapClick(\n        this.myLocation.getPosition().lat(),\n        this.myLocation.getPosition().lng(),\n      );\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: this.myLocation.getPosition(),\n        map: this.map,\n      });\n    });\n\n    // Location button\n    const self = this;\n    function CenterControl(controlDiv, map) {\n      // Set CSS for the control border.\n      let controlUI = document.createElement('div');\n      controlUI.style.backgroundColor = '#fff';\n      controlUI.style.border = '2px solid #fff';\n      controlUI.style.borderRadius = '3px';\n      controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';\n      controlUI.style.cursor = 'pointer';\n      controlUI.style.textAlign = 'center';\n      controlUI.style.marginBottom = '22px';\n      controlUI.style.height = '31px';\n      controlUI.title = 'Click to recenter the map to location';\n      controlDiv.appendChild(controlUI);\n\n      // Set CSS for the control interior.\n      let controlText = document.createElement('div');\n      controlText.innerHTML = \"<img src='https://i.imgur.com/raFRca2.png' />\";\n      controlUI.appendChild(controlText);\n\n      // Setup the click event listeners\n      controlUI.addEventListener('click', function() {\n        map.setCenter(self.myLocation.getPosition());\n      });\n    }\n\n    // Render the button\n    let centerControlDiv = document.createElement('div');\n    new CenterControl(centerControlDiv, this.map);\n\n    centerControlDiv.index = 1;\n    this.map.controls[window.google.maps.ControlPosition.LEFT_BOTTOM].push(\n      centerControlDiv,\n    );\n\n    this.watchLocation();\n  }\n\n  componentWillUnmount() {\n    navigator.geolocation.clearWatch(this.id);\n  }\n\n  render() {\n    return <div id=\"map\" style={{width: '100%', height: '300px'}}></div>;\n  }\n}\n\nexport default Map;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nexport default class Status extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {remarksShown: false};\n\n    this.approval = this.props.status.approval;\n    this.remarks = this.props.status.remarks;\n  }\n\n  render() {\n    if (this.approval === 'rejected') {\n      return (\n        <div>\n          <p style={{color: 'red'}}>\n            {'Rejected '}\n            <Button\n              color='primary'\n              onClick={() =>\n                this.setState({remarksShown: !this.state.remarksShown})\n              }>\n                {this.state.remarksShown ? 'Hide' : 'Show reason'}\n            </Button>\n          </p>\n          {this.state.remarksShown && <p>{this.remarks}</p>}\n        </div>\n      );\n    } else if (this.approval === 'pending') {\n      return (\n        <p>\n          <em>Submission pending review</em>\n        </p>\n      );\n    } else {\n      return <p style={{color: 'green'}}>Approved!</p>;\n    }\n  }\n}\n","import React from 'react';\nimport Preview from './preview';\nimport SubmissionsSortingDropdown from './submissionsSortingDropdown';\nimport Status from './status';\n\n// Material UI imports\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nfunction compareByName(a, b) {\n  return a.submission.name.localeCompare(b.submission.name);\n}\n\nfunction compareByDate(a, b) {\n  return b.submission.date.toDate() - a.submission.date.toDate();\n}\n\nfunction compareByStatus(a, b) {\n  let aValue;\n  let bValue;\n\n  switch (a.submission.status.approval) {\n    case 'rejected':\n      aValue = -1;\n      break;\n    case 'approved':\n      aValue = 0;\n      break;\n    default:\n      aValue = 1;\n      break;\n  }\n\n  switch (b.submission.status.approval) {\n    case 'rejected':\n      bValue = -1;\n      break;\n    case 'approved':\n      bValue = 0;\n      break;\n    default:\n      bValue = 1;\n      break;\n  }\n\n  return aValue - bValue;\n}\n\nclass Submission extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submission = this.props.children.submission;\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>{this.submission.name}</h4>\n\n        {/* Status text */}\n        <Status status={this.submission.status} />\n        <div>\n          {/* Preview button */}\n          <Button\n            variant=\"contained\"\n            color={\n              this.props.children.id === this.props.previewId\n                ? 'secondary'\n                : 'default'\n            }\n            onClick={\n              this.props.children.id === this.props.previewId\n                ? this.props.handleHide\n                : () => this.props.handlePreview(this.props.children.id)\n            }>\n            {this.props.children.id === this.props.previewId\n              ? 'Hide'\n              : 'Preview'}\n          </Button>{' '}\n          {/* Edit button */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={this.submission.status.approval === 'approved'}\n            onClick={() =>\n              this.props.handleEdit(this.submission, this.props.children.id)\n            }>\n            Edit\n          </Button>{' '}\n          {/* Delete button */}\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() =>\n              this.props.handleDelete(\n                this.submission.panorama.fileName,\n                this.props.children.id,\n              )\n            }>\n            Delete\n            <DeleteIcon />\n          </Button>\n        </div>\n        <br />\n        <div style={{color: 'gray', fontSize: '80%'}}>\n          Submitted:{' '}\n          {this.submission.date.toDate().toLocaleString('default', {\n            day: 'numeric',\n            month: 'long',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n          })}\n        </div>\n        <br />\n        {this.props.children.id === this.props.previewId && (\n          <Preview submission={this.submission} />\n        )}\n      </div>\n    );\n  }\n}\n\nclass Submitted extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      submissions: [],\n      previewId: '',\n      loading: true,\n      sortBy: 'status',\n    };\n\n    // Read all of current user's submissions from firestore, then adds all\n    // submissions into state.\n    let submissions = [];\n    this.props.doc\n      .collection('submissions')\n      .get()\n      .then(querySnapshot =>\n        querySnapshot.forEach(doc => {\n          submissions.push({submission: doc.data(), id: doc.id});\n        }),\n      )\n      .then(() => {\n        // Sorts by status\n        submissions.sort(compareByStatus);\n        this.setState({submissions, loading: false});\n      });\n\n    this.handlePreview = this.handlePreview.bind(this);\n    this.handleHide = this.handleHide.bind(this);\n    this.handleSorting = this.handleSorting.bind(this);\n  }\n\n  handlePreview(docId) {\n    this.setState({\n      previewId: docId,\n    });\n  }\n\n  handleHide() {\n    this.setState({previewId: ''});\n  }\n\n  handleSorting(event) {\n    let submissions = this.state.submissions.slice();\n\n    switch (event.target.value) {\n      case 'name':\n        submissions.sort(compareByName);\n        break;\n      case 'date':\n        submissions.sort(compareByDate);\n        break;\n      case 'status':\n        submissions.sort(compareByStatus);\n        break;\n      default:\n        break;\n    }\n\n    this.setState({submissions, sortBy: event.target.value});\n  }\n\n  render() {\n    return (\n      <div>\n        {/* Loading message */}\n        {this.state.loading && <span>Loading... ...</span>}\n        {!this.state.loading && this.state.submissions.length === 0 && (\n          <span>You have not created any submissions (yet!)</span>\n        )}\n\n        {!this.state.loading && this.state.submissions.length !== 0 && (\n          <div>\n            <br />\n            <SubmissionsSortingDropdown\n              key={this.state.sortBy}\n              value={this.state.sortBy}\n              handleSorting={this.handleSorting}\n            />\n            <Table>\n              <TableBody>\n                {this.state.submissions.map((x, i) => (\n                  <TableRow key={i}>\n                    <TableCell>\n                      <Submission\n                        key={this.state.sortBy}\n                        handleEdit={this.props.handleEdit}\n                        handleDelete={this.props.handleDelete}\n                        handlePreview={this.handlePreview}\n                        handleHide={this.handleHide}\n                        previewId={this.state.previewId}>\n                        {x}\n                      </Submission>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default Submitted;\n","import React from \"react\";\nimport Map from \"./components/map\";\nimport Submitted from \"./components/submitted\";\nimport Layout from \"./components/layout\";\nimport firebase from \"./utils/firebase\";\nimport Resizer from \"react-image-file-resizer\";\n\n// Material UI imports\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\n\nconst uniqid = require(\"uniqid\");\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      lat: 0,\n      lon: 0,\n      myLat: 0,\n      myLon: 0,\n      handicapped: false,\n      separateHandicapped: false,\n      hose: false,\n      showerHeads: false,\n      male: false,\n      female: false,\n      waterCooler: false,\n      progress: 0,\n      progressShown: false,\n      error: false,\n      submissionsShown: false,\n\n      // Fields in charge of editing.\n      edit: false,\n      panorama: {},\n      editPanorama: false,\n      editDocId: \"\"\n    };\n\n    this.fileInput = React.createRef();\n\n    this.db = firebase.firestore();\n    this.storage = firebase.storage();\n\n    // Document created by user\n    this.doc = this.db\n      .collection(\"userSubmissions\")\n      .doc(this.props.currentUser.uid);\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleMapClick = this.handleMapClick.bind(this);\n    this.updateMyLocation = this.updateMyLocation.bind(this);\n    this.setToCurrentLocation = this.setToCurrentLocation.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  // Handles state of input forms\n  handleInputChange(event) {\n    const value =\n      event.target.type === \"checkbox\"\n        ? event.target.checked\n        : event.target.value;\n\n    if (event.target.name !== \"handicapped\") {\n      // Any checkbox/input that is not the handicapped checkbox, set state\n      // normally.\n      this.setState({\n        [event.target.name]: value\n      });\n    } else {\n      // For handicapped checkbox, have to make sure that separateHandicapped\n      // checkbox is unticked when handicapped checkbox is unticked.\n      this.setState({\n        [event.target.name]: value,\n        separateHandicapped: value && this.state.separateHandicapped\n      });\n    }\n  }\n\n  // Handles map clicks, will update lat lon field to clicked lat lon.\n  handleMapClick(lat, lon) {\n    this.setState({\n      lat,\n      lon\n    });\n  }\n\n  // Whenever geolocation code in Map component runs, myLat and myLon in local\n  // state will be updated.\n  updateMyLocation(myLat, myLon) {\n    this.setState({\n      myLat,\n      myLon\n    });\n  }\n\n  // Handles click on \"Set Lat Lon to current location button\". Does what\n  // the button says, sets Lat Lon state to that of current location.\n  // (if available)\n  setToCurrentLocation(event) {\n    event.preventDefault();\n    this.setState({\n      lat: this.state.myLat,\n      lon: this.state.myLon\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // If user is editing submission and does not choose to reupload panorama\n    if (this.state.edit && !this.state.editPanorama) {\n      this.doc\n        .collection(\"submissions\")\n        .doc()\n        .set({\n          facilities: {\n            female: this.state.female,\n            handicapped: this.state.handicapped,\n            hose: this.state.hose,\n            male: this.state.male,\n            separateHandicapped: this.state.separateHandicapped,\n            showerHeads: this.state.showerHeads,\n            waterCooler: this.state.waterCooler\n          },\n          lat: this.state.lat,\n          lon: this.state.lon,\n          name: this.state.name.trim(),\n\n          // Use old panorama.\n          panorama: this.state.panorama,\n\n          date: new Date(Date.now()),\n          status: { approval: \"pending\", remarks: \"\" }\n        })\n        .then(() => {\n          // Delete old version.\n          this.doc\n            .collection(\"submissions\")\n            .doc(this.state.editDocId)\n            .delete();\n        })\n        .then(() => window.location.reload());\n    } else {\n      // Ensures that file uploaded is an image. Does not work if file format\n      // was changed manually but submit will still not work, just that this\n      // warning will not show too.\n      if (\n        this.fileInput.current.files[0] == null ||\n        !/image\\/*/g.test(this.fileInput.current.files[0].type)\n      ) {\n        alert(\"Please make sure file uploaded is an image\");\n      } else {\n        // Resize images to max width of 4096 to support mobile, after resizing,\n        // image will be uploaded and firestore storage entry would be created.\n        Resizer.imageFileResizer(\n          this.fileInput.current.files[0],\n          4096,\n          4096,\n          \"JPEG\",\n          70,\n          0,\n          blob => {\n            // Show submission progress.\n            this.setState({ progressShown: true });\n\n            // Sets file name, file name appended with a unique id to prevent\n            // overwrites.\n            const fileName = `${this.state.name} - ${uniqid()}.jpeg`;\n\n            // Uploads image to firebase storage\n            let uploadTask = this.storage\n              .ref()\n              .child(`${this.props.currentUser.uid}/${fileName}`)\n              .put(blob);\n\n            uploadTask.on(\n              firebase.storage.TaskEvent.STATE_CHANGED,\n              snapshot => {\n                let progress =\n                  (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n\n                this.setState({ progress });\n              },\n              err => {\n                this.setState({ error: true });\n              },\n              () => {\n                // Upload completed successfully\n                uploadTask.snapshot.ref.getDownloadURL().then(url => {\n                  // Keys in current user info into the user's document,\n                  // excludes email for privacy reasons.\n                  this.doc.set({\n                    currentUser: {\n                      name: this.props.currentUser.displayName,\n                      photoURL: this.props.currentUser.photoURL,\n                      uid: this.props.currentUser.uid\n                    }\n                  });\n\n                  this.doc\n                    .collection(\"submissions\")\n                    .doc()\n                    .set({\n                      facilities: {\n                        female: this.state.female,\n                        handicapped: this.state.handicapped,\n                        hose: this.state.hose,\n                        male: this.state.male,\n                        separateHandicapped: this.state.separateHandicapped,\n                        showerHeads: this.state.showerHeads,\n                        waterCooler: this.state.waterCooler\n                      },\n                      lat: this.state.lat,\n                      lon: this.state.lon,\n                      name: this.state.name.trim(),\n                      panorama: { url, fileName },\n                      date: new Date(Date.now()),\n                      status: { approval: \"pending\", remarks: \"\" }\n                    })\n                    .then(() => {\n                      // If is editing submission, delete old version and old\n                      // panorama\n                      if (this.state.edit) {\n                        this.doc\n                          .collection(\"submissions\")\n                          .doc(this.state.editDocId)\n                          .delete();\n\n                        // Delete old panorama\n                        this.storage\n                          .ref()\n                          .child(\n                            `${this.props.currentUser.uid}/${this.state.panorama.fileName}`\n                          )\n                          .delete();\n                      }\n                    })\n                    .then(() => window.location.reload());\n                });\n              }\n            );\n          },\n          \"blob\"\n        );\n      }\n    }\n  }\n\n  // Handle the deleting of submission. Meant to be passed as a prop\n  // into <Submitted /> component.\n  handleDelete(fileName, submissionId) {\n    if (window.confirm(\"Are you sure you want to delete this submission?\")) {\n      // Deletes document from firestore.\n      this.doc\n        .collection(\"submissions\")\n        .doc(submissionId)\n        .delete()\n        .then(() =>\n          // Deletes panorama image from storage.\n          this.storage\n            .ref()\n            .child(`${this.props.currentUser.uid}/${fileName}`)\n            .delete()\n            .then(() => window.location.reload())\n        );\n    }\n  }\n\n  // Handle the editing of user submitted toilets. Meant to be passed as a prop\n  // into <Submitted /> component.\n  handleEdit(submission, submissionId) {\n    window.scrollTo(0, 0);\n    this.setState({\n      edit: true,\n      female: submission.facilities.female,\n      male: submission.facilities.male,\n      handicapped: submission.facilities.handicapped,\n      separateHandicapped: submission.facilities.separateHandicapped,\n      showerHeads: submission.facilities.showerHeads,\n      waterCooler: submission.facilities.waterCooler,\n      hose: submission.facilities.hose,\n      lat: submission.lat,\n      lon: submission.lon,\n      name: submission.name,\n      panorama: submission.panorama,\n      editDocId: submissionId\n    });\n  }\n\n  render() {\n    // console.log(this.state);\n    return (\n      <Layout>\n        <h1>Submit to Let It Go</h1>\n        <a\n          href=\"https://github.com/nelsontky/let-it-go-submission/blob/master/HELPME.md\"\n          target=\"__blank\"\n          rel=\"noreferrer noopener\"\n        >\n          How do I do this?!\n        </a>\n        {this.state.edit && <h6>Editing submission</h6>}\n        {/* Main form */}\n        <form onSubmit={this.handleSubmit}>\n          {/* Toilet name input*/}\n          <TextField\n            label=\"Name\"\n            placeholder=\"Enter toilet name\"\n            fullWidth\n            margin=\"normal\"\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true\n            }}\n            name=\"name\"\n            onChange={this.handleInputChange}\n            value={this.state.name}\n          />\n          {/* Set Lat Lon to current location button */}\n          <Button onClick={this.setToCurrentLocation} variant=\"contained\">\n            Set Lat Lon to current location\n          </Button>\n          <br />\n          {/* Lat input */}\n          <TextField\n            style={{ marginRight: \"1em\" }}\n            label=\"Latitude\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"lat\"\n            onChange={this.handleInputChange}\n            value={this.state.lat}\n          />\n          {/* Lon input */}\n          <TextField\n            label=\"Longitude\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"lon\"\n            onChange={this.handleInputChange}\n            value={this.state.lon}\n          />\n          {/* Map component, takes in 2 functions that are needed to set local\n        state from child component */}\n          <Map\n            handleMapClick={this.handleMapClick}\n            updateMyLocation={this.updateMyLocation}\n          />\n          <br />\n          {/* Checkboxes */}\n          <FormLabel component=\"legend\">Facilities</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.male}\n                  onChange={this.handleInputChange}\n                  name=\"male\"\n                />\n              }\n              label=\"Male\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.female}\n                  onChange={this.handleInputChange}\n                  name=\"female\"\n                />\n              }\n              label=\"Female\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.handicapped}\n                  onChange={this.handleInputChange}\n                  name=\"handicapped\"\n                />\n              }\n              label=\"Handicapped\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.separateHandicapped}\n                  onChange={this.handleInputChange}\n                  name=\"separateHandicapped\"\n                  disabled={!this.state.handicapped}\n                />\n              }\n              label=\"Separate Handicapped\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.hose}\n                  onChange={this.handleInputChange}\n                  name=\"hose\"\n                />\n              }\n              label=\"Hose\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.showerHeads}\n                  onChange={this.handleInputChange}\n                  name=\"showerHeads\"\n                />\n              }\n              label=\"Shower Heads\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.waterCooler}\n                  onChange={this.handleInputChange}\n                  name=\"waterCooler\"\n                />\n              }\n              label=\"Water Cooler\"\n            />\n          </FormGroup>\n          <br />\n\n          {/* Present user with choice to edit Panorama image if edit\n          mode is on */}\n          {this.state.edit && (\n            <div>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={this.state.editPanorama}\n                    onChange={this.handleInputChange}\n                    name=\"editPanorama\"\n                  />\n                }\n                label=\"Edit Panorama image\"\n              />\n              <br />\n            </div>\n          )}\n\n          <input\n            type=\"file\"\n            name=\"paranomaPath\"\n            accept=\"image/*\"\n            ref={this.fileInput}\n            id=\"contained-button-file\"\n            style={{ display: \"none\" }}\n          />\n\n          {/* Do not show upload Panorama button if in edit mode and\n          edit panorama is not chosen */}\n          {(!this.state.edit || this.state.editPanorama) && (\n            <label htmlFor=\"contained-button-file\">\n              <Button variant=\"contained\" component=\"span\">\n                Select panorama image\n              </Button>\n            </label>\n          )}\n          <br />\n          <br />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            disabled={\n              this.state.name === \"\" ||\n              this.state.lat === 0 ||\n              this.state.lon === 0\n            }\n          >\n            Submit\n          </Button>\n          {/* Progress indicator */}\n          <span>\n            {this.state.progressShown &&\n              \" \" + Math.floor(this.state.progress) + \"%\"}\n          </span>\n          {/* Error indicator */}\n          <p>\n            {this.state.error &&\n              \"An error occured, please refresh the page and try again\"}\n          </p>\n          {this.state.edit && (\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => window.location.reload()}\n            >\n              Cancel\n            </Button>\n          )}\n        </form>\n\n        <Button\n          color=\"secondary\"\n          onClick={() =>\n            this.setState({ submissionsShown: !this.state.submissionsShown })\n          }\n        >\n          {`${this.state.submissionsShown ? \"Hide\" : \"Show\"} your submissions`}\n        </Button>\n\n        {this.state.submissionsShown && (\n          <Submitted\n            uid={this.props.currentUser.uid}\n            doc={this.doc}\n            handleEdit={this.handleEdit}\n            handleDelete={this.handleDelete}\n          />\n        )}\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport Admin from '../Admin';\nimport App from '../App';\n\nimport Button from '@material-ui/core/Button';\n\nexport default class SwitchPortals extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isAdmin: true};\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{textAlign: 'center'}}>\n          <Button\n            onClick={() => this.setState({isAdmin: !this.state.isAdmin})}\n            variant=\"contained\"\n            color=\"secondary\">\n            {`Switch to ${this.state.isAdmin ? 'submission' : 'admin'} portal`}\n          </Button>\n        </div>\n        {!this.state.isAdmin ? (\n          <App currentUser={this.props.currentUser} />\n        ) : (\n          <Admin />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Layout from './components/layout';\nimport RandomToiletQuote from './components/randomToiletQuote';\nimport SwitchPortals from './components/switchPortals';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from './utils/firebase';\nimport App from './App';\n\nimport Button from '@material-ui/core/Button';\n\nfunction isNelsonOrZx(email) {\n  return email === 'lowzxx@gmail.com' || email === 'nelsontkyi@gmail.com';\n}\n\n// Implement Google and Firebase signin\n\nconst uiConfig = {\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n};\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSignedIn: false,\n    };\n  }\n\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase\n      .auth()\n      .onAuthStateChanged(user => this.setState({isSignedIn: !!user}));\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <Layout>\n          <h1>Submit to Let It Go</h1>\n          <p>Please sign-in:</p>\n          <StyledFirebaseAuth\n            uiConfig={uiConfig}\n            firebaseAuth={firebase.auth()}\n          />\n          <RandomToiletQuote />\n        </Layout>\n      );\n    } else {\n      return (\n        <div>\n          <Layout>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => firebase.auth().signOut()}>\n              Sign Out\n            </Button>\n          </Layout>\n\n          {/* Give option to switch portals if is admin logging in, else just\n          show the submission portal */}\n          {isNelsonOrZx(firebase.auth().currentUser.email) ? (\n            <SwitchPortals currentUser={firebase.auth().currentUser} />\n          ) : (\n            <App currentUser={firebase.auth().currentUser} />\n          )}\n        </div>\n      );\n    }\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\nimport Typography from 'typography';\nimport fairyGatesTheme from 'typography-theme-fairy-gates';\nimport injectFonts from 'typography-inject-fonts';\n\nconst typography = new Typography(fairyGatesTheme);\ntypography.injectStyles()\ninjectFonts(typography)\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}