{"version":3,"sources":["utils/firebase.js","components/map.js","components/layout.js","App.js","Main.js","index.js"],"names":["firebase","require","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Map","_this","this","navigator","geolocation","id","watchPosition","position","lat","coords","latitude","lon","longitude","props","updateMyLocation","myLocation","setPosition","lng","accuracyRadius","setCenter","setRadius","accuracy","console","log","_this2","NUS","map","window","google","maps","document","getElementById","zoom","center","Marker","icon","Circle","radius","fillColor","fillOpacity","strokeWeight","addListener","e","handleMapClick","latLng","marker","setMap","getPosition","watchLocation","clearWatch","react_default","a","createElement","style","width","height","React","Component","layout","_ref","children","margin","maxWidth","padding","uniqid","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","name","myLat","myLon","handicapped","separateHandicapped","hose","showerHeads","male","female","waterCooler","progress","progressShown","error","fileInput","createRef","db","firestore","storage","handleInputChange","bind","assertThisInitialized","setToCurrentLocation","handleSubmit","event","_this$setState2","value","target","type","checked","setState","defineProperty","preventDefault","current","files","test","alert","Resizer","imageFileResizer","blob","uploadTask","ref","child","put","on","TaskEvent","STATE_CHANGED","snapshot","bytesTransferred","totalBytes","err","getDownloadURL","then","paranomaUrl","doc","collection","set","uid","facilities","location","reload","onSubmit","onChange","onClick","accept","disabled","Math","floor","uiConfig","signInFlow","signInSuccessUrl","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","Main","isSignedIn","unregisterAuthObserver","onAuthStateChanged","user","src_App","textAlign","signOut","StyledFirebaseAuth_default","firebaseAuth","typography","Typography","fairyGatesTheme","injectStyles","injectFonts","ReactDOM","render","Main_Main"],"mappings":"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","file":"static/js/main.7a7a85d8.chunk.js","sourcesContent":["const firebase = require('firebase/app');\nrequire('firebase/firestore');\nrequire(\"firebase/auth\");\nrequire(\"firebase/storage\");\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n  authDomain: 'let-it-go-submission.firebaseapp.com',\n  databaseURL: 'https://let-it-go-submission.firebaseio.com',\n  projectId: 'let-it-go-submission',\n  storageBucket: 'let-it-go-submission.appspot.com',\n  messagingSenderId: '676873668301',\n  appId: '1:676873668301:web:adfb3a281bd39ead',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from 'react';\n\nclass Map extends React.Component {\n  watchLocation() {\n    if (navigator.geolocation) {\n      this.id = navigator.geolocation.watchPosition(\n        position => {\n          const lat = position.coords.latitude;\n          const lon = position.coords.longitude;\n          this.props.updateMyLocation(lat, lon);\n\n          this.myLocation.setPosition({lat: lat, lng: lon});\n          this.accuracyRadius.setCenter({lat: lat, lng: lon});\n          this.accuracyRadius.setRadius(position.coords.accuracy);\n        },\n        () => console.log('No permission'),\n      );\n    } else {\n      // Browser doesn't support Geolocation\n      console.log('no permission');\n    }\n  }\n\n  componentDidMount() {\n    const NUS = {lat: 1.296675, lng: 103.776396};\n    this.map = new window.google.maps.Map(document.getElementById('map'), {\n      zoom: 13,\n      center: NUS,\n    });\n\n    this.myLocation = new window.google.maps.Marker({\n      position: NUS,\n      map: this.map,\n      icon:\n        'https://raw.githubusercontent.com/nelsontky/let-it-go/master/assets/icons/locationMarker.png',\n    });\n\n    this.accuracyRadius = new window.google.maps.Circle({\n      map: this.map,\n      center: NUS,\n      radius: 0,\n      fillColor: '#00F',\n      fillOpacity: 0.2,\n      strokeWeight: 0,\n    });\n\n    // Click listeners\n    this.map.addListener('click', e => {\n      this.props.handleMapClick(e.latLng.lat(), e.latLng.lng());\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: e.latLng,\n        map: this.map,\n      });\n    });\n    this.accuracyRadius.addListener('click', e => {\n      this.props.handleMapClick(e.latLng.lat(), e.latLng.lng());\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: e.latLng,\n        map: this.map,\n      });\n    });\n    this.myLocation.addListener('click', () => {\n      this.props.handleMapClick(\n        this.myLocation.getPosition().lat(),\n        this.myLocation.getPosition().lng(),\n      );\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: this.myLocation.getPosition(),\n        map: this.map,\n      });\n    });\n\n    this.watchLocation();\n  }\n\n  componentWillUnmount() {\n    navigator.geolocation.clearWatch(this.id);\n  }\n\n  render() {\n    return <div id=\"map\" style={{width: '100%', height: '400px'}}></div>;\n  }\n}\n\nexport default Map;\n","import React from 'react';\n\nexport default ({children}) => (\n  <div style={{margin: `3rem auto`, maxWidth: 650, padding: `0 1rem`}}>\n    {children}\n  </div>\n);\n","import React from 'react';\nimport Map from './components/map';\nimport Layout from './components/layout';\nimport firebase from './utils/firebase';\nimport Resizer from 'react-image-file-resizer';\n\nconst uniqid = require('uniqid');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      lat: 0,\n      lon: 0,\n      myLat: 0,\n      myLon: 0,\n      handicapped: false,\n      separateHandicapped: false,\n      hose: false,\n      showerHeads: false,\n      male: false,\n      female: false,\n      waterCooler: false,\n      progress: 0,\n      progressShown: false,\n      error: false,\n    };\n\n    this.fileInput = React.createRef();\n\n    this.db = firebase.firestore();\n    this.storage = firebase.storage();\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleMapClick = this.handleMapClick.bind(this);\n    this.updateMyLocation = this.updateMyLocation.bind(this);\n    this.setToCurrentLocation = this.setToCurrentLocation.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // Handles state of input forms\n  handleInputChange(event) {\n    const value =\n      event.target.type === 'checkbox'\n        ? event.target.checked\n        : event.target.value;\n\n    if (event.target.name !== 'handicapped') {\n      // Any checkbox/input that is not the handicapped checkbox, set state\n      // normally.\n      this.setState({\n        [event.target.name]: value,\n      });\n    } else {\n      // For handicapped checkbox, have to make sure that separateHandicapped\n      // checkbox is unticked when handicapped checkbox is unticked.\n      this.setState({\n        [event.target.name]: value,\n        separateHandicapped: value && this.state.separateHandicapped,\n      });\n    }\n  }\n\n  // Handles map clicks, will update lat lon field to clicked lat lon.\n  handleMapClick(lat, lon) {\n    this.setState({\n      lat,\n      lon,\n    });\n  }\n\n  // Whenever geolocation code in Map component runs, myLat and myLon in local\n  // state will be updated.\n  updateMyLocation(myLat, myLon) {\n    this.setState({\n      myLat,\n      myLon,\n    });\n  }\n\n  // Handles click on \"Set Lat Lon to current location button\". Does what\n  // the button says, sets Lat Lon state to that of current location.\n  // (if available)\n  setToCurrentLocation(event) {\n    event.preventDefault();\n    this.setState({\n      lat: this.state.myLat,\n      lon: this.state.myLon,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // Ensures that file uploaded is an image. Does not work if file format\n    // was changed manually but submit will still not work, just that this\n    // warning will not show too.\n    if (\n      this.fileInput.current.files[0] == null ||\n      !/image\\/*/g.test(this.fileInput.current.files[0].type)\n    ) {\n      alert('Please make sure file uploaded is an image');\n    }\n\n    // Show submission progress\n    this.setState({progressShown: true});\n\n    // Resize images to max width of 4096 to support mobile, after resizing,\n    // image will be uploaded and firestore entry would be created\n    Resizer.imageFileResizer(\n      this.fileInput.current.files[0],\n      4096,\n      4096,\n      'JPEG',\n      70,\n      0,\n      blob => {\n        // Uploads image to firebase storage\n        let uploadTask = this.storage\n          .ref()\n          // Names file appended with a unique id so as to prevent overwrites\n          .child(uniqid(this.state.name + \"-\"))\n          .put(blob);\n\n        uploadTask.on(\n          firebase.storage.TaskEvent.STATE_CHANGED,\n          snapshot => {\n            let progress =\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n\n            this.setState({progress});\n          },\n          err => {\n            this.setState({error: true});\n          },\n          () => {\n            // Upload completed successfully\n            uploadTask.snapshot.ref.getDownloadURL().then(paranomaUrl => {\n\n              const doc = this.db\n                .collection('users')\n                // Change doc name to user uid\n                .doc('placeholder');\n\n              // To get the document does not exist message away\n              doc.set({uid: 'placeholder'});\n\n              doc\n                .collection('submissions')\n                .doc(this.state.name)\n                .set({\n                  facilities: {\n                    female: this.state.female,\n                    handicapped: this.state.handicapped,\n                    hose: this.state.hose,\n                    male: this.state.male,\n                    separateHandicapped: this.state.separateHandicapped,\n                    showerHeads: this.state.showerHeads,\n                    waterCooler: this.state.waterCooler,\n                  },\n                  lat: this.state.lat,\n                  lon: this.state.lon,\n                  name: this.state.name,\n                  paranomaUrl,\n                }).then(() => window.location.reload());\n              // Should {merge: true}??? KIV\n            });\n          },\n        );\n      },\n      'blob',\n    );\n  }\n\n  render() {\n    return (\n      <Layout>\n        {/* Main form */}\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleInputChange}\n            />\n          </label>\n          <br />\n\n          <button onClick={this.setToCurrentLocation}>\n            Set Lat Lon to current location\n          </button>\n          <br />\n\n          <label>\n            Lat\n            <br />\n            <input\n              type=\"text\"\n              name=\"lat\"\n              value={this.state.lat}\n              onChange={this.handleInputChange}\n              style={{width: '50%'}}\n            />\n          </label>\n          <br />\n\n          <label>\n            Lon\n            <br />\n            <input\n              type=\"text\"\n              name=\"lon\"\n              value={this.state.lon}\n              onChange={this.handleInputChange}\n              style={{width: '50%'}}\n            />\n          </label>\n          <br />\n\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"male\"\n              checked={this.state.male}\n              onChange={this.handleInputChange}\n            />\n            Male{' '}\n          </label>\n\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"female\"\n              checked={this.state.female}\n              onChange={this.handleInputChange}\n            />\n            Female{' '}\n          </label>\n\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"handicapped\"\n              checked={this.state.handicapped}\n              onChange={this.handleInputChange}\n            />\n            Handicapped{' '}\n          </label>\n\n          {/* Show only if handicapped is selected */}\n          {this.state.handicapped && (\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"separateHandicapped\"\n                checked={this.state.separateHandicapped}\n                onChange={this.handleInputChange}\n              />\n              Seperate Handicapped{' '}\n            </label>\n          )}\n          <br />\n\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"hose\"\n              checked={this.state.hose}\n              onChange={this.handleInputChange}\n            />\n            Hose{' '}\n          </label>\n\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"showerHeads\"\n              checked={this.state.showerHeads}\n              onChange={this.handleInputChange}\n            />\n            Shower Heads{' '}\n          </label>\n\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"waterCooler\"\n              checked={this.state.waterCooler}\n              onChange={this.handleInputChange}\n            />\n            Water Cooler{' '}\n          </label>\n          <br />\n\n          <br />\n          <label>\n            Select a paranoma image:\n            <br />\n            <input\n              type=\"file\"\n              name=\"paranomaPath\"\n              accept=\"image/*\"\n              ref={this.fileInput}\n            />\n          </label>\n          <br />\n\n          <br />\n          <input\n            type=\"submit\"\n            disabled={\n              this.state.name === '' ||\n              this.state.lat === 0 ||\n              this.state.lon === 0\n            }\n            value=\"Submit\"\n          />\n\n          {/* Progress indicator */}\n          <span>\n            {this.state.progressShown &&\n              ' ' + Math.floor(this.state.progress) + '%'}\n          </span>\n\n          {/* Error indicator */}\n          <p>\n            {this.state.error &&\n              'An error occured, please refresh the page and try again'}\n          </p>\n        </form>\n\n        {/* Map component, takes in 2 functions that are needed to set local\n        state from child component */}\n        <Map\n          handleMapClick={this.handleMapClick}\n          updateMyLocation={this.updateMyLocation}\n        />\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from './utils/firebase';\nimport App from './App';\n\n\n// Implement Google and Firebase signin\n\n\nconst uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n    signInSuccessUrl: '/signedIn',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID\n    ]\n};\n\n\nexport default class Main extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSignedIn: false\n        }\n    }\n\n\n    componentDidMount() {\n        this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n            (user) => this.setState({ isSignedIn: !!user })\n        );\n    }\n\n    render() {\n        if (!this.state.isSignedIn) {\n            return (\n                <div>\n                    <h1>My App</h1>\n                    <p>Please sign-in:</p>\n                    <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n                </div>\n            );\n        }\n        return (\n            <div>\n                <App />\n                <div style = {{textAlign : 'center'}}>\n                    <button onClick={() => firebase.auth().signOut()}>Sign Out</button>\n\n                </div>\n\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\nimport Typography from 'typography';\nimport fairyGatesTheme from 'typography-theme-fairy-gates';\nimport injectFonts from 'typography-inject-fonts';\nimport './components/input.css';\n\nconst typography = new Typography(fairyGatesTheme);\ntypography.injectStyles();\ninjectFonts(typography);\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}