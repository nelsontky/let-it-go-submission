{"version":3,"sources":["utils/firebase.js","components/map.js","components/layout.js","components/panorama.js","components/preview.js","components/submitted.js","App.js","Admin.js","Main.js","index.js"],"names":["firebase","require","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Map","_this","this","navigator","geolocation","id","watchPosition","position","lat","coords","latitude","lon","longitude","props","updateMyLocation","myLocation","setPosition","lng","accuracyRadius","setCenter","setRadius","accuracy","console","log","enableHighAccuracy","_this2","NUS","map","window","google","maps","document","getElementById","zoom","center","Marker","icon","Circle","radius","fillColor","fillOpacity","strokeWeight","addListener","e","handleMapClick","latLng","marker","setMap","getPosition","self","centerControlDiv","createElement","controlDiv","controlUI","style","backgroundColor","border","borderRadius","boxShadow","cursor","textAlign","marginBottom","height","title","appendChild","controlText","innerHTML","addEventListener","index","controls","ControlPosition","LEFT_BOTTOM","push","watchLocation","clearWatch","react_default","a","width","React","Component","layout","_ref","children","margin","maxWidth","padding","Panorama","pannellum","viewer","type","panorama","url","vaov","maxPitch","minPitch","autoLoad","Preview","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","submission","staticMapUrl","concat","facilities","handicapped","separateHandicapped","bool","textDecoration","color","name","src","alt","listStyle","glanceStyle","male","className","female","handicappedText","waterCooler","showerHeads","hose","Submission","Button","variant","onClick","handleEdit","previewId","handleHide","handlePreview","preview","Submitted","_this3","state","submissions","db","collection","doc","uid","get","then","querySnapshot","forEach","data","setState","bind","assertThisInitialized","docId","_this4","Table","TableBody","x","i","TableRow","key","TableCell","submitted_Submission","uniqid","App","myLat","myLon","progress","progressShown","error","edit","editPanorama","editDocId","fileInput","createRef","firestore","storage","handleInputChange","setToCurrentLocation","handleSubmit","event","_this$setState2","value","target","checked","defineProperty","preventDefault","currentUser","set","trim","date","Date","now","status","approval","remarks","delete","location","reload","current","files","test","Resizer","imageFileResizer","blob","fileName","uploadTask","ref","child","put","on","TaskEvent","STATE_CHANGED","snapshot","bytesTransferred","totalBytes","err","getDownloadURL","displayName","email","photoURL","alert","submissionId","scrollTo","onSubmit","TextField","label","placeholder","fullWidth","InputLabelProps","shrink","onChange","marginRight","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","disabled","accept","display","htmlFor","Math","floor","submitted","Admin","submissionsDb","toiletDb","dialogOpened","submissionToDelete","submissionToApprove","getAllSubmissions","users","user","getSubmissionsForUser","catch","newSubmissions","userUid","isFemale","isMale","isHandicapped","isSeparateHandicapped","hasHose","hasShowerHeads","hasWaterCooler","paranomaUrl","isEditing","prevState","toConsumableArray","flatMap","result","FormControl","Select","triggerDialogToConfirmApprove","submissionIndex","submissionToEdit","triggerDialogToConfirmDelete","MenuItem","approveDialogOpened","_this5","update","deleteDialogOpened","_this6","_this7","tempName","_this8","Input","defaultValue","multiline","generateFacilities","undefined","size","handleConfirmEdit","submissionAction","_this9","Paper","Dialog","onClose","open","DialogTitle","DialogContent","DialogContentText","DialogActions","approveSubmission","deleteSubmission","TableHead","generateTable","uiConfig","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","Main","isSignedIn","unregisterAuthObserver","onAuthStateChanged","Admin_Admin","signOut","src_App","StyledFirebaseAuth_default","firebaseAuth","typography","Typography","fairyGatesTheme","injectStyles","injectFonts","ReactDOM","render","Main_Main"],"mappings":"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","file":"static/js/main.0134b641.chunk.js","sourcesContent":["const firebase = require('firebase/app');\nrequire('firebase/firestore');\nrequire(\"firebase/auth\");\nrequire(\"firebase/storage\");\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n  authDomain: \"let-it-go-e6229.firebaseapp.com\",\n  databaseURL: \"https://let-it-go-e6229.firebaseio.com\",\n  projectId: \"let-it-go-e6229\",\n  storageBucket: \"let-it-go-e6229.appspot.com\",\n  messagingSenderId: \"917575844853\",\n  appId: \"1:917575844853:web:88ec0cbe059a0d43\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from 'react';\n\nclass Map extends React.Component {\n  watchLocation() {\n    if (navigator.geolocation) {\n      this.id = navigator.geolocation.watchPosition(\n        position => {\n          const lat = position.coords.latitude;\n          const lon = position.coords.longitude;\n          this.props.updateMyLocation(lat, lon);\n\n          this.myLocation.setPosition({lat: lat, lng: lon});\n          this.accuracyRadius.setCenter({lat: lat, lng: lon});\n          this.accuracyRadius.setRadius(position.coords.accuracy);\n        },\n        () => console.log('No permission'),\n        {\n          enableHighAccuracy: true,\n        },\n      );\n    } else {\n      // Browser doesn't support Geolocation\n      console.log('No permission');\n    }\n  }\n\n  componentDidMount() {\n    const NUS = {lat: 1.296675, lng: 103.776396};\n    this.map = new window.google.maps.Map(document.getElementById('map'), {\n      zoom: 13,\n      center: NUS,\n    });\n\n    this.myLocation = new window.google.maps.Marker({\n      position: NUS,\n      map: this.map,\n      icon:\n        'https://raw.githubusercontent.com/nelsontky/let-it-go/master/assets/icons/locationMarker.png',\n    });\n\n    this.accuracyRadius = new window.google.maps.Circle({\n      map: this.map,\n      center: NUS,\n      radius: 0,\n      fillColor: '#00F',\n      fillOpacity: 0.2,\n      strokeWeight: 0,\n    });\n\n    // Click listeners\n    this.map.addListener('click', e => {\n      this.props.handleMapClick(e.latLng.lat(), e.latLng.lng());\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: e.latLng,\n        map: this.map,\n      });\n    });\n    this.accuracyRadius.addListener('click', e => {\n      this.props.handleMapClick(e.latLng.lat(), e.latLng.lng());\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: e.latLng,\n        map: this.map,\n      });\n    });\n    this.myLocation.addListener('click', () => {\n      this.props.handleMapClick(\n        this.myLocation.getPosition().lat(),\n        this.myLocation.getPosition().lng(),\n      );\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: this.myLocation.getPosition(),\n        map: this.map,\n      });\n    });\n\n    // Location button\n    const self = this;\n    function CenterControl(controlDiv, map) {\n      // Set CSS for the control border.\n      let controlUI = document.createElement('div');\n      controlUI.style.backgroundColor = '#fff';\n      controlUI.style.border = '2px solid #fff';\n      controlUI.style.borderRadius = '3px';\n      controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';\n      controlUI.style.cursor = 'pointer';\n      controlUI.style.textAlign = 'center';\n      controlUI.style.marginBottom = '22px';\n      controlUI.style.height = '31px';\n      controlUI.title = 'Click to recenter the map to location';\n      controlDiv.appendChild(controlUI);\n\n      // Set CSS for the control interior.\n      let controlText = document.createElement('div');\n      controlText.innerHTML = \"<img src='https://i.imgur.com/raFRca2.png' />\";\n      controlUI.appendChild(controlText);\n\n      // Setup the click event listeners\n      controlUI.addEventListener('click', function() {\n        map.setCenter(self.myLocation.getPosition());\n      });\n    }\n\n    // Render the button\n    let centerControlDiv = document.createElement('div');\n    new CenterControl(centerControlDiv, this.map);\n\n    centerControlDiv.index = 1;\n    this.map.controls[window.google.maps.ControlPosition.LEFT_BOTTOM].push(\n      centerControlDiv,\n    );\n\n    this.watchLocation();\n  }\n\n  componentWillUnmount() {\n    navigator.geolocation.clearWatch(this.id);\n  }\n\n  render() {\n    return <div id=\"map\" style={{width: '100%', height: '300px'}}></div>;\n  }\n}\n\nexport default Map;\n","import React from 'react';\n\nexport default ({children}) => (\n  <div style={{margin: `3rem auto`, maxWidth: 650, padding: `0 1rem`}}>\n    {children}\n  </div>\n);\n","import React from 'react';\n\nclass Panorama extends React.Component {\n  componentDidMount() {\n    window.pannellum.viewer('panorama', {\n      type: 'equirectangular',\n      panorama: this.props.url,\n      vaov: 45,\n      maxPitch: 0,\n      minPitch: 0,\n      autoLoad: true,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"panorama\" style={{width: '100%', height: 200}} />\n      </div>\n    );\n  }\n}\n\nexport default Panorama;\n","import React from 'react';\nimport Layout from './layout';\nimport Panorama from './panorama';\n\nclass Preview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submission = this.props.submission;\n\n    this.staticMapUrl = `https://maps.googleapis.com/maps/api/staticmap?size=650x300&markers=|${this.submission.lat}, ${this.submission.lon}&key=${process.env.REACT_APP_GOOGLE_API_KEY}`;\n  }\n\n  handicappedText() {\n    if (!this.submission.facilities.handicapped) {\n      return 'Is handicapped accessible';\n    } else if (!this.submission.facilities.separateHandicapped)\n      return 'Is handicapped accessible (Handicapped cubicle inside toilet)';\n    else {\n      return 'Is handicapped accessible (Has separate handicapped toilet)';\n    }\n  }\n\n  glanceStyle(bool) {\n    return {\n      textDecoration: bool ? '' : 'line-through',\n      color: bool ? '' : 'gray',\n    };\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h3>{this.submission.name}</h3>\n        <img src={this.staticMapUrl} alt=\"Static map preview\" />\n        <Panorama url={this.submission.panorama.url} />\n        <h4>At a glance</h4>\n        <ul style={{listStyle: 'none'}}>\n          <li style={this.glanceStyle(this.submission.facilities.male)}>\n            <i className=\"em-svg em-man-raising-hand\" />\n            Has Male toilet\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.female)}>\n            <i className=\"em-svg em-woman-raising-hand\" />\n            Has Female toilet\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.handicapped)}>\n            <i className=\"em-svg em-wheelchair\" />\n            {this.handicappedText()}\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.waterCooler)}>\n            <i className=\"em-svg em-potable_water\" />\n            Has water cooler\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.showerHeads)}>\n            <i className=\"em-svg em-shower\" />\n            Has shower heads\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.hose)}>\n            <i className=\"em-svg em-sweat_drops\" />\n            Has hose\n          </li>\n        </ul>\n      </Layout>\n    );\n  }\n}\n\nexport default Preview;\n","import React from 'react';\nimport Preview from './preview';\n\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nclass Submission extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submission = this.props.children.submission;\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>{this.submission.name}</h4>\n        <div>\n          {/* Edit button */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() =>\n              this.props.handleEdit(this.submission, this.props.children.id)\n            }>\n            Edit\n          </Button>\n          {/* Preview button */}\n          <Button\n            variant=\"contained\"\n            color={\n              this.props.children.id === this.props.previewId\n                ? 'default'\n                : 'secondary'\n            }\n            onClick={\n              this.props.children.id === this.props.previewId\n                ? this.props.handleHide\n                : () => this.props.handlePreview(this.props.children.id)\n            }>\n            {this.props.children.id === this.props.previewId\n              ? 'Hide'\n              : 'Preview'}\n          </Button>\n        </div>\n        <br />\n        {this.submission.facilities.male && (\n          <i className=\"em-svg em-man-raising-hand\" />\n        )}\n        {this.submission.facilities.female && (\n          <i className=\"em-svg em-woman-raising-hand\" />\n        )}\n        {this.submission.facilities.handicapped && (\n          <i className=\"em-svg em-wheelchair\" />\n        )}{' '}\n        {this.submission.facilities.waterCooler && (\n          <i className=\"em-svg em-potable_water\" />\n        )}{' '}\n        {this.submission.facilities.showerHeads && (\n          <i className=\"em-svg em-shower\" />\n        )}{' '}\n        {this.submission.facilities.hose && (\n          <i className=\"em-svg em-sweat_drops\" />\n        )}\n        <br />\n        {this.props.children.id === this.props.previewId && (\n          <Preview submission={this.submission} />\n        )}\n      </div>\n    );\n  }\n}\n\nclass Submitted extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {submissions: [], previewId: ''};\n\n    // Read all of current user's submissions from firestore, then adds all\n    // submissions into state.\n    let submissions = [];\n    this.props.db\n      .collection('userSubmissions')\n      .doc(this.props.uid)\n      .collection('submissions')\n      .get()\n      .then(querySnapshot =>\n        querySnapshot.forEach(doc => {\n          submissions.push({submission: doc.data(), id: doc.id});\n        }),\n      )\n      .then(() => this.setState({submissions}));\n\n    this.handlePreview = this.handlePreview.bind(this);\n    this.handleHide = this.handleHide.bind(this);\n  }\n\n  handlePreview(docId) {\n    this.setState({\n      previewId: docId,\n    });\n  }\n\n  handleHide() {\n    this.setState({previewId: ''});\n  }\n\n  render() {\n    return (\n      <div>\n        <Table>\n          <TableBody>\n            {this.state.submissions.map((x, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                  <Submission\n                    key={i}\n                    handleEdit={this.props.handleEdit}\n                    handlePreview={this.handlePreview}\n                    handleHide={this.handleHide}\n                    previewId={this.state.previewId}>\n                    {x}\n                  </Submission>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n}\nexport default Submitted;\n","import React from 'react';\nimport Map from './components/map';\nimport Submitted from './components/submitted';\nimport Layout from './components/layout';\nimport firebase from './utils/firebase';\nimport Resizer from 'react-image-file-resizer';\n\n// Material UI imports\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nconst uniqid = require('uniqid');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      lat: 0,\n      lon: 0,\n      myLat: 0,\n      myLon: 0,\n      handicapped: false,\n      separateHandicapped: false,\n      hose: false,\n      showerHeads: false,\n      male: false,\n      female: false,\n      waterCooler: false,\n      progress: 0,\n      progressShown: false,\n      error: false,\n\n      // Fields in charge of editing.\n      edit: false,\n      panorama: {},\n      editPanorama: false,\n      editDocId: '',\n    };\n\n    this.fileInput = React.createRef();\n\n    this.db = firebase.firestore();\n    this.storage = firebase.storage();\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleMapClick = this.handleMapClick.bind(this);\n    this.updateMyLocation = this.updateMyLocation.bind(this);\n    this.setToCurrentLocation = this.setToCurrentLocation.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  // Handles state of input forms\n  handleInputChange(event) {\n    const value =\n      event.target.type === 'checkbox'\n        ? event.target.checked\n        : event.target.value;\n\n    if (event.target.name !== 'handicapped') {\n      // Any checkbox/input that is not the handicapped checkbox, set state\n      // normally.\n      this.setState({\n        [event.target.name]: value,\n      });\n    } else {\n      // For handicapped checkbox, have to make sure that separateHandicapped\n      // checkbox is unticked when handicapped checkbox is unticked.\n      this.setState({\n        [event.target.name]: value,\n        separateHandicapped: value && this.state.separateHandicapped,\n      });\n    }\n  }\n\n  // Handles map clicks, will update lat lon field to clicked lat lon.\n  handleMapClick(lat, lon) {\n    this.setState({\n      lat,\n      lon,\n    });\n  }\n\n  // Whenever geolocation code in Map component runs, myLat and myLon in local\n  // state will be updated.\n  updateMyLocation(myLat, myLon) {\n    this.setState({\n      myLat,\n      myLon,\n    });\n  }\n\n  // Handles click on \"Set Lat Lon to current location button\". Does what\n  // the button says, sets Lat Lon state to that of current location.\n  // (if available)\n  setToCurrentLocation(event) {\n    event.preventDefault();\n    this.setState({\n      lat: this.state.myLat,\n      lon: this.state.myLon,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // If user is editing submission and does not choose to reupload panorama\n    if (this.state.edit && !this.state.editPanorama) {\n      const doc = this.db\n        .collection('userSubmissions')\n        .doc(this.props.currentUser.uid);\n\n      doc\n        .collection('submissions')\n        .doc()\n        .set({\n          facilities: {\n            female: this.state.female,\n            handicapped: this.state.handicapped,\n            hose: this.state.hose,\n            male: this.state.male,\n            separateHandicapped: this.state.separateHandicapped,\n            showerHeads: this.state.showerHeads,\n            waterCooler: this.state.waterCooler,\n          },\n          lat: this.state.lat,\n          lon: this.state.lon,\n          name: this.state.name.trim(),\n\n          // Use old panorama.\n          panorama: this.state.panorama,\n\n          date: new Date(Date.now()),\n          status: {approval: 'pending', remarks: ''},\n        })\n        .then(() => {\n          // Delete old version.\n          this.db\n            .collection('userSubmissions')\n            // Set doc name to user uid\n            .doc(this.props.currentUser.uid)\n            .collection('submissions')\n            .doc(this.state.editDocId)\n            .delete();\n        })\n        .then(() => window.location.reload());\n    } else {\n      // Ensures that file uploaded is an image. Does not work if file format\n      // was changed manually but submit will still not work, just that this\n      // warning will not show too.\n      if (\n        this.fileInput.current.files[0] == null ||\n        !/image\\/*/g.test(this.fileInput.current.files[0].type)\n      ) {\n        alert('Please make sure file uploaded is an image');\n      } else {\n        // Resize images to max width of 4096 to support mobile, after resizing,\n        // image will be uploaded and firestore storage entry would be created.\n        Resizer.imageFileResizer(\n          this.fileInput.current.files[0],\n          4096,\n          4096,\n          'JPEG',\n          70,\n          0,\n          blob => {\n            // Show submission progress.\n            this.setState({progressShown: true});\n\n            // Sets file name, file name appended with a unique id to prevent\n            // overwrites.\n            const fileName = `${this.state.name} - ${uniqid()}.jpeg`;\n\n            // Uploads image to firebase storage\n            let uploadTask = this.storage\n              .ref()\n              .child(fileName)\n              .put(blob);\n\n            uploadTask.on(\n              firebase.storage.TaskEvent.STATE_CHANGED,\n              snapshot => {\n                let progress =\n                  (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n\n                this.setState({progress});\n              },\n              err => {\n                this.setState({error: true});\n              },\n              () => {\n                // Upload completed successfully\n                uploadTask.snapshot.ref.getDownloadURL().then(url => {\n                  const doc = this.db\n                    .collection('userSubmissions')\n                    // Set doc name to user uid\n                    .doc(this.props.currentUser.uid);\n\n                  // To get the document does not exist message away\n                  doc.set({\n                    currentUser: {\n                      name: this.props.currentUser.displayName,\n                      email: this.props.currentUser.email,\n                      photoURL: this.props.currentUser.photoURL,\n                      uid: this.props.currentUser.uid,\n                    },\n                  });\n\n                  doc\n                    .collection('submissions')\n                    .doc()\n                    .set({\n                      facilities: {\n                        female: this.state.female,\n                        handicapped: this.state.handicapped,\n                        hose: this.state.hose,\n                        male: this.state.male,\n                        separateHandicapped: this.state.separateHandicapped,\n                        showerHeads: this.state.showerHeads,\n                        waterCooler: this.state.waterCooler,\n                      },\n                      lat: this.state.lat,\n                      lon: this.state.lon,\n                      name: this.state.name.trim(),\n                      panorama: {url, fileName},\n                      date: new Date(Date.now()),\n                      status: {approval: 'pending', remarks: ''},\n                    })\n                    .then(() => {\n                      // If is editing submission, delete old version and old\n                      // panorama\n                      if (this.state.edit) {\n                        this.db\n                          .collection('userSubmissions')\n                          // Set doc name to user uid\n                          .doc(this.props.currentUser.uid)\n                          .collection('submissions')\n                          .doc(this.state.editDocId)\n                          .delete();\n\n                        // Delete old panorama\n                        this.storage\n                          .ref()\n                          .child(this.state.panorama.fileName)\n                          .delete();\n                      }\n                    })\n                    .then(() => window.location.reload());\n                });\n              },\n            );\n          },\n          'blob',\n        );\n      }\n    }\n  }\n\n  // Handle the editing of user submitted toilets. Meant to be passed as a prop\n  // into <Submitted /> component.\n  handleEdit(submission, submissionId) {\n    window.scrollTo(0, 0);\n    this.setState({\n      edit: true,\n      female: submission.facilities.female,\n      male: submission.facilities.male,\n      handicapped: submission.facilities.handicapped,\n      separateHandicapped: submission.facilities.separateHandicapped,\n      showerHeads: submission.facilities.showerHeads,\n      waterCooler: submission.facilities.waterCooler,\n      hose: submission.facilities.hose,\n      lat: submission.lat,\n      lon: submission.lon,\n      name: submission.name,\n      panorama: submission.panorama,\n      editDocId: submissionId,\n    });\n  }\n\n  render() {\n    // console.log(this.state);\n    return (\n      <Layout>\n        {this.state.edit && <h6>Editing submission</h6>}\n        {/* Main form */}\n        <form onSubmit={this.handleSubmit}>\n          {/* Toilet name input*/}\n          <TextField\n            label=\"Name\"\n            placeholder=\"Enter toilet name\"\n            fullWidth\n            margin=\"normal\"\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            name=\"name\"\n            onChange={this.handleInputChange}\n            value={this.state.name}\n          />\n          {/* Set Lat Lon to current location button */}\n          <Button onClick={this.setToCurrentLocation} variant=\"contained\">\n            Set Lat Lon to current location\n          </Button>\n          <br />\n          {/* Lat input */}\n          <TextField\n            style={{marginRight: '1em'}}\n            label=\"Latitude\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"lat\"\n            onChange={this.handleInputChange}\n            value={this.state.lat}\n          />\n          {/* Lon input */}\n          <TextField\n            label=\"Longitude\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"lon\"\n            onChange={this.handleInputChange}\n            value={this.state.lon}\n          />\n          {/* Map component, takes in 2 functions that are needed to set local\n        state from child component */}\n          <Map\n            handleMapClick={this.handleMapClick}\n            updateMyLocation={this.updateMyLocation}\n          />\n          <br />\n          {/* Checkboxes */}\n          <FormLabel component=\"legend\">Facilities</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.male}\n                  onChange={this.handleInputChange}\n                  name=\"male\"\n                />\n              }\n              label=\"Male\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.female}\n                  onChange={this.handleInputChange}\n                  name=\"female\"\n                />\n              }\n              label=\"Female\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.handicapped}\n                  onChange={this.handleInputChange}\n                  name=\"handicapped\"\n                />\n              }\n              label=\"Handicapped\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.separateHandicapped}\n                  onChange={this.handleInputChange}\n                  name=\"separateHandicapped\"\n                  disabled={!this.state.handicapped}\n                />\n              }\n              label=\"Separate Handicapped\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.hose}\n                  onChange={this.handleInputChange}\n                  name=\"hose\"\n                />\n              }\n              label=\"Hose\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.showerHeads}\n                  onChange={this.handleInputChange}\n                  name=\"showerHeads\"\n                />\n              }\n              label=\"Shower Heads\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.waterCooler}\n                  onChange={this.handleInputChange}\n                  name=\"waterCooler\"\n                />\n              }\n              label=\"Water Cooler\"\n            />\n          </FormGroup>\n          <br />\n\n          {/* Present user with choice to edit Panorama image if edit \n          mode is on */}\n          {this.state.edit && (\n            <div>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={this.state.editPanorama}\n                    onChange={this.handleInputChange}\n                    name=\"editPanorama\"\n                  />\n                }\n                label=\"Edit Panorama image\"\n              />\n              <br />\n            </div>\n          )}\n\n          <input\n            type=\"file\"\n            name=\"paranomaPath\"\n            accept=\"image/*\"\n            ref={this.fileInput}\n            id=\"contained-button-file\"\n            style={{display: 'none'}}\n          />\n\n          {/* Do not show upload Panorama button if in edit mode and \n          edit panorama is not chosen */}\n          {(!this.state.edit || this.state.editPanorama) && (\n            <label htmlFor=\"contained-button-file\">\n              <Button variant=\"contained\" component=\"span\">\n                Select panorama image\n              </Button>\n              {this.fileInput.current != null &&\n                this.fileInput.current.files[0] != null &&\n                ` ${this.fileInput.current.files[0].name}`}\n            </label>\n          )}\n          <br />\n          <br />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            disabled={\n              this.state.name === '' ||\n              this.state.lat === 0 ||\n              this.state.lon === 0\n            }>\n            Submit\n          </Button>\n          {/* Progress indicator */}\n          <span>\n            {this.state.progressShown &&\n              ' ' + Math.floor(this.state.progress) + '%'}\n          </span>\n          {/* Error indicator */}\n          <p>\n            {this.state.error &&\n              'An error occured, please refresh the page and try again'}\n          </p>\n          {this.state.edit && (\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => window.location.reload()}>\n              Cancel\n            </Button>\n          )}\n        </form>\n\n        <Submitted\n          uid={this.props.currentUser.uid}\n          db={this.db}\n          handleEdit={this.handleEdit}\n        />\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport firebase from './utils/firebase';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport {\n    DialogContent,\n    DialogTitle,\n    Dialog,\n    DialogActions,\n    DialogContentText,\n    Input,\n} from '@material-ui/core';\n\nexport default class Admin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.submissionsDb = firebase.firestore().collection('users');\n        this.toiletDb = firebase.firestore().collection('toilets');\n        this.state = {\n            submissions: [],\n            dialogOpened: false,\n            submissionToDelete: {},\n            submissionToApprove: {},\n\n        };\n        this.getAllSubmissions();\n\n    }\n\n    componentWiUpdate() {\n        this.getAllSubmissions();\n    }\n\n    getAllSubmissions() {\n        let users = [];\n        this.submissionsDb\n            .get()\n            .then(querySnapshot => {\n                querySnapshot.forEach(user => {\n                    users.push(user.data().uid);\n                });\n            })\n            .then(() => {\n                users.forEach(user => this.getSubmissionsForUser(user));\n            })\n            .catch(error => {\n                alert(error);\n            });\n    }\n\n    getSubmissionsForUser(user) {\n        let newSubmissions = [];\n        this.submissionsDb\n            .doc(user)\n            .collection('submissions')\n            .get()\n            .then(querySnapshot => {\n                querySnapshot.forEach(submission => {\n                    newSubmissions.push({\n                        userUid: user,\n                        isFemale: submission.data().facilities.female,\n                        isMale: submission.data().facilities.male,\n                        isHandicapped: submission.data().facilities.handicapped,\n                        isSeparateHandicapped: submission.data().facilities\n                            .separateHandicapped,\n                        hasHose: submission.data().facilities.hose,\n                        hasShowerHeads: submission.data().facilities.showerHeads,\n                        hasWaterCooler: submission.data().facilities.waterCooler,\n                        lat: submission.data().lat,\n                        lon: submission.data().lon,\n                        name: submission.data().name,\n                        paranomaUrl: submission.data().paranomaUrl,\n                        status: submission.data().status,\n                        isEditing: false\n                    });\n                });\n            })\n            .then(() => {\n                this.setState(prevState => ({\n                    submissions: [...prevState.submissions, newSubmissions],\n                }));\n            })\n            .then(() => {\n                this.setState(prevState => ({\n                    submissions: prevState.submissions.flatMap(x => x),\n                }));\n                console.log(this.state.submissions);\n            });\n    }\n\n    generateFacilities(submission) {\n        let result = '';\n\n        if (submission.isMale) {\n            result += '🙋‍♂️';\n        }\n        if (submission.isFemale) {\n            result += '🙋‍';\n        }\n        if (submission.hasWaterCooler) {\n            result += '🚰';\n        }\n        if (submission.hasShowerHeads) {\n            result += '🚿';\n        }\n        if (submission.hasHose) {\n            result += '💦';\n        }\n        if (submission.isHandicapped) {\n            result += '♿';\n        }\n        if (submission.isSeparateHandicapped) {\n            result += '😭';\n        }\n        return result;\n    }\n\n    submissionAction(index) {\n        const values = {\n            age: [10, 20, 30],\n        };\n        return (\n            <FormControl>\n                <Select\n                    value={values.age}\n                    onChange={event => {\n\n                        let submission = this.state.submissions[index];\n                        switch (event.target.value) {\n\n                            case \"Approved\":\n\n                                this.triggerDialogToConfirmApprove(submission, index)\n                                break;\n                            case \"Edit\":\n                                let submissions = [...this.state.submissions];\n                                submission.isEditing = true;\n                                submissions[index] = submission;\n                                this.setState({\n                                    submissions: submissions,\n                                    submissionIndex: index,\n                                    submissionToEdit : submission\n                                })\n                                break;\n                            case \"Rejected\":\n                                this.triggerDialogToConfirmDelete(submission, index)\n                                break;\n                        }\n                    }}>\n                    <MenuItem value={'Edit'}>Edit</MenuItem>\n                    <MenuItem value={'Approved'}>Approved</MenuItem>\n                    <MenuItem value={'Rejected'}>Rejected</MenuItem>\n                </Select>\n            </FormControl>\n        );\n    }\n    triggerDialogToConfirmApprove(submission, index) {\n        this.setState({\n            submissionToApprove: submission,\n            submissionIndex: index,\n            approveDialogOpened: true,\n        });\n    }\n    approveSubmission() {\n        // This chunk is just to update an object in the array of the state\n        let submissions = [...this.state.submissions];\n        let submission = this.state.submissionToApprove;\n        submission.status = 'Approved';\n        submissions[this.state.submissionIndex] = submission;\n        // update submissions to show approved \n        this.submissionsDb\n            .doc(this.state.submissionToApprove.userUid)\n            .collection('submissions')\n            .doc(this.state.submissionToApprove.name)\n            .update({\n                status: \"Approved\"\n            })\n\n\n\n        // submission to official toilet database\n        this.toiletDb\n            .doc(submission.name)\n            .set({\n                facilities: {\n                    female: submission.isFemale,\n                    handicapped: submission.isHandicapped,\n                    hose: submission.hasHose,\n                    male: submission.isMale,\n                    separateHandicapped: submission.isSeparateHandicapped,\n                    showerHeads: submission.hasShowerHeads,\n                    waterCooler: submission.hasWaterCooler,\n                },\n                lat: submission.lat,\n                lon: submission.lon,\n                name: submission.name,\n                paranomaUrl: submission.paranomaUrl,\n            })\n            .then(() => {\n                this.setState({\n                    submissions: submissions,\n                    approveDialogOpened: false,\n                });\n                alert(submission.name + ' has been approved!');\n            });\n    }\n    triggerDialogToConfirmDelete(submission, index) {\n        this.setState({\n            submissionToDelete: submission,\n            submissionIndex: index,\n            deleteDialogOpened: true,\n        });\n    }\n    deleteSubmission() {\n        this.submissionsDb\n            .doc(this.state.submissionToDelete.userUid)\n            .collection('submissions')\n            .doc(this.state.submissionToDelete.name)\n            .delete()\n            .then(() => {\n                this.setState({\n                    deleteDialogOpened: false,\n                });\n                this.getAllSubmissions();\n                alert(this.state.submissionToDelete.name + ' has been deleted forever');\n                window.location.reload();\n            });\n    }\n\n\n    handleConfirmEdit(index) {\n        let submission = this.state.submissionToEdit\n        // create a new doc \n        this.submissionsDb\n            .doc(this.state.submissionToEdit.userUid)\n            .collection('submissions')\n            .doc(this.state.tempName)\n            .set({\n                facilities: {\n                    female: submission.isFemale,\n                    handicapped: submission.isHandicapped,\n                    hose: submission.hasHose,\n                    male: submission.isMale,\n                    separateHandicapped: submission.isSeparateHandicapped,\n                    showerHeads: submission.hasShowerHeads,\n                    waterCooler: submission.hasWaterCooler,\n                },\n                lat: submission.lat,\n                lon: submission.lon,\n                name: this.state.tempName,\n                paranomaUrl: submission.paranomaUrl,\n            }).then(\n                () => {\n                    let submissions = [...this.state.submissions];\n                    submission.isEditing = false;\n                    submissions[this.state.submissionIndex] = submission;\n                    this.submissionsDb\n                        .doc(this.state.submissionToEdit.userUid)\n                        .collection('submissions')\n                        .doc(this.state.submissionToEdit.name)\n                        .delete()\n                        .then(\n                            () => {\n                                this.setState({\n                                    submissions,\n                                })\n                                alert('Successfully edited!')\n                                window.location.reload()\n                            }\n                        ).catch(\n                            error => alert(error)\n                        )\n                }\n            )\n\n    }\n\n\n    generateTable() {\n        let index = -1;\n        return (\n            this.state.submissions.map(submission => {\n                index++;\n                return submission.isEditing\n                    ? (<TableRow>\n                        <TableCell>\n                            <Input\n                                defaultValue={this.state.submissions[index].name}\n                                multiline\n                                fullWidth\n                                onChange={(event) => this.setState({\n                                    tempName: event.target.value,\n                                    submissionToEdit: submission\n                                })}\n                            />\n                        </TableCell>\n                        <TableCell>{submission.userUid}</TableCell>\n                        <TableCell>{this.generateFacilities(submission)}</TableCell>\n                        <TableCell>\n                            {submission.status == undefined\n                                ? 'Pending'\n                                : submission.status}{' '}\n                        </TableCell>\n                        <TableCell>\n                            <Button size = 'small' onClick={() => {\n                                this.handleConfirmEdit(index)\n                            }}> Confirm Changes </Button>\n                            <Button size = 'small' onClick={() => {\n                                let submissions = [...this.state.submissions];\n                                let submission = this.state.submissionToEdit;\n                                submission.isEditing = false;\n                                submissions[index] = submission;\n                                \n                                this.setState({\n                                    submissions : submissions\n                                })\n                                \n                            }}> Cancel </Button>\n                        </TableCell>\n                    </TableRow>\n                    )\n                    : (\n                        <TableRow>\n                            <TableCell>{submission.name}</TableCell>\n                            <TableCell>{submission.userUid}</TableCell>\n                            <TableCell>{this.generateFacilities(submission)}</TableCell>\n                            <TableCell>\n                                {submission.status == undefined\n                                    ? 'Pending'\n                                    : submission.status}{' '}\n                            </TableCell>\n                            <TableCell>{this.submissionAction(index)}</TableCell>\n                        </TableRow>\n                    )\n\n            })\n        )\n    }\n\n\n\n    render() {\n\n        return (\n            <Paper style={{ margin: 20 }}>\n                <Dialog\n                    onClose={() => {\n                        this.setState({ approveDialogOpened: false });\n                    }}\n                    open={this.state.approveDialogOpened}>\n                    <DialogTitle>Are you sure?</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {'Once you press approve the submission, ' +\n                                this.state.submissionToApprove.name +\n                                ' will be pushed to the main database'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => this.approveSubmission()}>Approve</Button>\n                        <Button\n                            onClick={() => {\n                                this.setState({ approveDialogOpened: false });\n                            }}>\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    onClose={() => {\n                        this.setState({ deleteDialogOpened: false });\n                    }}\n                    open={this.state.deleteDialogOpened}>\n                    <DialogTitle>Are you sure?</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {'Once you press delete there is no turning back, the submission, ' +\n                                this.state.submissionToDelete.name +\n                                ' will forever be gone!'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => this.deleteSubmission()}>Delete</Button>\n                        <Button\n                            onClick={() => {\n                                this.setState({ deleteDialogOpened: false });\n                            }}>\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n\n\n\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Location</TableCell>\n                            <TableCell>User </TableCell>\n                            <TableCell>Facilities</TableCell>\n                            <TableCell>Status</TableCell>\n                            <TableCell>Action</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.generateTable()}\n                    </TableBody>\n                </Table>\n            </Paper>\n        );\n    }\n}\n","import React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from './utils/firebase';\nimport App from './App';\nimport Admin from './Admin';\n\n\n// Implement Google and Firebase signin\n\nconst uiConfig = {\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n};\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSignedIn: false,\n    };\n  }\n\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase\n      .auth()\n      .onAuthStateChanged(user => this.setState({ isSignedIn: !!user }));\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <div>\n          <h1>My App</h1>\n          <p>Please sign-in:</p>\n          <StyledFirebaseAuth\n            uiConfig={uiConfig}\n            firebaseAuth={firebase.auth()}\n          />\n        </div>\n      );\n    }\n\n\n\n    if (firebase.auth().currentUser.email == \"lowzxx@gmail.com\" || firebase.auth().currentUser.email == \"nelsontkyi@gmail.comz\") {      \n      return (\n        <div>\n          <Admin />\n          <div style={{ textAlign: 'center' }}>\n            <button onClick={() => firebase.auth().signOut()}>Sign Out</button>\n          </div>\n        </div>\n\n      )\n    } else {\n      return (\n        <div>\n          <App currentUser={firebase.auth().currentUser} />\n          <div style={{ textAlign: 'center' }}>\n            <button onClick={() => firebase.auth().signOut()}>Sign Out</button>\n          </div>\n        </div>\n      );\n\n    }\n\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\nimport Typography from 'typography';\nimport fairyGatesTheme from 'typography-theme-fairy-gates';\nimport injectFonts from 'typography-inject-fonts';\n\nconst typography = new Typography(fairyGatesTheme);\ntypography.injectStyles()\ninjectFonts(typography)\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}