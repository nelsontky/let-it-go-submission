{"version":3,"sources":["components/layout.js","utils/firebase.js","components/randomToiletQuote.js","components/panorama.js","components/preview.js","Admin.js","components/map.js","components/submissionsSortingDropdown.js","components/status.js","components/submitted.js","App.js","components/switchPortals.js","Main.js","index.js"],"names":["layout","_ref","children","react_default","a","createElement","style","margin","maxWidth","padding","firebase","require","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","quoteStyle","color","fontFamily","fontSize","fontStyle","lineHeight","textShadow","zIndex","textAlign","RandomToiletQuote","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","unmounted","db","firestore","_this2","collection","doc","get","then","quotes","data","randomQuote","Math","floor","random","length","setState","quote","catch","React","Component","Panorama","viewer","window","pannellum","type","panorama","url","vaov","maxPitch","minPitch","autoLoad","destroy","id","width","height","Preview","submission","staticMapUrl","concat","lat","lon","facilities","handicapped","separateHandicapped","bool","textDecoration","name","src","alt","listStyle","glanceStyle","male","className","female","handicappedText","waterCooler","showerHeads","hose","Admin","submissionsDb","toiletDb","reviewsDb","submissions","submissionToReject","submissionToApprove","remarks","previewRow","getAllSubmissions","newSubmissions","map","Map","users","forEach","userObj","user","currentUser","uid","onSnapshot","querySnapshot","obj","userUid","docId","date","isFemale","isMale","isHandicapped","isSeparateHandicapped","hasHose","hasShowerHeads","hasWaterCooler","paranomaUrl","status","approval","has","set","push","docChanges","change","idToRemove","submissionToRemove","find","element","rowId","index","result","_this3","FormControl","Select","value","onChange","event","target","triggerDialogToConfirmApprove","handleRejectSubmissionClicked","MenuItem","submissionIndex","approveDialogOpened","_this4","update","rejectDialogOpened","_this5","defineProperty","_this6","i","Fragment","key","TableRow","TableCell","Button","onClick","generateFacilities","size","TextField","multiline","defaultValue","fullWidth","inputProps","handleTextChange","submissionAction","colSpan","preview","assign","_this7","Paper","Dialog","onClose","open","DialogTitle","DialogContent","DialogContentText","DialogActions","approveSubmission","rejectSubmission","Table","onRowSelection","TableHead","TableBody","generateTable","navigator","geolocation","watchPosition","position","coords","latitude","longitude","updateMyLocation","myLocation","setPosition","lng","accuracyRadius","setCenter","setRadius","accuracy","console","log","enableHighAccuracy","NUS","google","maps","document","getElementById","zoom","center","Marker","icon","Circle","radius","fillColor","fillOpacity","strokeWeight","addListener","e","handleMapClick","latLng","marker","setMap","getPosition","self","centerControlDiv","controlDiv","controlUI","backgroundColor","border","borderRadius","boxShadow","cursor","marginBottom","title","appendChild","controlText","innerHTML","addEventListener","controls","ControlPosition","LEFT_BOTTOM","watchLocation","clearWatch","SubmissionsSortingDropdown","InputLabel","autoWidth","handleSorting","Status","remarksShown","compareByName","b","localeCompare","compareByDate","toDate","compareByStatus","aValue","bValue","Submission","status_Status","variant","previewId","handleHide","handlePreview","handleEdit","handleDelete","fileName","Delete_default","toLocaleString","day","month","year","hour","minute","second","Submitted","loading","sortBy","sort","bind","assertThisInitialized","slice","submissionsSortingDropdown_SubmissionsSortingDropdown","x","submitted_Submission","uniqid","App","myLat","myLon","progress","progressShown","error","submissionsShown","edit","editPanorama","editDocId","fileInput","createRef","storage","handleInputChange","setToCurrentLocation","handleSubmit","_this$setState2","checked","preventDefault","trim","Date","now","delete","location","reload","current","files","test","Resizer","imageFileResizer","blob","uploadTask","ref","child","put","on","TaskEvent","STATE_CHANGED","snapshot","bytesTransferred","totalBytes","err","getDownloadURL","displayName","photoURL","alert","submissionId","confirm","scrollTo","onSubmit","label","placeholder","InputLabelProps","shrink","marginRight","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","disabled","accept","display","htmlFor","submitted","SwitchPortals","isAdmin","Admin_Admin","src_App","uiConfig","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","Main","isSignedIn","unregisterAuthObserver","onAuthStateChanged","signOut","email","switchPortals_SwitchPortals","StyledFirebaseAuth_default","firebaseAuth","randomToiletQuote_RandomToiletQuote","typography","Typography","fairyGatesTheme","injectStyles","injectFonts","ReactDOM","render","Main_Main"],"mappings":"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","file":"static/js/main.3b46b0e5.chunk.js","sourcesContent":["import React from 'react';\n\nexport default ({children}) => (\n  <div style={{margin: `3rem auto`, maxWidth: 650, padding: `0 1rem`}}>\n    {children}\n  </div>\n);\n","const firebase = require('firebase/app');\nrequire('firebase/firestore');\nrequire(\"firebase/auth\");\nrequire(\"firebase/storage\");\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n  authDomain: \"let-it-go-e6229.firebaseapp.com\",\n  databaseURL: \"https://let-it-go-e6229.firebaseio.com\",\n  projectId: \"let-it-go-e6229\",\n  storageBucket: \"let-it-go-e6229.appspot.com\",\n  messagingSenderId: \"917575844853\",\n  appId: \"1:917575844853:web:88ec0cbe059a0d43\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from 'react';\nimport firebase from '../utils/firebase';\n\nconst quoteStyle = {\n  color: 'gray',\n  fontFamily: 'Georgia, serif',\n  fontSize: '1.5em',\n  fontStyle: 'italic',\n  lineHeight: '1.4',\n  margin: '0',\n  textShadow: '0 1px white',\n  zIndex: '600',\n  textAlign: 'center',\n};\n\nexport default class RandomToiletQuote extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.unmounted = false;\n    this.db = firebase.firestore();\n  }\n\n  componentDidMount() {\n    this.db\n      .collection('toiletQuotes')\n      .doc('quotes')\n      .get()\n      .then(doc => {\n        const quotes = doc.data().quotes;\n        const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];\n        if (!this.unmounted) {\n          this.setState({quote: '“' + randomQuote + '”'});\n        }\n      })\n      .catch(() =>\n        this.setState({quote: '“Feces are meant to be released in peace.”'}),\n      );\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n  }\n\n  render() {\n    return <p style={quoteStyle}>{this.state.quote}</p>;\n  }\n}\n","import React from 'react';\n\nclass Panorama extends React.Component {\n  componentDidMount() {\n    this.viewer = window.pannellum.viewer('panorama', {\n      type: 'equirectangular',\n      panorama: this.props.url,\n      vaov: 45,\n      maxPitch: 0,\n      minPitch: 0,\n      autoLoad: true,\n    });\n  }\n\n  componentWillUnmount() {\n    this.viewer.destroy();\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"panorama\" style={{width: '100%', height: 200}} />\n      </div>\n    );\n  }\n}\n\nexport default Panorama;\n","import React from 'react';\nimport Layout from './layout';\nimport Panorama from './panorama';\n\nclass Preview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submission = this.props.submission;\n\n    this.staticMapUrl = `https://maps.googleapis.com/maps/api/staticmap?size=650x300&markers=|${this.submission.lat}, ${this.submission.lon}&key=${process.env.REACT_APP_GOOGLE_API_KEY}`;\n  }\n\n  handicappedText() {\n    if (!this.submission.facilities.handicapped) {\n      return 'Is handicapped accessible';\n    } else if (!this.submission.facilities.separateHandicapped)\n      return 'Is handicapped accessible (Handicapped cubicle inside toilet)';\n    else {\n      return 'Is handicapped accessible (Has separate handicapped toilet)';\n    }\n  }\n\n  glanceStyle(bool) {\n    return {\n      textDecoration: bool ? '' : 'line-through',\n      color: bool ? '' : 'gray',\n    };\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h3>{this.submission.name}</h3>\n        <img src={this.staticMapUrl} alt=\"Static map preview\" />\n        <Panorama url={this.submission.panorama.url} />\n        <h4>At a glance</h4>\n        <ul style={{listStyle: 'none'}}>\n          <li style={this.glanceStyle(this.submission.facilities.male)}>\n            <i className=\"em-svg em-man-raising-hand\" />\n            Has Male toilet\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.female)}>\n            <i className=\"em-svg em-woman-raising-hand\" />\n            Has Female toilet\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.handicapped)}>\n            <i className=\"em-svg em-wheelchair\" />\n            {this.handicappedText()}\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.waterCooler)}>\n            <i className=\"em-svg em-potable_water\" />\n            Has water cooler\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.showerHeads)}>\n            <i className=\"em-svg em-shower\" />\n            Has shower heads\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.hose)}>\n            <i className=\"em-svg em-sweat_drops\" />\n            Has hose\n          </li>\n        </ul>\n      </Layout>\n    );\n  }\n}\n\nexport default Preview;\n","import React from 'react';\nimport Preview from './components/preview';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport firebase from './utils/firebase';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport {\n  DialogContent,\n  DialogTitle,\n  Dialog,\n  DialogActions,\n  DialogContentText,\n  TextField,\n} from '@material-ui/core';\n\nexport default class Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submissionsDb = firebase.firestore().collection('userSubmissions');\n    this.toiletDb = firebase.firestore().collection('toilets');\n    this.reviewsDb = firebase.firestore().collection('reviews');\n    this.state = {\n      submissions: [],\n      submissionToReject: {},\n      submissionToApprove: {},\n      remarks: '',\n      previewRow: null,\n    };\n    this.getAllSubmissions();\n  }\n\n  getAllSubmissions() {\n    let newSubmissions = [];\n    const map = new Map();\n\n    this.submissionsDb.get().then(users => {\n      users.forEach(userObj => {\n        let user = userObj.data().currentUser.uid;\n\n        this.submissionsDb\n          .doc(user)\n          .collection('submissions')\n          .onSnapshot(querySnapshot => {\n            querySnapshot.forEach(submission => {\n              let obj = {\n                userUid: user,\n                docId: submission.id,\n                date: submission.data().date,\n                isFemale: submission.data().facilities.female,\n                isMale: submission.data().facilities.male,\n                isHandicapped: submission.data().facilities.handicapped,\n                isSeparateHandicapped: submission.data().facilities\n                  .separateHandicapped,\n                hasHose: submission.data().facilities.hose,\n                hasShowerHeads: submission.data().facilities.showerHeads,\n                hasWaterCooler: submission.data().facilities.waterCooler,\n                lat: submission.data().lat,\n                lon: submission.data().lon,\n                name: submission.data().name,\n                paranomaUrl: submission.data().panorama.url,\n\n                // editing\n                status: submission.data().status.approval,\n                remarks: submission.data().status.remarks,\n              };\n\n              if (!map.has(obj.docId)) {\n                map.set(obj.docId, true);\n                newSubmissions.push(obj);\n              } else {\n                // if not in array then replace with the new updated one at the same position\n              }\n            });\n\n            querySnapshot.docChanges().forEach(change => {\n              let idToRemove = change.doc.id;\n              let submissionToRemove = newSubmissions.find(\n                element => element.docId === idToRemove,\n              );\n              let rowId = submissionToRemove.rowId;\n              newSubmissions[rowId] = {\n                userUid: user,\n                docId: submissionToRemove.id,\n                date: change.doc.data().date,\n                isFemale: change.doc.data().facilities.female,\n                isMale: change.doc.data().facilities.male,\n                isHandicapped: change.doc.data().facilities.handicapped,\n                isSeparateHandicapped: change.doc.data().facilities\n                  .separateHandicapped,\n                hasHose: change.doc.data().facilities.hose,\n                hasShowerHeads: change.doc.data().facilities.showerHeads,\n                hasWaterCooler: change.doc.data().facilities.waterCooler,\n                lat: change.doc.data().lat,\n                lon: change.doc.data().lon,\n                name: change.doc.data().name,\n                paranomaUrl: change.doc.data().panorama.url,\n\n                // editing\n                status: change.doc.data().status.approval,\n                remarks: change.doc.data().status.remarks,\n              };\n            });\n\n            let index = -1;\n            newSubmissions.map(submission => {\n              index++;\n              submission.rowId = index;\n              return submission;\n            });\n            this.setState({submissions: newSubmissions});\n          });\n      });\n    });\n  }\n  generateFacilities(submission) {\n    let result = '';\n\n    if (submission.isMale) {\n      result += '🙋‍♂️';\n    }\n    if (submission.isFemale) {\n      result += '🙋‍';\n    }\n    if (submission.hasWaterCooler) {\n      result += '🚰';\n    }\n    if (submission.hasShowerHeads) {\n      result += '🚿';\n    }\n    if (submission.hasHose) {\n      result += '💦';\n    }\n    if (submission.isHandicapped) {\n      result += '♿';\n    }\n    if (submission.isSeparateHandicapped) {\n      result += '😭';\n    }\n    return result;\n  }\n  submissionAction(index) {\n    const values = {\n      age: [10, 20, 30],\n    };\n    return (\n      <FormControl>\n        <Select\n          value={values.age}\n          onChange={event => {\n            let submission = this.state.submissions[index];\n            switch (event.target.value) {\n              case 'Approve':\n                this.triggerDialogToConfirmApprove(submission, index);\n                break;\n              case 'Reject':\n                this.handleRejectSubmissionClicked(submission, index);\n                break;\n              default:\n                break;\n            }\n          }}>\n          <MenuItem value={'Approve'}>Approve</MenuItem>\n          <MenuItem value={'Reject'}>Reject</MenuItem>\n        </Select>\n      </FormControl>\n    );\n  }\n  triggerDialogToConfirmApprove(submission, index) {\n    this.setState({\n      submissionToApprove: submission,\n      submissionIndex: index,\n      approveDialogOpened: true,\n    });\n  }\n  approveSubmission() {\n    let remarks = this.state.remarks[this.state.submissionIndex];\n    let submission = this.state.submissionToApprove;\n    this.submissionsDb\n      .doc(this.state.submissionToApprove.userUid)\n      .collection('submissions')\n      .doc(this.state.submissionToApprove.name)\n      .update({\n        status: {\n          approval: 'approved',\n          remarks: remarks,\n        },\n      }); // submission to official toilet database\n    this.toiletDb\n      .doc(submission.name)\n      .set({\n        facilities: {\n          female: submission.isFemale,\n          handicapped: submission.isHandicapped,\n          hose: submission.hasHose,\n          male: submission.isMale,\n          separateHandicapped: submission.isSeparateHandicapped,\n          showerHeads: submission.hasShowerHeads,\n          waterCooler: submission.hasWaterCooler,\n        },\n        lat: submission.lat,\n        lon: submission.lon,\n        name: submission.name,\n        paranomaUrl: submission.paranomaUrl,\n      })\n      .then(() => {\n        this.setState({\n          // submissions: submissions,\n          approveDialogOpened: false,\n        });\n      }); // create a review object in the review database\n    this.reviewsDb.doc(submission.name).set({});\n  }\n  handleRejectSubmissionClicked(submission, index) {\n    this.setState({\n      rejectDialogOpened: true,\n      submissionToReject: submission,\n      submissionIndex: index,\n    });\n  }\n  rejectSubmission() {\n    // update the rejection reason in the firestore\n    let remarks = this.state.remarks[this.state.submissionIndex];\n    this.submissionsDb\n      .doc(this.state.submissionToReject.userUid)\n      .collection('submissions')\n      .doc(this.state.submissionToReject.docId)\n      .update({\n        status: {\n          approval: 'rejected',\n          remarks: remarks ? remarks : this.state.submissionToReject.remarks,\n        },\n      })\n      .then(() => {\n        this.setState({\n          rejectDialogOpened: false,\n        });\n      });\n  }\n  handleTextChange(event, rowId) {\n    this.setState({\n      remarks: {\n        [rowId]: event.target.value,\n      },\n    });\n  }\n  generateTable() {\n    return this.state.submissions.map((submission, i) => {\n      return (\n        <React.Fragment key={i}>\n          <TableRow>\n            <TableCell>\n              {submission.name + ' '}\n\n              {/* Show preview button if toilet is not previewed. If toilet is\n              being previewed, then show hide button */}\n              {submission.rowId !== this.state.previewRow ? (\n                <Button\n                  onClick={() => this.setState({previewRow: submission.rowId})}\n                  color=\"primary\">\n                  Preview\n                </Button>\n              ) : (\n                <Button\n                  onClick={() => this.setState({previewRow: null})}\n                  color=\"secondary\">\n                  Hide\n                </Button>\n              )}\n            </TableCell>\n            <TableCell>{this.generateFacilities(submission)}</TableCell>\n            <TableCell size=\"small\">\n              {\n                <TextField\n                  multiline\n                  defaultValue={submission.remarks}\n                  fullWidth\n                  margin=\"dense\"\n                  inputProps={{style: {fontSize: 15}}}\n                  onChange={event => {\n                    this.handleTextChange(event, submission.rowId);\n                  }}\n                />\n              }\n            </TableCell>\n            <TableCell>\n              {submission.status == null ? 'Pending' : submission.status}{' '}\n            </TableCell>\n            <TableCell>{this.submissionAction(submission.rowId)}</TableCell>\n          </TableRow>\n\n          {/* Sets up preview, hacky way to fit zx \n          data structure to Nelson's */}\n          {this.state.previewRow === submission.rowId && (\n            <TableRow>\n              <TableCell colSpan={5}>\n                <Preview\n                  submission={Object.assign(\n                    {\n                      panorama: {url: submission.paranomaUrl},\n                      facilities: {\n                        hose: submission.hasHose,\n                        showerHeads: submission.hasShowerHeads,\n                        waterCooler: submission.hasWaterCooler,\n                        male: submission.isMale,\n                        separateHandicapped: submission.isSeparateHandicapped,\n                        handicapped: submission.isHandicapped,\n                        female: submission.isFemale,\n                      },\n                    },\n                    submission,\n                  )}\n                />\n              </TableCell>\n            </TableRow>\n          )}\n        </React.Fragment>\n      );\n    });\n  }\n  render() {\n    return (\n      <Paper style={{margin: 20}}>\n        <Dialog\n          onClose={() => {\n            this.setState({approveDialogOpened: false});\n          }}\n          open={this.state.approveDialogOpened}>\n          <DialogTitle>Are you sure?</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              {'Do you really want to approve ' +\n                this.state.submissionToApprove.name +\n                ' with the remarks ' +\n                (this.state.remarks[this.state.submissionIndex]\n                  ? this.state.remarks[this.state.submissionIndex]\n                  : this.state.submissionToApprove.remarks) +\n                '?'}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => this.approveSubmission()}>Approve</Button>\n            <Button\n              onClick={() => {\n                this.setState({approveDialogOpened: false});\n              }}>\n              Cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Dialog\n          onClose={() => {\n            this.setState({rejectDialogOpened: false});\n          }}\n          open={this.state.rejectDialogOpened}>\n          <DialogTitle>Are you sure?</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              {'Do you really want to reject ' +\n                this.state.submissionToReject.name +\n                ' with the remarks ' +\n                (this.state.remarks[this.state.submissionIndex]\n                  ? this.state.remarks[this.state.submissionIndex]\n                  : this.state.submissionToReject.remarks) +\n                '?'}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => this.rejectSubmission()}>Reject</Button>\n            <Button\n              onClick={() => {\n                this.setState({rejectDialogOpened: false});\n              }}>\n              Cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Table onRowSelection={this.onRowSelection}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Location</TableCell>\n              <TableCell>Facilities</TableCell>\n              <TableCell>Remarks </TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>{this.generateTable()}</TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n}\n","import React from 'react';\n\nclass Map extends React.Component {\n  watchLocation() {\n    if (navigator.geolocation) {\n      this.id = navigator.geolocation.watchPosition(\n        position => {\n          const lat = position.coords.latitude;\n          const lon = position.coords.longitude;\n          this.props.updateMyLocation(lat, lon);\n\n          this.myLocation.setPosition({lat: lat, lng: lon});\n          this.accuracyRadius.setCenter({lat: lat, lng: lon});\n          this.accuracyRadius.setRadius(position.coords.accuracy);\n        },\n        () => console.log('No permission'),\n        {\n          enableHighAccuracy: true,\n        },\n      );\n    } else {\n      // Browser doesn't support Geolocation\n      console.log('No permission');\n    }\n  }\n\n  componentDidMount() {\n    const NUS = {lat: 1.296675, lng: 103.776396};\n    this.map = new window.google.maps.Map(document.getElementById('map'), {\n      zoom: 13,\n      center: NUS,\n    });\n\n    this.myLocation = new window.google.maps.Marker({\n      position: NUS,\n      map: this.map,\n      icon:\n        'https://raw.githubusercontent.com/nelsontky/let-it-go/master/assets/icons/locationMarker.png',\n    });\n\n    this.accuracyRadius = new window.google.maps.Circle({\n      map: this.map,\n      center: NUS,\n      radius: 0,\n      fillColor: '#00F',\n      fillOpacity: 0.2,\n      strokeWeight: 0,\n    });\n\n    // Click listeners\n    this.map.addListener('click', e => {\n      this.props.handleMapClick(e.latLng.lat(), e.latLng.lng());\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: e.latLng,\n        map: this.map,\n      });\n    });\n    this.accuracyRadius.addListener('click', e => {\n      this.props.handleMapClick(e.latLng.lat(), e.latLng.lng());\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: e.latLng,\n        map: this.map,\n      });\n    });\n    this.myLocation.addListener('click', () => {\n      this.props.handleMapClick(\n        this.myLocation.getPosition().lat(),\n        this.myLocation.getPosition().lng(),\n      );\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: this.myLocation.getPosition(),\n        map: this.map,\n      });\n    });\n\n    // Location button\n    const self = this;\n    function CenterControl(controlDiv, map) {\n      // Set CSS for the control border.\n      let controlUI = document.createElement('div');\n      controlUI.style.backgroundColor = '#fff';\n      controlUI.style.border = '2px solid #fff';\n      controlUI.style.borderRadius = '3px';\n      controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';\n      controlUI.style.cursor = 'pointer';\n      controlUI.style.textAlign = 'center';\n      controlUI.style.marginBottom = '22px';\n      controlUI.style.height = '31px';\n      controlUI.title = 'Click to recenter the map to location';\n      controlDiv.appendChild(controlUI);\n\n      // Set CSS for the control interior.\n      let controlText = document.createElement('div');\n      controlText.innerHTML = \"<img src='https://i.imgur.com/raFRca2.png' />\";\n      controlUI.appendChild(controlText);\n\n      // Setup the click event listeners\n      controlUI.addEventListener('click', function() {\n        map.setCenter(self.myLocation.getPosition());\n      });\n    }\n\n    // Render the button\n    let centerControlDiv = document.createElement('div');\n    new CenterControl(centerControlDiv, this.map);\n\n    centerControlDiv.index = 1;\n    this.map.controls[window.google.maps.ControlPosition.LEFT_BOTTOM].push(\n      centerControlDiv,\n    );\n\n    this.watchLocation();\n  }\n\n  componentWillUnmount() {\n    navigator.geolocation.clearWatch(this.id);\n  }\n\n  render() {\n    return <div id=\"map\" style={{width: '100%', height: '300px'}}></div>;\n  }\n}\n\nexport default Map;\n","import React from 'react';\n\n// Material UI imports\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nexport default class SubmissionsSortingDropdown extends React.Component {\n  render() {\n    return (\n      <FormControl>\n        <InputLabel>Sort by</InputLabel>\n        <Select\n          value={this.props.value}\n          autoWidth\n          onChange={this.props.handleSorting}\n        >\n          <MenuItem value=\"name\">Name</MenuItem>\n          <MenuItem value=\"date\">Date (Newest first)</MenuItem>\n          <MenuItem value=\"status\">Status</MenuItem>\n        </Select>\n      </FormControl>\n    );\n  }\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nexport default class Status extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {remarksShown: false};\n\n    this.approval = this.props.status.approval;\n    this.remarks = this.props.status.remarks;\n  }\n\n  render() {\n    if (this.approval === 'rejected') {\n      return (\n        <div>\n          <p style={{color: 'red'}}>\n            {'Rejected '}\n            <Button\n              color='primary'\n              onClick={() =>\n                this.setState({remarksShown: !this.state.remarksShown})\n              }>\n                {this.state.remarksShown ? 'Hide' : 'Show reason'}\n            </Button>\n          </p>\n          {this.state.remarksShown && <p>{this.remarks}</p>}\n        </div>\n      );\n    } else if (this.approval === 'pending') {\n      return (\n        <p>\n          <em>Submission pending review</em>\n        </p>\n      );\n    } else {\n      return <p style={{color: 'green'}}>Approved!</p>;\n    }\n  }\n}\n","import React from 'react';\nimport Preview from './preview';\nimport SubmissionsSortingDropdown from './submissionsSortingDropdown';\nimport Status from './status';\n\n// Material UI imports\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nfunction compareByName(a, b) {\n  return a.submission.name.localeCompare(b.submission.name);\n}\n\nfunction compareByDate(a, b) {\n  return b.submission.date.toDate() - a.submission.date.toDate();\n}\n\nfunction compareByStatus(a, b) {\n  let aValue;\n  let bValue;\n\n  switch (a.submission.status.approval) {\n    case 'rejected':\n      aValue = -1;\n      break;\n    case 'approved':\n      aValue = 0;\n      break;\n    default:\n      aValue = 1;\n      break;\n  }\n\n  switch (b.submission.status.approval) {\n    case 'rejected':\n      bValue = -1;\n      break;\n    case 'approved':\n      bValue = 0;\n      break;\n    default:\n      bValue = 1;\n      break;\n  }\n\n  return aValue - bValue;\n}\n\nclass Submission extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submission = this.props.children.submission;\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>{this.submission.name}</h4>\n\n        {/* Status text */}\n        <Status status={this.submission.status} />\n        <div>\n          {/* Preview button */}\n          <Button\n            variant=\"contained\"\n            color={\n              this.props.children.id === this.props.previewId\n                ? 'secondary'\n                : 'default'\n            }\n            onClick={\n              this.props.children.id === this.props.previewId\n                ? this.props.handleHide\n                : () => this.props.handlePreview(this.props.children.id)\n            }>\n            {this.props.children.id === this.props.previewId\n              ? 'Hide'\n              : 'Preview'}\n          </Button>{' '}\n          {/* Edit button */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() =>\n              this.props.handleEdit(this.submission, this.props.children.id)\n            }>\n            Edit\n          </Button>{' '}\n          {/* Delete button */}\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() =>\n              this.props.handleDelete(\n                this.submission.panorama.fileName,\n                this.props.children.id,\n              )\n            }>\n            Delete\n            <DeleteIcon />\n          </Button>\n        </div>\n        <br />\n        <div style={{color: 'gray', fontSize: '80%'}}>\n          Submitted:{' '}\n          {this.submission.date.toDate().toLocaleString('default', {\n            day: 'numeric',\n            month: 'long',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n          })}\n        </div>\n        <br />\n        {this.props.children.id === this.props.previewId && (\n          <Preview submission={this.submission} />\n        )}\n      </div>\n    );\n  }\n}\n\nclass Submitted extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      submissions: [],\n      previewId: '',\n      loading: true,\n      sortBy: 'status',\n    };\n\n    // Read all of current user's submissions from firestore, then adds all\n    // submissions into state.\n    let submissions = [];\n    this.props.doc\n      .collection('submissions')\n      .get()\n      .then(querySnapshot =>\n        querySnapshot.forEach(doc => {\n          submissions.push({submission: doc.data(), id: doc.id});\n        }),\n      )\n      .then(() => {\n        // Sorts by status\n        submissions.sort(compareByStatus);\n        this.setState({submissions, loading: false});\n      });\n\n    this.handlePreview = this.handlePreview.bind(this);\n    this.handleHide = this.handleHide.bind(this);\n    this.handleSorting = this.handleSorting.bind(this);\n  }\n\n  handlePreview(docId) {\n    this.setState({\n      previewId: docId,\n    });\n  }\n\n  handleHide() {\n    this.setState({previewId: ''});\n  }\n\n  handleSorting(event) {\n    let submissions = this.state.submissions.slice();\n\n    switch (event.target.value) {\n      case 'name':\n        submissions.sort(compareByName);\n        break;\n      case 'date':\n        submissions.sort(compareByDate);\n        break;\n      case 'status':\n        submissions.sort(compareByStatus);\n        break;\n      default:\n        break;\n    }\n\n    this.setState({submissions, sortBy: event.target.value});\n  }\n\n  render() {\n    return (\n      <div>\n        {/* Loading message */}\n        {this.state.loading && <span>Loading... ...</span>}\n        {!this.state.loading && this.state.submissions.length === 0 && (\n          <span>You have not created any submissions (yet!)</span>\n        )}\n\n        {!this.state.loading && this.state.submissions.length !== 0 && (\n          <div>\n            <br />\n            <SubmissionsSortingDropdown\n              key={this.state.sortBy}\n              value={this.state.sortBy}\n              handleSorting={this.handleSorting}\n            />\n            <Table>\n              <TableBody>\n                {this.state.submissions.map((x, i) => (\n                  <TableRow key={i}>\n                    <TableCell>\n                      <Submission\n                        key={this.state.sortBy}\n                        handleEdit={this.props.handleEdit}\n                        handleDelete={this.props.handleDelete}\n                        handlePreview={this.handlePreview}\n                        handleHide={this.handleHide}\n                        previewId={this.state.previewId}>\n                        {x}\n                      </Submission>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default Submitted;\n","import React from 'react';\nimport Map from './components/map';\nimport Submitted from './components/submitted';\nimport Layout from './components/layout';\nimport firebase from './utils/firebase';\nimport Resizer from 'react-image-file-resizer';\n\n// Material UI imports\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nconst uniqid = require('uniqid');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      lat: 0,\n      lon: 0,\n      myLat: 0,\n      myLon: 0,\n      handicapped: false,\n      separateHandicapped: false,\n      hose: false,\n      showerHeads: false,\n      male: false,\n      female: false,\n      waterCooler: false,\n      progress: 0,\n      progressShown: false,\n      error: false,\n      submissionsShown: false,\n\n      // Fields in charge of editing.\n      edit: false,\n      panorama: {},\n      editPanorama: false,\n      editDocId: '',\n    };\n\n    this.fileInput = React.createRef();\n\n    this.db = firebase.firestore();\n    this.storage = firebase.storage();\n\n    // Document created by user\n    this.doc = this.db\n      .collection('userSubmissions')\n      .doc(this.props.currentUser.uid);\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleMapClick = this.handleMapClick.bind(this);\n    this.updateMyLocation = this.updateMyLocation.bind(this);\n    this.setToCurrentLocation = this.setToCurrentLocation.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  // Handles state of input forms\n  handleInputChange(event) {\n    const value =\n      event.target.type === 'checkbox'\n        ? event.target.checked\n        : event.target.value;\n\n    if (event.target.name !== 'handicapped') {\n      // Any checkbox/input that is not the handicapped checkbox, set state\n      // normally.\n      this.setState({\n        [event.target.name]: value,\n      });\n    } else {\n      // For handicapped checkbox, have to make sure that separateHandicapped\n      // checkbox is unticked when handicapped checkbox is unticked.\n      this.setState({\n        [event.target.name]: value,\n        separateHandicapped: value && this.state.separateHandicapped,\n      });\n    }\n  }\n\n  // Handles map clicks, will update lat lon field to clicked lat lon.\n  handleMapClick(lat, lon) {\n    this.setState({\n      lat,\n      lon,\n    });\n  }\n\n  // Whenever geolocation code in Map component runs, myLat and myLon in local\n  // state will be updated.\n  updateMyLocation(myLat, myLon) {\n    this.setState({\n      myLat,\n      myLon,\n    });\n  }\n\n  // Handles click on \"Set Lat Lon to current location button\". Does what\n  // the button says, sets Lat Lon state to that of current location.\n  // (if available)\n  setToCurrentLocation(event) {\n    event.preventDefault();\n    this.setState({\n      lat: this.state.myLat,\n      lon: this.state.myLon,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // If user is editing submission and does not choose to reupload panorama\n    if (this.state.edit && !this.state.editPanorama) {\n      this.doc\n        .collection('submissions')\n        .doc()\n        .set({\n          facilities: {\n            female: this.state.female,\n            handicapped: this.state.handicapped,\n            hose: this.state.hose,\n            male: this.state.male,\n            separateHandicapped: this.state.separateHandicapped,\n            showerHeads: this.state.showerHeads,\n            waterCooler: this.state.waterCooler,\n          },\n          lat: this.state.lat,\n          lon: this.state.lon,\n          name: this.state.name.trim(),\n\n          // Use old panorama.\n          panorama: this.state.panorama,\n\n          date: new Date(Date.now()),\n          status: {approval: 'pending', remarks: ''},\n        })\n        .then(() => {\n          // Delete old version.\n          this.doc\n            .collection('submissions')\n            .doc(this.state.editDocId)\n            .delete();\n        })\n        .then(() => window.location.reload());\n    } else {\n      // Ensures that file uploaded is an image. Does not work if file format\n      // was changed manually but submit will still not work, just that this\n      // warning will not show too.\n      if (\n        this.fileInput.current.files[0] == null ||\n        !/image\\/*/g.test(this.fileInput.current.files[0].type)\n      ) {\n        alert('Please make sure file uploaded is an image');\n      } else {\n        // Resize images to max width of 4096 to support mobile, after resizing,\n        // image will be uploaded and firestore storage entry would be created.\n        Resizer.imageFileResizer(\n          this.fileInput.current.files[0],\n          4096,\n          4096,\n          'JPEG',\n          70,\n          0,\n          blob => {\n            // Show submission progress.\n            this.setState({progressShown: true});\n\n            // Sets file name, file name appended with a unique id to prevent\n            // overwrites.\n            const fileName = `${this.state.name} - ${uniqid()}.jpeg`;\n\n            // Uploads image to firebase storage\n            let uploadTask = this.storage\n              .ref()\n              .child(`${this.props.currentUser.uid}/${fileName}`)\n              .put(blob);\n\n            uploadTask.on(\n              firebase.storage.TaskEvent.STATE_CHANGED,\n              snapshot => {\n                let progress =\n                  (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n\n                this.setState({progress});\n              },\n              err => {\n                this.setState({error: true});\n              },\n              () => {\n                // Upload completed successfully\n                uploadTask.snapshot.ref.getDownloadURL().then(url => {\n                  // Keys in current user info into the user's document,\n                  // excludes email for privacy reasons.\n                  this.doc.set({\n                    currentUser: {\n                      name: this.props.currentUser.displayName,\n                      photoURL: this.props.currentUser.photoURL,\n                      uid: this.props.currentUser.uid,\n                    },\n                  });\n\n                  this.doc\n                    .collection('submissions')\n                    .doc()\n                    .set({\n                      facilities: {\n                        female: this.state.female,\n                        handicapped: this.state.handicapped,\n                        hose: this.state.hose,\n                        male: this.state.male,\n                        separateHandicapped: this.state.separateHandicapped,\n                        showerHeads: this.state.showerHeads,\n                        waterCooler: this.state.waterCooler,\n                      },\n                      lat: this.state.lat,\n                      lon: this.state.lon,\n                      name: this.state.name.trim(),\n                      panorama: {url, fileName},\n                      date: new Date(Date.now()),\n                      status: {approval: 'pending', remarks: ''},\n                    })\n                    .then(() => {\n                      // If is editing submission, delete old version and old\n                      // panorama\n                      if (this.state.edit) {\n                        this.doc\n                          .collection('submissions')\n                          .doc(this.state.editDocId)\n                          .delete();\n\n                        // Delete old panorama\n                        this.storage\n                          .ref()\n                          .child(\n                            `${this.props.currentUser.uid}/${this.state.panorama.fileName}`,\n                          )\n                          .delete();\n                      }\n                    })\n                    .then(() => window.location.reload());\n                });\n              },\n            );\n          },\n          'blob',\n        );\n      }\n    }\n  }\n\n  // Handle the deleting of submission. Meant to be passed as a prop\n  // into <Submitted /> component.\n  handleDelete(fileName, submissionId) {\n    if (window.confirm('Are you sure you want to delete this submission?')) {\n      // Deletes document from firestore.\n      this.doc\n        .collection('submissions')\n        .doc(submissionId)\n        .delete()\n        .then(() =>\n          // Deletes panorama image from storage.\n          this.storage\n            .ref()\n            .child(`${this.props.currentUser.uid}/${fileName}`)\n            .delete()\n            .then(() => window.location.reload()),\n        );\n    }\n  }\n\n  // Handle the editing of user submitted toilets. Meant to be passed as a prop\n  // into <Submitted /> component.\n  handleEdit(submission, submissionId) {\n    window.scrollTo(0, 0);\n    this.setState({\n      edit: true,\n      female: submission.facilities.female,\n      male: submission.facilities.male,\n      handicapped: submission.facilities.handicapped,\n      separateHandicapped: submission.facilities.separateHandicapped,\n      showerHeads: submission.facilities.showerHeads,\n      waterCooler: submission.facilities.waterCooler,\n      hose: submission.facilities.hose,\n      lat: submission.lat,\n      lon: submission.lon,\n      name: submission.name,\n      panorama: submission.panorama,\n      editDocId: submissionId,\n    });\n  }\n\n  render() {\n    // console.log(this.state);\n    return (\n      <Layout>\n        <h1>Submit to Let It Go</h1>\n        {this.state.edit && <h6>Editing submission</h6>}\n        {/* Main form */}\n        <form onSubmit={this.handleSubmit}>\n          {/* Toilet name input*/}\n          <TextField\n            label=\"Name\"\n            placeholder=\"Enter toilet name\"\n            fullWidth\n            margin=\"normal\"\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            name=\"name\"\n            onChange={this.handleInputChange}\n            value={this.state.name}\n          />\n          {/* Set Lat Lon to current location button */}\n          <Button onClick={this.setToCurrentLocation} variant=\"contained\">\n            Set Lat Lon to current location\n          </Button>\n          <br />\n          {/* Lat input */}\n          <TextField\n            style={{marginRight: '1em'}}\n            label=\"Latitude\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"lat\"\n            onChange={this.handleInputChange}\n            value={this.state.lat}\n          />\n          {/* Lon input */}\n          <TextField\n            label=\"Longitude\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"lon\"\n            onChange={this.handleInputChange}\n            value={this.state.lon}\n          />\n          {/* Map component, takes in 2 functions that are needed to set local\n        state from child component */}\n          <Map\n            handleMapClick={this.handleMapClick}\n            updateMyLocation={this.updateMyLocation}\n          />\n          <br />\n          {/* Checkboxes */}\n          <FormLabel component=\"legend\">Facilities</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.male}\n                  onChange={this.handleInputChange}\n                  name=\"male\"\n                />\n              }\n              label=\"Male\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.female}\n                  onChange={this.handleInputChange}\n                  name=\"female\"\n                />\n              }\n              label=\"Female\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.handicapped}\n                  onChange={this.handleInputChange}\n                  name=\"handicapped\"\n                />\n              }\n              label=\"Handicapped\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.separateHandicapped}\n                  onChange={this.handleInputChange}\n                  name=\"separateHandicapped\"\n                  disabled={!this.state.handicapped}\n                />\n              }\n              label=\"Separate Handicapped\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.hose}\n                  onChange={this.handleInputChange}\n                  name=\"hose\"\n                />\n              }\n              label=\"Hose\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.showerHeads}\n                  onChange={this.handleInputChange}\n                  name=\"showerHeads\"\n                />\n              }\n              label=\"Shower Heads\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.waterCooler}\n                  onChange={this.handleInputChange}\n                  name=\"waterCooler\"\n                />\n              }\n              label=\"Water Cooler\"\n            />\n          </FormGroup>\n          <br />\n\n          {/* Present user with choice to edit Panorama image if edit\n          mode is on */}\n          {this.state.edit && (\n            <div>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={this.state.editPanorama}\n                    onChange={this.handleInputChange}\n                    name=\"editPanorama\"\n                  />\n                }\n                label=\"Edit Panorama image\"\n              />\n              <br />\n            </div>\n          )}\n\n          <input\n            type=\"file\"\n            name=\"paranomaPath\"\n            accept=\"image/*\"\n            ref={this.fileInput}\n            id=\"contained-button-file\"\n            style={{display: 'none'}}\n          />\n\n          {/* Do not show upload Panorama button if in edit mode and\n          edit panorama is not chosen */}\n          {(!this.state.edit || this.state.editPanorama) && (\n            <label htmlFor=\"contained-button-file\">\n              <Button variant=\"contained\" component=\"span\">\n                Select panorama image\n              </Button>\n            </label>\n          )}\n          <br />\n          <br />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            disabled={\n              this.state.name === '' ||\n              this.state.lat === 0 ||\n              this.state.lon === 0\n            }>\n            Submit\n          </Button>\n          {/* Progress indicator */}\n          <span>\n            {this.state.progressShown &&\n              ' ' + Math.floor(this.state.progress) + '%'}\n          </span>\n          {/* Error indicator */}\n          <p>\n            {this.state.error &&\n              'An error occured, please refresh the page and try again'}\n          </p>\n          {this.state.edit && (\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => window.location.reload()}>\n              Cancel\n            </Button>\n          )}\n        </form>\n\n        <Button\n          color=\"secondary\"\n          onClick={() =>\n            this.setState({submissionsShown: !this.state.submissionsShown})\n          }>\n          {`${this.state.submissionsShown ? 'Hide' : 'Show'} your submissions`}\n        </Button>\n\n        {this.state.submissionsShown && (\n          <Submitted\n            uid={this.props.currentUser.uid}\n            doc={this.doc}\n            handleEdit={this.handleEdit}\n            handleDelete={this.handleDelete}\n          />\n        )}\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport Admin from '../Admin';\nimport App from '../App';\n\nimport Button from '@material-ui/core/Button';\n\nexport default class SwitchPortals extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isAdmin: true};\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{textAlign: 'center'}}>\n          <Button\n            onClick={() => this.setState({isAdmin: !this.state.isAdmin})}\n            variant=\"contained\"\n            color=\"secondary\">\n            {`Switch to ${this.state.isAdmin ? 'submission' : 'admin'} portal`}\n          </Button>\n        </div>\n        {!this.state.isAdmin ? (\n          <App currentUser={this.props.currentUser} />\n        ) : (\n          <Admin />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Layout from './components/layout';\nimport RandomToiletQuote from './components/randomToiletQuote';\nimport SwitchPortals from './components/switchPortals';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from './utils/firebase';\nimport App from './App';\n\nimport Button from '@material-ui/core/Button';\n\nfunction isNelsonOrZx(email) {\n  return email === 'lowzxx@gmail.com' || email === 'nelsontkyi@gmail.com';\n}\n\n// Implement Google and Firebase signin\n\nconst uiConfig = {\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n};\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSignedIn: false,\n    };\n  }\n\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase\n      .auth()\n      .onAuthStateChanged(user => this.setState({isSignedIn: !!user}));\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <Layout>\n          <h1>Submit to Let It Go</h1>\n          <p>Please sign-in:</p>\n          <StyledFirebaseAuth\n            uiConfig={uiConfig}\n            firebaseAuth={firebase.auth()}\n          />\n          <RandomToiletQuote />\n        </Layout>\n      );\n    } else {\n      return (\n        <div>\n          <Layout>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => firebase.auth().signOut()}>\n              Sign Out\n            </Button>\n          </Layout>\n\n          {/* Give option to switch portals if is admin logging in, else just\n          show the submission portal */}\n          {isNelsonOrZx(firebase.auth().currentUser.email) ? (\n            <SwitchPortals currentUser={firebase.auth().currentUser} />\n          ) : (\n            <App currentUser={firebase.auth().currentUser} />\n          )}\n        </div>\n      );\n    }\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\nimport Typography from 'typography';\nimport fairyGatesTheme from 'typography-theme-fairy-gates';\nimport injectFonts from 'typography-inject-fonts';\n\nconst typography = new Typography(fairyGatesTheme);\ntypography.injectStyles()\ninjectFonts(typography)\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}