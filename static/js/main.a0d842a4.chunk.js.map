{"version":3,"sources":["components/layout.js","utils/firebase.js","components/randomToiletQuote.js","components/panorama.js","components/preview.js","Admin.js","components/map.js","components/submissionsSortingDropdown.js","components/status.js","components/submitted.js","App.js","components/switchPortals.js","Main.js","index.js"],"names":["layout","_ref","children","react_default","a","createElement","style","margin","maxWidth","padding","firebase","require","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","quoteStyle","color","fontFamily","fontSize","fontStyle","lineHeight","textShadow","zIndex","textAlign","RandomToiletQuote","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","unmounted","db","firestore","_this2","collection","doc","get","then","quotes","data","randomQuote","Math","floor","random","length","setState","quote","catch","React","Component","Panorama","viewer","window","pannellum","type","panorama","url","vaov","maxPitch","minPitch","autoLoad","destroy","id","width","height","Preview","submission","staticMapUrl","concat","lat","lon","facilities","handicapped","separateHandicapped","bool","textDecoration","name","src","alt","listStyle","glanceStyle","male","className","female","handicappedText","waterCooler","showerHeads","hose","Admin","submissionsDb","toiletDb","reviewsDb","storage","submissions","submissionToReject","submissionToApprove","remarks","previewRow","getAllSubmissions","newSubmissions","map","Map","users","forEach","userObj","user","currentUser","uid","onSnapshot","querySnapshot","obj","userUid","docId","date","isFemale","isMale","isHandicapped","isSeparateHandicapped","hasHose","hasShowerHeads","hasWaterCooler","paranomaUrl","panoramaFileName","fileName","status","approval","has","set","push","docChanges","change","idToRemove","submissionToRemove","find","element","rowId","index","_this3","FormControl","Select","value","onChange","event","target","triggerDialogToConfirmApprove","handleRejectSubmissionClicked","MenuItem","submissionIndex","approveDialogOpened","_this4","update","refFromURL","getDownloadURL","xhr","XMLHttpRequest","responseType","onload","blob","response","uploadTask","ref","child","put","on","error","console","log","snapshot","panoramaUrl","open","send","rejectDialogOpened","_this5","defineProperty","_this6","i","Fragment","key","TableRow","TableCell","Button","onClick","generateFacilities","size","TextField","multiline","defaultValue","fullWidth","inputProps","handleTextChange","submissionAction","colSpan","preview","assign","_this7","Paper","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","approveSubmission","rejectSubmission","Table","onRowSelection","TableHead","TableBody","generateTable","navigator","geolocation","watchPosition","position","coords","latitude","longitude","updateMyLocation","myLocation","setPosition","lng","accuracyRadius","setCenter","setRadius","accuracy","enableHighAccuracy","NUS","google","maps","document","getElementById","zoom","center","Marker","icon","Circle","radius","fillColor","fillOpacity","strokeWeight","addListener","e","handleMapClick","latLng","marker","setMap","getPosition","self","centerControlDiv","controlDiv","controlUI","backgroundColor","border","borderRadius","boxShadow","cursor","marginBottom","title","appendChild","controlText","innerHTML","addEventListener","controls","ControlPosition","LEFT_BOTTOM","watchLocation","clearWatch","SubmissionsSortingDropdown","InputLabel","autoWidth","handleSorting","Status","remarksShown","compareByName","b","localeCompare","compareByDate","toDate","compareByStatus","aValue","bValue","Submission","status_Status","variant","previewId","handleHide","handlePreview","disabled","handleEdit","handleDelete","Delete_default","toLocaleString","day","month","year","hour","minute","second","Submitted","loading","sortBy","sort","bind","assertThisInitialized","slice","submissionsSortingDropdown_SubmissionsSortingDropdown","x","submitted_Submission","uniqid","App","myLat","myLon","progress","progressShown","submissionsShown","edit","editPanorama","editDocId","fileInput","createRef","handleInputChange","setToCurrentLocation","handleSubmit","_this$setState2","checked","preventDefault","trim","Date","now","delete","location","reload","current","files","test","Resizer","imageFileResizer","TaskEvent","STATE_CHANGED","bytesTransferred","totalBytes","err","displayName","photoURL","alert","submissionId","confirm","scrollTo","onSubmit","label","placeholder","InputLabelProps","shrink","marginRight","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","accept","display","htmlFor","submitted","SwitchPortals","isAdmin","Admin_Admin","src_App","uiConfig","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","Main","isSignedIn","unregisterAuthObserver","onAuthStateChanged","signOut","email","switchPortals_SwitchPortals","StyledFirebaseAuth_default","firebaseAuth","randomToiletQuote_RandomToiletQuote","typography","Typography","fairyGatesTheme","injectStyles","injectFonts","ReactDOM","render","Main_Main"],"mappings":"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","file":"static/js/main.a0d842a4.chunk.js","sourcesContent":["import React from 'react';\n\nexport default ({children}) => (\n  <div style={{margin: `3rem auto`, maxWidth: 650, padding: `0 1rem`}}>\n    {children}\n  </div>\n);\n","const firebase = require('firebase/app');\nrequire('firebase/firestore');\nrequire(\"firebase/auth\");\nrequire(\"firebase/storage\");\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n  authDomain: \"let-it-go-e6229.firebaseapp.com\",\n  databaseURL: \"https://let-it-go-e6229.firebaseio.com\",\n  projectId: \"let-it-go-e6229\",\n  storageBucket: \"let-it-go-e6229.appspot.com\",\n  messagingSenderId: \"917575844853\",\n  appId: \"1:917575844853:web:88ec0cbe059a0d43\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from 'react';\nimport firebase from '../utils/firebase';\n\nconst quoteStyle = {\n  color: 'gray',\n  fontFamily: 'Georgia, serif',\n  fontSize: '1.5em',\n  fontStyle: 'italic',\n  lineHeight: '1.4',\n  margin: '0',\n  textShadow: '0 1px white',\n  zIndex: '600',\n  textAlign: 'center',\n};\n\nexport default class RandomToiletQuote extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.unmounted = false;\n    this.db = firebase.firestore();\n  }\n\n  componentDidMount() {\n    this.db\n      .collection('toiletQuotes')\n      .doc('quotes')\n      .get()\n      .then(doc => {\n        const quotes = doc.data().quotes;\n        const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];\n        if (!this.unmounted) {\n          this.setState({quote: '“' + randomQuote + '”'});\n        }\n      })\n      .catch(() =>\n        this.setState({quote: '“Feces are meant to be released in peace.”'}),\n      );\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n  }\n\n  render() {\n    return <p style={quoteStyle}>{this.state.quote}</p>;\n  }\n}\n","import React from 'react';\n\nclass Panorama extends React.Component {\n  componentDidMount() {\n    this.viewer = window.pannellum.viewer('panorama', {\n      type: 'equirectangular',\n      panorama: this.props.url,\n      vaov: 45,\n      maxPitch: 0,\n      minPitch: 0,\n      autoLoad: true,\n    });\n  }\n\n  componentWillUnmount() {\n    this.viewer.destroy();\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"panorama\" style={{width: '100%', height: 200}} />\n      </div>\n    );\n  }\n}\n\nexport default Panorama;\n","import React from 'react';\nimport Layout from './layout';\nimport Panorama from './panorama';\n\nclass Preview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submission = this.props.submission;\n\n    this.staticMapUrl = `https://maps.googleapis.com/maps/api/staticmap?size=650x300&markers=|${this.submission.lat}, ${this.submission.lon}&key=${process.env.REACT_APP_GOOGLE_API_KEY}`;\n  }\n\n  handicappedText() {\n    if (!this.submission.facilities.handicapped) {\n      return 'Is handicapped accessible';\n    } else if (!this.submission.facilities.separateHandicapped)\n      return 'Is handicapped accessible (Handicapped cubicle inside toilet)';\n    else {\n      return 'Is handicapped accessible (Has separate handicapped toilet)';\n    }\n  }\n\n  glanceStyle(bool) {\n    return {\n      textDecoration: bool ? '' : 'line-through',\n      color: bool ? '' : 'gray',\n    };\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h3>{this.submission.name}</h3>\n        <img src={this.staticMapUrl} alt=\"Static map preview\" />\n        <Panorama url={this.submission.panorama.url} />\n        <h4>At a glance</h4>\n        <ul style={{listStyle: 'none'}}>\n          <li style={this.glanceStyle(this.submission.facilities.male)}>\n            <i className=\"em-svg em-man-raising-hand\" />\n            Has Male toilet\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.female)}>\n            <i className=\"em-svg em-woman-raising-hand\" />\n            Has Female toilet\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.handicapped)}>\n            <i className=\"em-svg em-wheelchair\" />\n            {this.handicappedText()}\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.waterCooler)}>\n            <i className=\"em-svg em-potable_water\" />\n            Has water cooler\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.showerHeads)}>\n            <i className=\"em-svg em-shower\" />\n            Has shower heads\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.hose)}>\n            <i className=\"em-svg em-sweat_drops\" />\n            Has hose\n          </li>\n        </ul>\n      </Layout>\n    );\n  }\n}\n\nexport default Preview;\n","import React from 'react';\nimport Preview from './components/preview';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport firebase from './utils/firebase';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport {\n  DialogContent,\n  DialogTitle,\n  Dialog,\n  DialogActions,\n  DialogContentText,\n  TextField,\n} from '@material-ui/core';\n\nexport default class Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submissionsDb = firebase.firestore().collection('userSubmissions');\n    this.toiletDb = firebase.firestore().collection('toilets');\n    this.reviewsDb = firebase.firestore().collection('reviews');\n\n    this.storage = firebase.storage();\n\n    this.state = {\n      submissions: [],\n      submissionToReject: {},\n      submissionToApprove: {},\n      remarks: '',\n      previewRow: null,\n    };\n    this.getAllSubmissions();\n  }\n\n  getAllSubmissions() {\n    let newSubmissions = [];\n    const map = new Map();\n\n    this.submissionsDb.get().then(users => {\n      users.forEach(userObj => {\n        let user = userObj.data().currentUser.uid;\n\n        this.submissionsDb\n          .doc(user)\n          .collection('submissions')\n          .onSnapshot(querySnapshot => {\n            querySnapshot.forEach(submission => {\n              let obj = {\n                userUid: user,\n                docId: submission.id,\n                date: submission.data().date,\n                isFemale: submission.data().facilities.female,\n                isMale: submission.data().facilities.male,\n                isHandicapped: submission.data().facilities.handicapped,\n                isSeparateHandicapped: submission.data().facilities\n                  .separateHandicapped,\n                hasHose: submission.data().facilities.hose,\n                hasShowerHeads: submission.data().facilities.showerHeads,\n                hasWaterCooler: submission.data().facilities.waterCooler,\n                lat: submission.data().lat,\n                lon: submission.data().lon,\n                name: submission.data().name,\n                paranomaUrl: submission.data().panorama.url,\n\n                // Needed for reupload of file\n                panoramaFileName: submission.data().panorama.fileName,\n\n                // editing\n                status: submission.data().status.approval,\n                remarks: submission.data().status.remarks,\n              };\n\n              if (!map.has(obj.docId)) {\n                map.set(obj.docId, true);\n                newSubmissions.push(obj);\n              } else {\n                // if not in array then replace with the new updated one at the same position\n              }\n            });\n\n            querySnapshot.docChanges().forEach(change => {\n              let idToRemove = change.doc.id;\n              let submissionToRemove = newSubmissions.find(\n                element => element.docId === idToRemove,\n              );\n              let rowId = submissionToRemove.rowId;\n              newSubmissions[rowId] = {\n                userUid: user,\n                docId: submissionToRemove.id,\n                date: change.doc.data().date,\n                isFemale: change.doc.data().facilities.female,\n                isMale: change.doc.data().facilities.male,\n                isHandicapped: change.doc.data().facilities.handicapped,\n                isSeparateHandicapped: change.doc.data().facilities\n                  .separateHandicapped,\n                hasHose: change.doc.data().facilities.hose,\n                hasShowerHeads: change.doc.data().facilities.showerHeads,\n                hasWaterCooler: change.doc.data().facilities.waterCooler,\n                lat: change.doc.data().lat,\n                lon: change.doc.data().lon,\n                name: change.doc.data().name,\n                paranomaUrl: change.doc.data().panorama.url,\n\n                // editing\n                status: change.doc.data().status.approval,\n                remarks: change.doc.data().status.remarks,\n              };\n            });\n\n            let index = -1;\n            newSubmissions.map(submission => {\n              index++;\n              submission.rowId = index;\n              return submission;\n            });\n            this.setState({submissions: newSubmissions});\n          });\n      });\n    });\n  }\n  generateFacilities(submission) {\n    return (\n      <div style={{textAlign: 'center'}}>\n        {submission.isMale && <i className=\"em-svg em-man-raising-hand\" />}\n        {submission.isFemale && <i className=\"em-svg em-woman-raising-hand\" />}\n        {submission.hasWaterCooler && (\n          <i className=\"em-svg em-potable_water\" />\n        )}{' '}\n        {submission.hasShowerHeads && <i className=\"em-svg em-shower\" />}{' '}\n        {submission.hasHose && <i className=\"em-svg em-sweat_drops\" />}{' '}\n        {submission.isHandicapped && <i className=\"em-svg em-wheelchair\" />}\n      </div>\n    );\n  }\n  submissionAction(index) {\n    const values = {\n      age: [10, 20, 30],\n    };\n    return (\n      <FormControl>\n        <Select\n          value={values.age}\n          onChange={event => {\n            let submission = this.state.submissions[index];\n            switch (event.target.value) {\n              case 'Approve':\n                this.triggerDialogToConfirmApprove(submission, index);\n                break;\n              case 'Reject':\n                this.handleRejectSubmissionClicked(submission, index);\n                break;\n              default:\n                break;\n            }\n          }}>\n          <MenuItem value={'Approve'}>Approve</MenuItem>\n          <MenuItem value={'Reject'}>Reject</MenuItem>\n        </Select>\n      </FormControl>\n    );\n  }\n  triggerDialogToConfirmApprove(submission, index) {\n    this.setState({\n      submissionToApprove: submission,\n      submissionIndex: index,\n      approveDialogOpened: true,\n    });\n  }\n  approveSubmission() {\n    let remarks = this.state.remarks[this.state.submissionIndex];\n    let submission = this.state.submissionToApprove;\n    this.submissionsDb\n      .doc(this.state.submissionToApprove.userUid)\n      .collection('submissions')\n      .doc(this.state.submissionToApprove.docId)\n      .update({\n        status: {\n          approval: 'approved',\n          // In case of empty remarks\n          remarks: remarks == null ? \"\" : remarks,\n        },\n      });\n\n    // submission to official toilet database\n    // Downloads panorama to reupload\n    this.storage\n      .refFromURL(submission.paranomaUrl)\n      .getDownloadURL()\n      .then(url => {\n        // Downloading panorama\n        var xhr = new XMLHttpRequest();\n        xhr.responseType = 'blob';\n        xhr.onload = event => {\n          const blob = xhr.response;\n\n          // Uploading the downloaded blob\n          const uploadTask = this.storage\n            .ref()\n            .child(`approved/${submission.panoramaFileName}`)\n            .put(blob);\n\n          uploadTask.on(\n            'state_changed',\n            null,\n            error => console.log(error),\n            () => {\n              // Upload successful\n              uploadTask.snapshot.ref.getDownloadURL().then(panoramaUrl => {\n\n                // Submit to main db, changes the panoramaUrl too (This is\n                // largely your original code @zx\n                this.toiletDb\n                  .doc(submission.name)\n                  .set({\n                    facilities: {\n                      female: submission.isFemale,\n                      handicapped: submission.isHandicapped,\n                      hose: submission.hasHose,\n                      male: submission.isMale,\n                      separateHandicapped: submission.isSeparateHandicapped,\n                      showerHeads: submission.hasShowerHeads,\n                      waterCooler: submission.hasWaterCooler,\n                    },\n                    lat: submission.lat,\n                    lon: submission.lon,\n                    name: submission.name,\n                    paranomaUrl: panoramaUrl,\n                  })\n                  .then(() => {\n                    this.setState({\n                      // submissions: submissions,\n                      approveDialogOpened: false,\n                    });\n                  }); // create a review object in the review database\n                this.reviewsDb.doc(submission.name).set({});\n              });\n            },\n          );\n        };\n        xhr.open('GET', url);\n        xhr.send();\n      });\n  }\n\n  handleRejectSubmissionClicked(submission, index) {\n    this.setState({\n      rejectDialogOpened: true,\n      submissionToReject: submission,\n      submissionIndex: index,\n    });\n  }\n  rejectSubmission() {\n    // update the rejection reason in the firestore\n    let remarks = this.state.remarks[this.state.submissionIndex];\n    this.submissionsDb\n      .doc(this.state.submissionToReject.userUid)\n      .collection('submissions')\n      .doc(this.state.submissionToReject.docId)\n      .update({\n        status: {\n          approval: 'rejected',\n          remarks: remarks ? remarks : this.state.submissionToReject.remarks,\n        },\n      })\n      .then(() => {\n        this.setState({\n          rejectDialogOpened: false,\n        });\n      });\n  }\n  handleTextChange(event, rowId) {\n    this.setState({\n      remarks: {\n        [rowId]: event.target.value,\n      },\n    });\n  }\n  generateTable() {\n    return this.state.submissions.map((submission, i) => {\n      console.log(submission);\n      return (\n        <React.Fragment key={i}>\n          <TableRow>\n            <TableCell>\n              {submission.name + ' '}\n\n              {/* Show preview button if toilet is not previewed. If toilet is\n              being previewed, then show hide button */}\n              {submission.rowId !== this.state.previewRow ? (\n                <Button\n                  onClick={() => this.setState({previewRow: submission.rowId})}\n                  color=\"primary\">\n                  Preview\n                </Button>\n              ) : (\n                <Button\n                  onClick={() => this.setState({previewRow: null})}\n                  color=\"secondary\">\n                  Hide\n                </Button>\n              )}\n            </TableCell>\n            <TableCell>{this.generateFacilities(submission)}</TableCell>\n            <TableCell size=\"small\">\n              {\n                <TextField\n                  multiline\n                  defaultValue={submission.remarks}\n                  fullWidth\n                  margin=\"dense\"\n                  inputProps={{style: {fontSize: 15}}}\n                  onChange={event => {\n                    this.handleTextChange(event, submission.rowId);\n                  }}\n                />\n              }\n            </TableCell>\n            <TableCell>\n              {submission.status == null ? 'Pending' : submission.status}{' '}\n            </TableCell>\n            <TableCell>{this.submissionAction(submission.rowId)}</TableCell>\n          </TableRow>\n\n          {/* Sets up preview, hacky way to fit zx \n          data structure to Nelson's */}\n          {this.state.previewRow === submission.rowId && (\n            <TableRow>\n              <TableCell colSpan={5}>\n                <Preview\n                  submission={Object.assign(\n                    {\n                      panorama: {url: submission.paranomaUrl},\n                      facilities: {\n                        hose: submission.hasHose,\n                        showerHeads: submission.hasShowerHeads,\n                        waterCooler: submission.hasWaterCooler,\n                        male: submission.isMale,\n                        separateHandicapped: submission.isSeparateHandicapped,\n                        handicapped: submission.isHandicapped,\n                        female: submission.isFemale,\n                      },\n                    },\n                    submission,\n                  )}\n                />\n              </TableCell>\n            </TableRow>\n          )}\n        </React.Fragment>\n      );\n    });\n  }\n  render() {\n    return (\n      <Paper style={{margin: 20}}>\n        <Dialog\n          onClose={() => {\n            this.setState({approveDialogOpened: false});\n          }}\n          open={this.state.approveDialogOpened}>\n          <DialogTitle>Are you sure?</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              {'Do you really want to approve ' +\n                this.state.submissionToApprove.name +\n                ' with the remarks ' +\n                (this.state.remarks[this.state.submissionIndex]\n                  ? this.state.remarks[this.state.submissionIndex]\n                  : this.state.submissionToApprove.remarks) +\n                '?'}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => this.approveSubmission()}>Approve</Button>\n            <Button\n              onClick={() => {\n                this.setState({approveDialogOpened: false});\n              }}>\n              Cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Dialog\n          onClose={() => {\n            this.setState({rejectDialogOpened: false});\n          }}\n          open={this.state.rejectDialogOpened}>\n          <DialogTitle>Are you sure?</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              {'Do you really want to reject ' +\n                this.state.submissionToReject.name +\n                ' with the remarks ' +\n                (this.state.remarks[this.state.submissionIndex]\n                  ? this.state.remarks[this.state.submissionIndex]\n                  : this.state.submissionToReject.remarks) +\n                '?'}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => this.rejectSubmission()}>Reject</Button>\n            <Button\n              onClick={() => {\n                this.setState({rejectDialogOpened: false});\n              }}>\n              Cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Table onRowSelection={this.onRowSelection}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Location</TableCell>\n              <TableCell>Facilities</TableCell>\n              <TableCell>Remarks </TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>{this.generateTable()}</TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n}\n","import React from 'react';\n\nclass Map extends React.Component {\n  watchLocation() {\n    if (navigator.geolocation) {\n      this.id = navigator.geolocation.watchPosition(\n        position => {\n          const lat = position.coords.latitude;\n          const lon = position.coords.longitude;\n          this.props.updateMyLocation(lat, lon);\n\n          this.myLocation.setPosition({lat: lat, lng: lon});\n          this.accuracyRadius.setCenter({lat: lat, lng: lon});\n          this.accuracyRadius.setRadius(position.coords.accuracy);\n        },\n        () => console.log('No permission'),\n        {\n          enableHighAccuracy: true,\n        },\n      );\n    } else {\n      // Browser doesn't support Geolocation\n      console.log('No permission');\n    }\n  }\n\n  componentDidMount() {\n    const NUS = {lat: 1.296675, lng: 103.776396};\n    this.map = new window.google.maps.Map(document.getElementById('map'), {\n      zoom: 13,\n      center: NUS,\n    });\n\n    this.myLocation = new window.google.maps.Marker({\n      position: NUS,\n      map: this.map,\n      icon:\n        'https://raw.githubusercontent.com/nelsontky/let-it-go/master/assets/icons/locationMarker.png',\n    });\n\n    this.accuracyRadius = new window.google.maps.Circle({\n      map: this.map,\n      center: NUS,\n      radius: 0,\n      fillColor: '#00F',\n      fillOpacity: 0.2,\n      strokeWeight: 0,\n    });\n\n    // Click listeners\n    this.map.addListener('click', e => {\n      this.props.handleMapClick(e.latLng.lat(), e.latLng.lng());\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: e.latLng,\n        map: this.map,\n      });\n    });\n    this.accuracyRadius.addListener('click', e => {\n      this.props.handleMapClick(e.latLng.lat(), e.latLng.lng());\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: e.latLng,\n        map: this.map,\n      });\n    });\n    this.myLocation.addListener('click', () => {\n      this.props.handleMapClick(\n        this.myLocation.getPosition().lat(),\n        this.myLocation.getPosition().lng(),\n      );\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: this.myLocation.getPosition(),\n        map: this.map,\n      });\n    });\n\n    // Location button\n    const self = this;\n    function CenterControl(controlDiv, map) {\n      // Set CSS for the control border.\n      let controlUI = document.createElement('div');\n      controlUI.style.backgroundColor = '#fff';\n      controlUI.style.border = '2px solid #fff';\n      controlUI.style.borderRadius = '3px';\n      controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';\n      controlUI.style.cursor = 'pointer';\n      controlUI.style.textAlign = 'center';\n      controlUI.style.marginBottom = '22px';\n      controlUI.style.height = '31px';\n      controlUI.title = 'Click to recenter the map to location';\n      controlDiv.appendChild(controlUI);\n\n      // Set CSS for the control interior.\n      let controlText = document.createElement('div');\n      controlText.innerHTML = \"<img src='https://i.imgur.com/raFRca2.png' />\";\n      controlUI.appendChild(controlText);\n\n      // Setup the click event listeners\n      controlUI.addEventListener('click', function() {\n        map.setCenter(self.myLocation.getPosition());\n      });\n    }\n\n    // Render the button\n    let centerControlDiv = document.createElement('div');\n    new CenterControl(centerControlDiv, this.map);\n\n    centerControlDiv.index = 1;\n    this.map.controls[window.google.maps.ControlPosition.LEFT_BOTTOM].push(\n      centerControlDiv,\n    );\n\n    this.watchLocation();\n  }\n\n  componentWillUnmount() {\n    navigator.geolocation.clearWatch(this.id);\n  }\n\n  render() {\n    return <div id=\"map\" style={{width: '100%', height: '300px'}}></div>;\n  }\n}\n\nexport default Map;\n","import React from 'react';\n\n// Material UI imports\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nexport default class SubmissionsSortingDropdown extends React.Component {\n  render() {\n    return (\n      <FormControl>\n        <InputLabel>Sort by</InputLabel>\n        <Select\n          value={this.props.value}\n          autoWidth\n          onChange={this.props.handleSorting}\n        >\n          <MenuItem value=\"name\">Name</MenuItem>\n          <MenuItem value=\"date\">Date (Newest first)</MenuItem>\n          <MenuItem value=\"status\">Status</MenuItem>\n        </Select>\n      </FormControl>\n    );\n  }\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nexport default class Status extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {remarksShown: false};\n\n    this.approval = this.props.status.approval;\n    this.remarks = this.props.status.remarks;\n  }\n\n  render() {\n    if (this.approval === 'rejected') {\n      return (\n        <div>\n          <p style={{color: 'red'}}>\n            {'Rejected '}\n            <Button\n              color='primary'\n              onClick={() =>\n                this.setState({remarksShown: !this.state.remarksShown})\n              }>\n                {this.state.remarksShown ? 'Hide' : 'Show reason'}\n            </Button>\n          </p>\n          {this.state.remarksShown && <p>{this.remarks}</p>}\n        </div>\n      );\n    } else if (this.approval === 'pending') {\n      return (\n        <p>\n          <em>Submission pending review</em>\n        </p>\n      );\n    } else {\n      return <p style={{color: 'green'}}>Approved!</p>;\n    }\n  }\n}\n","import React from 'react';\nimport Preview from './preview';\nimport SubmissionsSortingDropdown from './submissionsSortingDropdown';\nimport Status from './status';\n\n// Material UI imports\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nfunction compareByName(a, b) {\n  return a.submission.name.localeCompare(b.submission.name);\n}\n\nfunction compareByDate(a, b) {\n  return b.submission.date.toDate() - a.submission.date.toDate();\n}\n\nfunction compareByStatus(a, b) {\n  let aValue;\n  let bValue;\n\n  switch (a.submission.status.approval) {\n    case 'rejected':\n      aValue = -1;\n      break;\n    case 'approved':\n      aValue = 0;\n      break;\n    default:\n      aValue = 1;\n      break;\n  }\n\n  switch (b.submission.status.approval) {\n    case 'rejected':\n      bValue = -1;\n      break;\n    case 'approved':\n      bValue = 0;\n      break;\n    default:\n      bValue = 1;\n      break;\n  }\n\n  return aValue - bValue;\n}\n\nclass Submission extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submission = this.props.children.submission;\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>{this.submission.name}</h4>\n\n        {/* Status text */}\n        <Status status={this.submission.status} />\n        <div>\n          {/* Preview button */}\n          <Button\n            variant=\"contained\"\n            color={\n              this.props.children.id === this.props.previewId\n                ? 'secondary'\n                : 'default'\n            }\n            onClick={\n              this.props.children.id === this.props.previewId\n                ? this.props.handleHide\n                : () => this.props.handlePreview(this.props.children.id)\n            }>\n            {this.props.children.id === this.props.previewId\n              ? 'Hide'\n              : 'Preview'}\n          </Button>{' '}\n          {/* Edit button */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={this.submission.status.approval === 'approved'}\n            onClick={() =>\n              this.props.handleEdit(this.submission, this.props.children.id)\n            }>\n            Edit\n          </Button>{' '}\n          {/* Delete button */}\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() =>\n              this.props.handleDelete(\n                this.submission.panorama.fileName,\n                this.props.children.id,\n              )\n            }>\n            Delete\n            <DeleteIcon />\n          </Button>\n        </div>\n        <br />\n        <div style={{color: 'gray', fontSize: '80%'}}>\n          Submitted:{' '}\n          {this.submission.date.toDate().toLocaleString('default', {\n            day: 'numeric',\n            month: 'long',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n          })}\n        </div>\n        <br />\n        {this.props.children.id === this.props.previewId && (\n          <Preview submission={this.submission} />\n        )}\n      </div>\n    );\n  }\n}\n\nclass Submitted extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      submissions: [],\n      previewId: '',\n      loading: true,\n      sortBy: 'status',\n    };\n\n    // Read all of current user's submissions from firestore, then adds all\n    // submissions into state.\n    let submissions = [];\n    this.props.doc\n      .collection('submissions')\n      .get()\n      .then(querySnapshot =>\n        querySnapshot.forEach(doc => {\n          submissions.push({submission: doc.data(), id: doc.id});\n        }),\n      )\n      .then(() => {\n        // Sorts by status\n        submissions.sort(compareByStatus);\n        this.setState({submissions, loading: false});\n      });\n\n    this.handlePreview = this.handlePreview.bind(this);\n    this.handleHide = this.handleHide.bind(this);\n    this.handleSorting = this.handleSorting.bind(this);\n  }\n\n  handlePreview(docId) {\n    this.setState({\n      previewId: docId,\n    });\n  }\n\n  handleHide() {\n    this.setState({previewId: ''});\n  }\n\n  handleSorting(event) {\n    let submissions = this.state.submissions.slice();\n\n    switch (event.target.value) {\n      case 'name':\n        submissions.sort(compareByName);\n        break;\n      case 'date':\n        submissions.sort(compareByDate);\n        break;\n      case 'status':\n        submissions.sort(compareByStatus);\n        break;\n      default:\n        break;\n    }\n\n    this.setState({submissions, sortBy: event.target.value});\n  }\n\n  render() {\n    return (\n      <div>\n        {/* Loading message */}\n        {this.state.loading && <span>Loading... ...</span>}\n        {!this.state.loading && this.state.submissions.length === 0 && (\n          <span>You have not created any submissions (yet!)</span>\n        )}\n\n        {!this.state.loading && this.state.submissions.length !== 0 && (\n          <div>\n            <br />\n            <SubmissionsSortingDropdown\n              key={this.state.sortBy}\n              value={this.state.sortBy}\n              handleSorting={this.handleSorting}\n            />\n            <Table>\n              <TableBody>\n                {this.state.submissions.map((x, i) => (\n                  <TableRow key={i}>\n                    <TableCell>\n                      <Submission\n                        key={this.state.sortBy}\n                        handleEdit={this.props.handleEdit}\n                        handleDelete={this.props.handleDelete}\n                        handlePreview={this.handlePreview}\n                        handleHide={this.handleHide}\n                        previewId={this.state.previewId}>\n                        {x}\n                      </Submission>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default Submitted;\n","import React from 'react';\nimport Map from './components/map';\nimport Submitted from './components/submitted';\nimport Layout from './components/layout';\nimport firebase from './utils/firebase';\nimport Resizer from 'react-image-file-resizer';\n\n// Material UI imports\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nconst uniqid = require('uniqid');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      lat: 0,\n      lon: 0,\n      myLat: 0,\n      myLon: 0,\n      handicapped: false,\n      separateHandicapped: false,\n      hose: false,\n      showerHeads: false,\n      male: false,\n      female: false,\n      waterCooler: false,\n      progress: 0,\n      progressShown: false,\n      error: false,\n      submissionsShown: false,\n\n      // Fields in charge of editing.\n      edit: false,\n      panorama: {},\n      editPanorama: false,\n      editDocId: '',\n    };\n\n    this.fileInput = React.createRef();\n\n    this.db = firebase.firestore();\n    this.storage = firebase.storage();\n\n    // Document created by user\n    this.doc = this.db\n      .collection('userSubmissions')\n      .doc(this.props.currentUser.uid);\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleMapClick = this.handleMapClick.bind(this);\n    this.updateMyLocation = this.updateMyLocation.bind(this);\n    this.setToCurrentLocation = this.setToCurrentLocation.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  // Handles state of input forms\n  handleInputChange(event) {\n    const value =\n      event.target.type === 'checkbox'\n        ? event.target.checked\n        : event.target.value;\n\n    if (event.target.name !== 'handicapped') {\n      // Any checkbox/input that is not the handicapped checkbox, set state\n      // normally.\n      this.setState({\n        [event.target.name]: value,\n      });\n    } else {\n      // For handicapped checkbox, have to make sure that separateHandicapped\n      // checkbox is unticked when handicapped checkbox is unticked.\n      this.setState({\n        [event.target.name]: value,\n        separateHandicapped: value && this.state.separateHandicapped,\n      });\n    }\n  }\n\n  // Handles map clicks, will update lat lon field to clicked lat lon.\n  handleMapClick(lat, lon) {\n    this.setState({\n      lat,\n      lon,\n    });\n  }\n\n  // Whenever geolocation code in Map component runs, myLat and myLon in local\n  // state will be updated.\n  updateMyLocation(myLat, myLon) {\n    this.setState({\n      myLat,\n      myLon,\n    });\n  }\n\n  // Handles click on \"Set Lat Lon to current location button\". Does what\n  // the button says, sets Lat Lon state to that of current location.\n  // (if available)\n  setToCurrentLocation(event) {\n    event.preventDefault();\n    this.setState({\n      lat: this.state.myLat,\n      lon: this.state.myLon,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // If user is editing submission and does not choose to reupload panorama\n    if (this.state.edit && !this.state.editPanorama) {\n      this.doc\n        .collection('submissions')\n        .doc()\n        .set({\n          facilities: {\n            female: this.state.female,\n            handicapped: this.state.handicapped,\n            hose: this.state.hose,\n            male: this.state.male,\n            separateHandicapped: this.state.separateHandicapped,\n            showerHeads: this.state.showerHeads,\n            waterCooler: this.state.waterCooler,\n          },\n          lat: this.state.lat,\n          lon: this.state.lon,\n          name: this.state.name.trim(),\n\n          // Use old panorama.\n          panorama: this.state.panorama,\n\n          date: new Date(Date.now()),\n          status: {approval: 'pending', remarks: ''},\n        })\n        .then(() => {\n          // Delete old version.\n          this.doc\n            .collection('submissions')\n            .doc(this.state.editDocId)\n            .delete();\n        })\n        .then(() => window.location.reload());\n    } else {\n      // Ensures that file uploaded is an image. Does not work if file format\n      // was changed manually but submit will still not work, just that this\n      // warning will not show too.\n      if (\n        this.fileInput.current.files[0] == null ||\n        !/image\\/*/g.test(this.fileInput.current.files[0].type)\n      ) {\n        alert('Please make sure file uploaded is an image');\n      } else {\n        // Resize images to max width of 4096 to support mobile, after resizing,\n        // image will be uploaded and firestore storage entry would be created.\n        Resizer.imageFileResizer(\n          this.fileInput.current.files[0],\n          4096,\n          4096,\n          'JPEG',\n          70,\n          0,\n          blob => {\n            // Show submission progress.\n            this.setState({progressShown: true});\n\n            // Sets file name, file name appended with a unique id to prevent\n            // overwrites.\n            const fileName = `${this.state.name} - ${uniqid()}.jpeg`;\n\n            // Uploads image to firebase storage\n            let uploadTask = this.storage\n              .ref()\n              .child(`${this.props.currentUser.uid}/${fileName}`)\n              .put(blob);\n\n            uploadTask.on(\n              firebase.storage.TaskEvent.STATE_CHANGED,\n              snapshot => {\n                let progress =\n                  (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n\n                this.setState({progress});\n              },\n              err => {\n                this.setState({error: true});\n              },\n              () => {\n                // Upload completed successfully\n                uploadTask.snapshot.ref.getDownloadURL().then(url => {\n                  // Keys in current user info into the user's document,\n                  // excludes email for privacy reasons.\n                  this.doc.set({\n                    currentUser: {\n                      name: this.props.currentUser.displayName,\n                      photoURL: this.props.currentUser.photoURL,\n                      uid: this.props.currentUser.uid,\n                    },\n                  });\n\n                  this.doc\n                    .collection('submissions')\n                    .doc()\n                    .set({\n                      facilities: {\n                        female: this.state.female,\n                        handicapped: this.state.handicapped,\n                        hose: this.state.hose,\n                        male: this.state.male,\n                        separateHandicapped: this.state.separateHandicapped,\n                        showerHeads: this.state.showerHeads,\n                        waterCooler: this.state.waterCooler,\n                      },\n                      lat: this.state.lat,\n                      lon: this.state.lon,\n                      name: this.state.name.trim(),\n                      panorama: {url, fileName},\n                      date: new Date(Date.now()),\n                      status: {approval: 'pending', remarks: ''},\n                    })\n                    .then(() => {\n                      // If is editing submission, delete old version and old\n                      // panorama\n                      if (this.state.edit) {\n                        this.doc\n                          .collection('submissions')\n                          .doc(this.state.editDocId)\n                          .delete();\n\n                        // Delete old panorama\n                        this.storage\n                          .ref()\n                          .child(\n                            `${this.props.currentUser.uid}/${this.state.panorama.fileName}`,\n                          )\n                          .delete();\n                      }\n                    })\n                    .then(() => window.location.reload());\n                });\n              },\n            );\n          },\n          'blob',\n        );\n      }\n    }\n  }\n\n  // Handle the deleting of submission. Meant to be passed as a prop\n  // into <Submitted /> component.\n  handleDelete(fileName, submissionId) {\n    if (window.confirm('Are you sure you want to delete this submission?')) {\n      // Deletes document from firestore.\n      this.doc\n        .collection('submissions')\n        .doc(submissionId)\n        .delete()\n        .then(() =>\n          // Deletes panorama image from storage.\n          this.storage\n            .ref()\n            .child(`${this.props.currentUser.uid}/${fileName}`)\n            .delete()\n            .then(() => window.location.reload()),\n        );\n    }\n  }\n\n  // Handle the editing of user submitted toilets. Meant to be passed as a prop\n  // into <Submitted /> component.\n  handleEdit(submission, submissionId) {\n    window.scrollTo(0, 0);\n    this.setState({\n      edit: true,\n      female: submission.facilities.female,\n      male: submission.facilities.male,\n      handicapped: submission.facilities.handicapped,\n      separateHandicapped: submission.facilities.separateHandicapped,\n      showerHeads: submission.facilities.showerHeads,\n      waterCooler: submission.facilities.waterCooler,\n      hose: submission.facilities.hose,\n      lat: submission.lat,\n      lon: submission.lon,\n      name: submission.name,\n      panorama: submission.panorama,\n      editDocId: submissionId,\n    });\n  }\n\n  render() {\n    // console.log(this.state);\n    return (\n      <Layout>\n        <h1>Submit to Let It Go</h1>\n        {this.state.edit && <h6>Editing submission</h6>}\n        {/* Main form */}\n        <form onSubmit={this.handleSubmit}>\n          {/* Toilet name input*/}\n          <TextField\n            label=\"Name\"\n            placeholder=\"Enter toilet name\"\n            fullWidth\n            margin=\"normal\"\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            name=\"name\"\n            onChange={this.handleInputChange}\n            value={this.state.name}\n          />\n          {/* Set Lat Lon to current location button */}\n          <Button onClick={this.setToCurrentLocation} variant=\"contained\">\n            Set Lat Lon to current location\n          </Button>\n          <br />\n          {/* Lat input */}\n          <TextField\n            style={{marginRight: '1em'}}\n            label=\"Latitude\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"lat\"\n            onChange={this.handleInputChange}\n            value={this.state.lat}\n          />\n          {/* Lon input */}\n          <TextField\n            label=\"Longitude\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"lon\"\n            onChange={this.handleInputChange}\n            value={this.state.lon}\n          />\n          {/* Map component, takes in 2 functions that are needed to set local\n        state from child component */}\n          <Map\n            handleMapClick={this.handleMapClick}\n            updateMyLocation={this.updateMyLocation}\n          />\n          <br />\n          {/* Checkboxes */}\n          <FormLabel component=\"legend\">Facilities</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.male}\n                  onChange={this.handleInputChange}\n                  name=\"male\"\n                />\n              }\n              label=\"Male\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.female}\n                  onChange={this.handleInputChange}\n                  name=\"female\"\n                />\n              }\n              label=\"Female\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.handicapped}\n                  onChange={this.handleInputChange}\n                  name=\"handicapped\"\n                />\n              }\n              label=\"Handicapped\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.separateHandicapped}\n                  onChange={this.handleInputChange}\n                  name=\"separateHandicapped\"\n                  disabled={!this.state.handicapped}\n                />\n              }\n              label=\"Separate Handicapped\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.hose}\n                  onChange={this.handleInputChange}\n                  name=\"hose\"\n                />\n              }\n              label=\"Hose\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.showerHeads}\n                  onChange={this.handleInputChange}\n                  name=\"showerHeads\"\n                />\n              }\n              label=\"Shower Heads\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.waterCooler}\n                  onChange={this.handleInputChange}\n                  name=\"waterCooler\"\n                />\n              }\n              label=\"Water Cooler\"\n            />\n          </FormGroup>\n          <br />\n\n          {/* Present user with choice to edit Panorama image if edit\n          mode is on */}\n          {this.state.edit && (\n            <div>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={this.state.editPanorama}\n                    onChange={this.handleInputChange}\n                    name=\"editPanorama\"\n                  />\n                }\n                label=\"Edit Panorama image\"\n              />\n              <br />\n            </div>\n          )}\n\n          <input\n            type=\"file\"\n            name=\"paranomaPath\"\n            accept=\"image/*\"\n            ref={this.fileInput}\n            id=\"contained-button-file\"\n            style={{display: 'none'}}\n          />\n\n          {/* Do not show upload Panorama button if in edit mode and\n          edit panorama is not chosen */}\n          {(!this.state.edit || this.state.editPanorama) && (\n            <label htmlFor=\"contained-button-file\">\n              <Button variant=\"contained\" component=\"span\">\n                Select panorama image\n              </Button>\n            </label>\n          )}\n          <br />\n          <br />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            disabled={\n              this.state.name === '' ||\n              this.state.lat === 0 ||\n              this.state.lon === 0\n            }>\n            Submit\n          </Button>\n          {/* Progress indicator */}\n          <span>\n            {this.state.progressShown &&\n              ' ' + Math.floor(this.state.progress) + '%'}\n          </span>\n          {/* Error indicator */}\n          <p>\n            {this.state.error &&\n              'An error occured, please refresh the page and try again'}\n          </p>\n          {this.state.edit && (\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => window.location.reload()}>\n              Cancel\n            </Button>\n          )}\n        </form>\n\n        <Button\n          color=\"secondary\"\n          onClick={() =>\n            this.setState({submissionsShown: !this.state.submissionsShown})\n          }>\n          {`${this.state.submissionsShown ? 'Hide' : 'Show'} your submissions`}\n        </Button>\n\n        {this.state.submissionsShown && (\n          <Submitted\n            uid={this.props.currentUser.uid}\n            doc={this.doc}\n            handleEdit={this.handleEdit}\n            handleDelete={this.handleDelete}\n          />\n        )}\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport Admin from '../Admin';\nimport App from '../App';\n\nimport Button from '@material-ui/core/Button';\n\nexport default class SwitchPortals extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isAdmin: true};\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{textAlign: 'center'}}>\n          <Button\n            onClick={() => this.setState({isAdmin: !this.state.isAdmin})}\n            variant=\"contained\"\n            color=\"secondary\">\n            {`Switch to ${this.state.isAdmin ? 'submission' : 'admin'} portal`}\n          </Button>\n        </div>\n        {!this.state.isAdmin ? (\n          <App currentUser={this.props.currentUser} />\n        ) : (\n          <Admin />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Layout from './components/layout';\nimport RandomToiletQuote from './components/randomToiletQuote';\nimport SwitchPortals from './components/switchPortals';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from './utils/firebase';\nimport App from './App';\n\nimport Button from '@material-ui/core/Button';\n\nfunction isNelsonOrZx(email) {\n  return email === 'lowzxx@gmail.com' || email === 'nelsontkyi@gmail.com';\n}\n\n// Implement Google and Firebase signin\n\nconst uiConfig = {\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n};\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSignedIn: false,\n    };\n  }\n\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase\n      .auth()\n      .onAuthStateChanged(user => this.setState({isSignedIn: !!user}));\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <Layout>\n          <h1>Submit to Let It Go</h1>\n          <p>Please sign-in:</p>\n          <StyledFirebaseAuth\n            uiConfig={uiConfig}\n            firebaseAuth={firebase.auth()}\n          />\n          <RandomToiletQuote />\n        </Layout>\n      );\n    } else {\n      return (\n        <div>\n          <Layout>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => firebase.auth().signOut()}>\n              Sign Out\n            </Button>\n          </Layout>\n\n          {/* Give option to switch portals if is admin logging in, else just\n          show the submission portal */}\n          {isNelsonOrZx(firebase.auth().currentUser.email) ? (\n            <SwitchPortals currentUser={firebase.auth().currentUser} />\n          ) : (\n            <App currentUser={firebase.auth().currentUser} />\n          )}\n        </div>\n      );\n    }\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\nimport Typography from 'typography';\nimport fairyGatesTheme from 'typography-theme-fairy-gates';\nimport injectFonts from 'typography-inject-fonts';\n\nconst typography = new Typography(fairyGatesTheme);\ntypography.injectStyles()\ninjectFonts(typography)\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}