{"version":3,"sources":["components/layout.js","utils/firebase.js","components/randomToiletQuote.js","Admin.js","components/map.js","components/panorama.js","components/preview.js","components/submissionsSortingDropdown.js","components/status.js","components/submitted.js","App.js","components/switchPortals.js","Main.js","index.js"],"names":["layout","_ref","children","react_default","a","createElement","style","margin","maxWidth","padding","firebase","require","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","quoteStyle","color","fontFamily","fontSize","fontStyle","lineHeight","textShadow","zIndex","textAlign","RandomToiletQuote","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","firestore","collection","doc","get","then","quotes","data","randomQuote","Math","floor","random","length","setState","quote","catch","React","Component","Admin","submissionsDb","toiletDb","submissions","submissionToReject","submissionToApprove","getAllSubmissions","_this2","users","querySnapshot","forEach","user","push","currentUser","uid","getSubmissionsForUser","error","alert","_this3","onSnapshot","newSubmissions","submission","userUid","docId","id","date","isFemale","facilities","female","isMale","male","isHandicapped","handicapped","isSeparateHandicapped","separateHandicapped","hasHose","hose","hasShowerHeads","showerHeads","hasWaterCooler","waterCooler","lat","lon","name","paranomaUrl","panorama","status","approval","remarks","isEditing","prevState","concat","toConsumableArray","flatMap","x","refresh","result","index","_this4","FormControl","Select","value","onChange","event","target","triggerDialogToConfirmApprove","submissionIndex","submissionToEdit","handleRejectSubmissionClicked","MenuItem","approveDialogOpened","_this5","update","set","rejectDialogOpened","_this6","_this7","map","TableRow","TableCell","Input","defaultValue","multiline","fullWidth","tempName","generateFacilities","undefined","Button","size","onClick","handleConfirmEdit","submissionAction","_this8","Paper","Dialog","onClose","open","DialogTitle","DialogContent","DialogContentText","DialogActions","approveSubmission","comment","rejectSubmission","Table","TableHead","TableBody","generateTable","Map","navigator","geolocation","watchPosition","position","coords","latitude","longitude","updateMyLocation","myLocation","setPosition","lng","accuracyRadius","setCenter","setRadius","accuracy","console","log","enableHighAccuracy","NUS","window","google","maps","document","getElementById","zoom","center","Marker","icon","Circle","radius","fillColor","fillOpacity","strokeWeight","addListener","e","handleMapClick","latLng","marker","setMap","getPosition","self","centerControlDiv","controlDiv","controlUI","backgroundColor","border","borderRadius","boxShadow","cursor","marginBottom","height","title","appendChild","controlText","innerHTML","addEventListener","controls","ControlPosition","LEFT_BOTTOM","watchLocation","clearWatch","width","Panorama","viewer","pannellum","type","url","vaov","maxPitch","minPitch","autoLoad","destroy","Preview","staticMapUrl","bool","textDecoration","src","alt","listStyle","glanceStyle","className","handicappedText","SubmissionsSortingDropdown","InputLabel","autoWidth","handleSorting","Status","remarksShown","compareByName","b","localeCompare","compareByDate","toDate","compareByStatus","aValue","bValue","Submission","status_Status","variant","previewId","handleHide","handlePreview","handleEdit","handleDelete","fileName","Delete_default","toLocaleString","day","month","year","hour","minute","second","preview","Submitted","loading","sortBy","sort","bind","assertThisInitialized","slice","submissionsSortingDropdown_SubmissionsSortingDropdown","key","i","submitted_Submission","uniqid","App","myLat","myLon","progress","progressShown","submissionsShown","edit","editPanorama","editDocId","fileInput","createRef","db","storage","handleInputChange","setToCurrentLocation","handleSubmit","_this$setState2","checked","defineProperty","preventDefault","trim","Date","now","delete","location","reload","current","files","test","Resizer","imageFileResizer","blob","uploadTask","ref","child","put","on","TaskEvent","STATE_CHANGED","snapshot","bytesTransferred","totalBytes","err","getDownloadURL","displayName","email","photoURL","submissionId","confirm","scrollTo","onSubmit","TextField","label","placeholder","InputLabelProps","shrink","marginRight","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","disabled","accept","display","htmlFor","submitted","SwitchPortals","isAdmin","Admin_Admin","src_App","uiConfig","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","Main","isSignedIn","unregisterAuthObserver","onAuthStateChanged","signOut","switchPortals_SwitchPortals","StyledFirebaseAuth_default","firebaseAuth","randomToiletQuote_RandomToiletQuote","typography","Typography","fairyGatesTheme","injectStyles","injectFonts","ReactDOM","render","Main_Main"],"mappings":"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","file":"static/js/main.8d04c334.chunk.js","sourcesContent":["import React from 'react';\n\nexport default ({children}) => (\n  <div style={{margin: `3rem auto`, maxWidth: 650, padding: `0 1rem`}}>\n    {children}\n  </div>\n);\n","const firebase = require('firebase/app');\nrequire('firebase/firestore');\nrequire(\"firebase/auth\");\nrequire(\"firebase/storage\");\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n  authDomain: \"let-it-go-e6229.firebaseapp.com\",\n  databaseURL: \"https://let-it-go-e6229.firebaseio.com\",\n  projectId: \"let-it-go-e6229\",\n  storageBucket: \"let-it-go-e6229.appspot.com\",\n  messagingSenderId: \"917575844853\",\n  appId: \"1:917575844853:web:88ec0cbe059a0d43\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from 'react';\nimport firebase from '../utils/firebase';\n\nconst quoteStyle = {\n  color: 'gray',\n  fontFamily: 'Georgia, serif',\n  fontSize: '1.5em',\n  fontStyle: 'italic',\n  lineHeight: '1.4',\n  margin: '0',\n  textShadow: '0 1px white',\n  zIndex: '600',\n  textAlign: 'center',\n};\n\nexport default class RandomToiletQuote extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    firebase\n      .firestore()\n      .collection('toiletQuotes')\n      .doc('quotes')\n      .get()\n      .then(doc => {\n        const quotes = doc.data().quotes;\n        const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];\n        this.setState({quote: '“' + randomQuote + '”'});\n      })\n      .catch(() =>\n        this.setState({quote: '“Feces are meant to be released in peace.”'}),\n      );\n  }\n\n  render() {\n    return <p style={quoteStyle}>{this.state.quote}</p>;\n  }\n}\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport firebase from './utils/firebase';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport {\n    DialogContent,\n    DialogTitle,\n    Dialog,\n    DialogActions,\n    DialogContentText,\n    Input,\n} from '@material-ui/core';\n\nexport default class Admin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.submissionsDb = firebase.firestore().collection('userSubmissions');\n        this.toiletDb = firebase.firestore().collection('toilets');\n        this.state = {\n            submissions: [],\n            submissionToReject: {},\n            submissionToApprove: {},\n            \n        };\n        this.getAllSubmissions();\n\n    }\n\n    componentWiUpdate() {\n        this.getAllSubmissions();\n    }\n\n    getAllSubmissions() {\n        let users = [];\n        this.submissionsDb\n            .get()\n            .then(querySnapshot => {\n                querySnapshot.forEach(user => {\n                    users.push(user.data().currentUser.uid);\n                });\n            })           \n            .then(() => {\n                users.forEach(user => this.getSubmissionsForUser(user));\n            })\n            .catch(error => {\n                alert('Error in getting submissions: ' + error);\n            });\n    }\n\n    getSubmissionsForUser(user) {\n        this.submissionsDb\n            .doc(user)\n            .collection('submissions')\n            .onSnapshot(querySnapshot => {\n                let newSubmissions = [];\n                // resets the submissions in state back to empty so it doesnt accumulate each time it rerenders from a change\n                this.setState({\n                    submissions : []\n                })\n                querySnapshot.forEach(submission => {                    \n                    newSubmissions.push({\n                        userUid: user,\n                        docId: submission.id,\n                        date: submission.data().date,\n                        isFemale: submission.data().facilities.female,\n                        isMale: submission.data().facilities.male,\n                        isHandicapped: submission.data().facilities.handicapped,\n                        isSeparateHandicapped: submission.data().facilities\n                            .separateHandicapped,\n                        hasHose: submission.data().facilities.hose,\n                        hasShowerHeads: submission.data().facilities.showerHeads,\n                        hasWaterCooler: submission.data().facilities.waterCooler,\n                        lat: submission.data().lat,\n                        lon: submission.data().lon,\n                        name: submission.data().name,\n                        paranomaUrl: submission.data().panorama.paranomaUrl,\n\n                        // editing\n                        status: submission.data().status.approval,\n                        remarks: submission.data().status.remarks,\n                        isEditing: false\n                    });\n                });\n                this.setState(prevState => ({\n                    submissions: [...prevState.submissions, newSubmissions].flatMap(x => x),\n                    refresh : !this.state.refresh\n                }));\n            })\n            // .then(() => {\n            //     // this.setState(prevState => ({\n            //     //     submissions: [...prevState.submissions, newSubmissions].flatMap(x => x),\n            //     // }));\n            // })\n            // .then(() => {\n            //     // this.setState(prevState => ({\n            //     //     submissions: prevState.submissions.flatMap(x => x),\n            //     // }));\n            //     console.log(this.state.submissions);\n            // }).catch(error => alert(\"Error in getting submissions second function: \" + error));\n    }\n\n    generateFacilities(submission) {\n        let result = '';\n\n        if (submission.isMale) {\n            result += '🙋‍♂️';\n        }\n        if (submission.isFemale) {\n            result += '🙋‍';\n        }\n        if (submission.hasWaterCooler) {\n            result += '🚰';\n        }\n        if (submission.hasShowerHeads) {\n            result += '🚿';\n        }\n        if (submission.hasHose) {\n            result += '💦';\n        }\n        if (submission.isHandicapped) {\n            result += '♿';\n        }\n        if (submission.isSeparateHandicapped) {\n            result += '😭';\n        }\n        return result;\n    }\n\n    submissionAction(index) {\n        const values = {\n            age: [10, 20, 30],\n        };\n        return (\n            <FormControl>\n                <Select\n                    value={values.age}\n                    onChange={event => {\n\n                        let submission = this.state.submissions[index];\n                        switch (event.target.value) {\n\n                            case \"Approved\":\n\n                                this.triggerDialogToConfirmApprove(submission, index)\n                                break;\n                            case \"Edit\":\n                                let submissions = [...this.state.submissions];\n                                submission.isEditing = true;\n                                submissions[index] = submission;\n                                this.setState({\n                                    submissions: submissions,\n                                    submissionIndex: index,\n                                    submissionToEdit: submission\n                                })\n                                break;\n                            case \"Reject\":\n                                this.handleRejectSubmissionClicked(submission, index);\n                                break;\n                        }\n\n                    }}>\n                    <MenuItem value={'Edit'}>Edit</MenuItem>\n                    <MenuItem value={'Approve'}>Approve</MenuItem>\n                    <MenuItem value={'Reject'}>Reject</MenuItem>\n                </Select>\n            </FormControl>\n        );\n    }\n    triggerDialogToConfirmApprove(submission, index) {\n        this.setState({\n            submissionToApprove: submission,\n            submissionIndex: index,\n            approveDialogOpened: true,\n        });\n    }\n    approveSubmission() {\n\n        let submission = this.state.submissionToApprove;\n        this.submissionsDb\n            .doc(this.state.submissionToApprove.userUid)\n            .collection('submissions')\n            .doc(this.state.submissionToApprove.name)\n            .update({\n                status: {\n                    approval: \"approved\",\n                    remarks : \"\"\n                }\n            })\n\n\n\n        // submission to official toilet database\n        this.toiletDb\n            .doc(submission.name)\n            .set({\n                facilities: {\n                    female: submission.isFemale,\n                    handicapped: submission.isHandicapped,\n                    hose: submission.hasHose,\n                    male: submission.isMale,\n                    separateHandicapped: submission.isSeparateHandicapped,\n                    showerHeads: submission.hasShowerHeads,\n                    waterCooler: submission.hasWaterCooler,\n                },\n                lat: submission.lat,\n                lon: submission.lon,\n                name: submission.name,\n                paranomaUrl: submission.paranomaUrl,\n            })\n            .then(() => {\n                this.setState({\n                    // submissions: submissions,\n                    approveDialogOpened: false,\n                });\n                alert(submission.name + ' has been approved!');\n            });\n    }\n\n\n    handleRejectSubmissionClicked(submission, index) {\n        alert(submission.name)\n        this.setState({\n            rejectDialogOpened: true,\n            submissionToReject: submission,\n            submissionIndex: index\n        })\n\n    }\n\n    rejectSubmission() {\n        // update the rejection reason in the docs \n        this.submissionsDb\n            .doc(this.state.submissionToReject.userUid)\n            .collection('submissions')\n            .doc(this.state.submissionToReject.docId)\n            .update({\n                status: {\n                    approval : 'rejected',\n                    remarks : ''\n                }\n            }).then(\n                () => {\n                    // let submissions = [...this.state.submissions];\n                    // let submission = this.state.submissionToReject;\n                    // submission.status = 'rejected';\n                    // submissions[this.state.submissionIndex] = submission;\n                    this.setState({\n                        // submissions: submissions,\n                        rejectDialogOpened: false,\n                    });\n                }\n            )\n        // update the submission docs with new status\n\n    }\n\n\n\n    generateTable() {\n        let index = -1;\n        return (\n            this.state.submissions.map(submission => {\n                index++;\n                return submission.isEditing\n                    ? (<TableRow>\n                        <TableCell>\n                            <Input\n                                defaultValue={this.state.submissions[index].name}\n                                multiline\n                                fullWidth\n                                onChange={(event) => this.setState({\n                                    tempName: event.target.value,\n                                    submissionToEdit: submission\n                                })}\n                            />\n                        </TableCell>\n                        <TableCell>{submission.userUid}</TableCell>\n                        <TableCell>{this.generateFacilities(submission)}</TableCell>\n                        <TableCell>\n                            {submission.status == undefined\n                                ? 'Pending'\n                                : submission.status}{' '}\n                        </TableCell>\n                        <TableCell>\n                            <Button size='small' onClick={() => {\n                                this.handleConfirmEdit(index)\n                            }}> Confirm Changes </Button>\n                            <Button size='small' onClick={() => {\n                                let submissions = [...this.state.submissions];\n                                let submission = this.state.submissionToEdit;\n                                submission.isEditing = false;\n                                submissions[index] = submission;\n\n                                this.setState({\n                                    submissions: submissions\n                                })\n\n                            }}> Cancel </Button>\n                        </TableCell>\n                    </TableRow>\n                    )\n                    : (\n                        <TableRow>\n                            <TableCell>{submission.name}</TableCell>\n                            <TableCell>{submission.userUid}</TableCell>\n                            <TableCell>{this.generateFacilities(submission)}</TableCell>\n                            <TableCell>\n                                {submission.status == undefined\n                                    ? 'Pending'\n                                    : submission.status}{' '}\n                            </TableCell>\n                            <TableCell>{this.submissionAction(index)}</TableCell>\n                        </TableRow>\n                    )\n\n            })\n        )\n    }\n\n\n    render() {\n\n        return (\n            <Paper style={{ margin: 20 }}>\n                <Dialog\n                    onClose={() => {\n                        this.setState({ approveDialogOpened: false });\n                    }}\n                    open={this.state.approveDialogOpened}>\n                    <DialogTitle>Are you sure?</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {'Once you press approve the submission, ' +\n                                this.state.submissionToApprove.name +\n                                ' will be pushed to the main database'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => this.approveSubmission()}>Approve</Button>\n                        <Button\n                            onClick={() => {\n                                this.setState({ approveDialogOpened: false });\n                            }}>\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    onClose={() => {\n                        this.setState({ rejectDialogOpened: false });\n                    }}\n                    open={this.state.rejectDialogOpened}>\n                    <DialogTitle>Are you sure?</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {\"Do you really want to reject this submission \" + this.state.submissionToReject.name + \" with the comment \" + this.state.comment + \"?\"}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => this.rejectSubmission()}>Reject</Button>\n                        <Button\n                            onClick={() => {\n                                this.setState({ rejectDialogOpened: false });\n                            }}>\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n\n\n\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Location</TableCell>\n                            <TableCell>User </TableCell>\n                            <TableCell>Facilities</TableCell>\n                            <TableCell>Status</TableCell>\n                            <TableCell>Action</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.generateTable()}\n                    </TableBody>\n                </Table>\n            </Paper>\n        );\n    }\n}\n","import React from 'react';\n\nclass Map extends React.Component {\n  watchLocation() {\n    if (navigator.geolocation) {\n      this.id = navigator.geolocation.watchPosition(\n        position => {\n          const lat = position.coords.latitude;\n          const lon = position.coords.longitude;\n          this.props.updateMyLocation(lat, lon);\n\n          this.myLocation.setPosition({lat: lat, lng: lon});\n          this.accuracyRadius.setCenter({lat: lat, lng: lon});\n          this.accuracyRadius.setRadius(position.coords.accuracy);\n        },\n        () => console.log('No permission'),\n        {\n          enableHighAccuracy: true,\n        },\n      );\n    } else {\n      // Browser doesn't support Geolocation\n      console.log('No permission');\n    }\n  }\n\n  componentDidMount() {\n    const NUS = {lat: 1.296675, lng: 103.776396};\n    this.map = new window.google.maps.Map(document.getElementById('map'), {\n      zoom: 13,\n      center: NUS,\n    });\n\n    this.myLocation = new window.google.maps.Marker({\n      position: NUS,\n      map: this.map,\n      icon:\n        'https://raw.githubusercontent.com/nelsontky/let-it-go/master/assets/icons/locationMarker.png',\n    });\n\n    this.accuracyRadius = new window.google.maps.Circle({\n      map: this.map,\n      center: NUS,\n      radius: 0,\n      fillColor: '#00F',\n      fillOpacity: 0.2,\n      strokeWeight: 0,\n    });\n\n    // Click listeners\n    this.map.addListener('click', e => {\n      this.props.handleMapClick(e.latLng.lat(), e.latLng.lng());\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: e.latLng,\n        map: this.map,\n      });\n    });\n    this.accuracyRadius.addListener('click', e => {\n      this.props.handleMapClick(e.latLng.lat(), e.latLng.lng());\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: e.latLng,\n        map: this.map,\n      });\n    });\n    this.myLocation.addListener('click', () => {\n      this.props.handleMapClick(\n        this.myLocation.getPosition().lat(),\n        this.myLocation.getPosition().lng(),\n      );\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: this.myLocation.getPosition(),\n        map: this.map,\n      });\n    });\n\n    // Location button\n    const self = this;\n    function CenterControl(controlDiv, map) {\n      // Set CSS for the control border.\n      let controlUI = document.createElement('div');\n      controlUI.style.backgroundColor = '#fff';\n      controlUI.style.border = '2px solid #fff';\n      controlUI.style.borderRadius = '3px';\n      controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';\n      controlUI.style.cursor = 'pointer';\n      controlUI.style.textAlign = 'center';\n      controlUI.style.marginBottom = '22px';\n      controlUI.style.height = '31px';\n      controlUI.title = 'Click to recenter the map to location';\n      controlDiv.appendChild(controlUI);\n\n      // Set CSS for the control interior.\n      let controlText = document.createElement('div');\n      controlText.innerHTML = \"<img src='https://i.imgur.com/raFRca2.png' />\";\n      controlUI.appendChild(controlText);\n\n      // Setup the click event listeners\n      controlUI.addEventListener('click', function() {\n        map.setCenter(self.myLocation.getPosition());\n      });\n    }\n\n    // Render the button\n    let centerControlDiv = document.createElement('div');\n    new CenterControl(centerControlDiv, this.map);\n\n    centerControlDiv.index = 1;\n    this.map.controls[window.google.maps.ControlPosition.LEFT_BOTTOM].push(\n      centerControlDiv,\n    );\n\n    this.watchLocation();\n  }\n\n  componentWillUnmount() {\n    navigator.geolocation.clearWatch(this.id);\n  }\n\n  render() {\n    return <div id=\"map\" style={{width: '100%', height: '300px'}}></div>;\n  }\n}\n\nexport default Map;\n","import React from 'react';\n\nclass Panorama extends React.Component {\n  componentDidMount() {\n    this.viewer = window.pannellum.viewer('panorama', {\n      type: 'equirectangular',\n      panorama: this.props.url,\n      vaov: 45,\n      maxPitch: 0,\n      minPitch: 0,\n      autoLoad: true,\n    });\n  }\n\n  componentWillUnmount() {\n    this.viewer.destroy();\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"panorama\" style={{width: '100%', height: 200}} />\n      </div>\n    );\n  }\n}\n\nexport default Panorama;\n","import React from 'react';\nimport Layout from './layout';\nimport Panorama from './panorama';\n\nclass Preview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submission = this.props.submission;\n\n    this.staticMapUrl = `https://maps.googleapis.com/maps/api/staticmap?size=650x300&markers=|${this.submission.lat}, ${this.submission.lon}&key=${process.env.REACT_APP_GOOGLE_API_KEY}`;\n  }\n\n  handicappedText() {\n    if (!this.submission.facilities.handicapped) {\n      return 'Is handicapped accessible';\n    } else if (!this.submission.facilities.separateHandicapped)\n      return 'Is handicapped accessible (Handicapped cubicle inside toilet)';\n    else {\n      return 'Is handicapped accessible (Has separate handicapped toilet)';\n    }\n  }\n\n  glanceStyle(bool) {\n    return {\n      textDecoration: bool ? '' : 'line-through',\n      color: bool ? '' : 'gray',\n    };\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h3>{this.submission.name}</h3>\n        <img src={this.staticMapUrl} alt=\"Static map preview\" />\n        <Panorama url={this.submission.panorama.url} />\n        <h4>At a glance</h4>\n        <ul style={{listStyle: 'none'}}>\n          <li style={this.glanceStyle(this.submission.facilities.male)}>\n            <i className=\"em-svg em-man-raising-hand\" />\n            Has Male toilet\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.female)}>\n            <i className=\"em-svg em-woman-raising-hand\" />\n            Has Female toilet\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.handicapped)}>\n            <i className=\"em-svg em-wheelchair\" />\n            {this.handicappedText()}\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.waterCooler)}>\n            <i className=\"em-svg em-potable_water\" />\n            Has water cooler\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.showerHeads)}>\n            <i className=\"em-svg em-shower\" />\n            Has shower heads\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.hose)}>\n            <i className=\"em-svg em-sweat_drops\" />\n            Has hose\n          </li>\n        </ul>\n      </Layout>\n    );\n  }\n}\n\nexport default Preview;\n","import React from 'react';\n\n// Material UI imports\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nexport default class SubmissionsSortingDropdown extends React.Component {\n  render() {\n    return (\n      <FormControl>\n        <InputLabel>Sort by</InputLabel>\n        <Select\n          value={this.props.value}\n          autoWidth\n          onChange={this.props.handleSorting}\n        >\n          <MenuItem value=\"name\">Name</MenuItem>\n          <MenuItem value=\"date\">Date (Newest first)</MenuItem>\n          <MenuItem value=\"status\">Status</MenuItem>\n        </Select>\n      </FormControl>\n    );\n  }\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nexport default class Status extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {remarksShown: false};\n\n    this.approval = this.props.status.approval;\n    this.remarks = this.props.status.remarks;\n  }\n\n  render() {\n    if (this.approval === 'rejected') {\n      return (\n        <div>\n          <p style={{color: 'red'}}>\n            {'Rejected '}\n            <Button\n              color='primary'\n              onClick={() =>\n                this.setState({remarksShown: !this.state.remarksShown})\n              }>\n                {this.state.remarksShown ? 'Hide' : 'Show reason'}\n            </Button>\n          </p>\n          {this.state.remarksShown && <p>{this.remarks}</p>}\n        </div>\n      );\n    } else if (this.approval === 'pending') {\n      return (\n        <p>\n          <em>Submission pending review</em>\n        </p>\n      );\n    } else {\n      return <p style={{color: 'green'}}>Approved!</p>;\n    }\n  }\n}\n","import React from 'react';\nimport Preview from './preview';\nimport SubmissionsSortingDropdown from './submissionsSortingDropdown';\nimport Status from './status';\n\n// Material UI imports\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nfunction compareByName(a, b) {\n  return a.submission.name.localeCompare(b.submission.name);\n}\n\nfunction compareByDate(a, b) {\n  return b.submission.date.toDate() - a.submission.date.toDate();\n}\n\nfunction compareByStatus(a, b) {\n  let aValue;\n  let bValue;\n\n  switch (a.submission.status.approval) {\n    case 'rejected':\n      aValue = -1;\n      break;\n    case 'approved':\n      aValue = 0;\n      break;\n    default:\n      aValue = 1;\n      break;\n  }\n\n  switch (b.submission.status.approval) {\n    case 'rejected':\n      bValue = -1;\n      break;\n    case 'approved':\n      bValue = 0;\n      break;\n    default:\n      bValue = 1;\n      break;\n  }\n\n  return aValue - bValue;\n}\n\nclass Submission extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submission = this.props.children.submission;\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>{this.submission.name}</h4>\n\n        {/* Status text */}\n        <Status status={this.submission.status} />\n        <div>\n          {/* Preview button */}\n          <Button\n            variant=\"contained\"\n            color={\n              this.props.children.id === this.props.previewId\n                ? 'secondary'\n                : 'default'\n            }\n            onClick={\n              this.props.children.id === this.props.previewId\n                ? this.props.handleHide\n                : () => this.props.handlePreview(this.props.children.id)\n            }>\n            {this.props.children.id === this.props.previewId\n              ? 'Hide'\n              : 'Preview'}\n          </Button>{' '}\n          {/* Edit button */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() =>\n              this.props.handleEdit(this.submission, this.props.children.id)\n            }>\n            Edit\n          </Button>{' '}\n          {/* Delete button */}\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() =>\n              this.props.handleDelete(\n                this.submission.panorama.fileName,\n                this.props.children.id,\n              )\n            }>\n            Delete\n            <DeleteIcon />\n          </Button>\n        </div>\n        <br />\n        <div style={{color: 'gray', fontSize: '80%'}}>\n          Submitted:{' '}\n          {this.submission.date.toDate().toLocaleString('default', {\n            day: 'numeric',\n            month: 'long',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n          })}\n        </div>\n        <br />\n        {this.props.children.id === this.props.previewId && (\n          <Preview submission={this.submission} />\n        )}\n      </div>\n    );\n  }\n}\n\nclass Submitted extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      submissions: [],\n      previewId: '',\n      loading: true,\n      sortBy: 'name',\n    };\n\n    // Read all of current user's submissions from firestore, then adds all\n    // submissions into state.\n    let submissions = [];\n    this.props.doc\n      .collection('submissions')\n      .get()\n      .then(querySnapshot =>\n        querySnapshot.forEach(doc => {\n          submissions.push({submission: doc.data(), id: doc.id});\n        }),\n      )\n      .then(() => {\n        submissions.sort(compareByName);\n        this.setState({submissions, loading: false});\n      });\n\n    this.handlePreview = this.handlePreview.bind(this);\n    this.handleHide = this.handleHide.bind(this);\n    this.handleSorting = this.handleSorting.bind(this);\n  }\n\n  handlePreview(docId) {\n    this.setState({\n      previewId: docId,\n    });\n  }\n\n  handleHide() {\n    this.setState({previewId: ''});\n  }\n\n  handleSorting(event) {\n    let submissions = this.state.submissions.slice();\n\n    switch (event.target.value) {\n      case 'name':\n        submissions.sort(compareByName);\n        break;\n      case 'date':\n        submissions.sort(compareByDate);\n        break;\n      case 'status':\n        submissions.sort(compareByStatus);\n        break;\n      default:\n        break;\n    }\n\n    this.setState({submissions, sortBy: event.target.value});\n  }\n\n  render() {\n    return (\n      <div>\n        {/* Loading message */}\n        {this.state.loading && <span>Loading... ...</span>}\n        {!this.state.loading && this.state.submissions.length === 0 && (\n          <span>You have not created any submissions (yet!)</span>\n        )}\n\n        {!this.state.loading && this.state.submissions.length !== 0 && (\n          <div>\n            <br />\n            <SubmissionsSortingDropdown\n              key={this.state.sortBy}\n              value={this.state.sortBy}\n              handleSorting={this.handleSorting}\n            />\n            <Table>\n              <TableBody>\n                {this.state.submissions.map((x, i) => (\n                  <TableRow key={i}>\n                    <TableCell>\n                      <Submission\n                        key={this.state.sortBy}\n                        handleEdit={this.props.handleEdit}\n                        handleDelete={this.props.handleDelete}\n                        handlePreview={this.handlePreview}\n                        handleHide={this.handleHide}\n                        previewId={this.state.previewId}>\n                        {x}\n                      </Submission>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default Submitted;\n","import React from 'react';\nimport Map from './components/map';\nimport Submitted from './components/submitted';\nimport Layout from './components/layout';\nimport firebase from './utils/firebase';\nimport Resizer from 'react-image-file-resizer';\n\n// Material UI imports\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nconst uniqid = require('uniqid');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      lat: 0,\n      lon: 0,\n      myLat: 0,\n      myLon: 0,\n      handicapped: false,\n      separateHandicapped: false,\n      hose: false,\n      showerHeads: false,\n      male: false,\n      female: false,\n      waterCooler: false,\n      progress: 0,\n      progressShown: false,\n      error: false,\n      submissionsShown: false,\n\n      // Fields in charge of editing.\n      edit: false,\n      panorama: {},\n      editPanorama: false,\n      editDocId: '',\n    };\n\n    this.fileInput = React.createRef();\n\n    this.db = firebase.firestore();\n    this.storage = firebase.storage();\n\n    // Document created by user\n    this.doc = this.db\n      .collection('userSubmissions')\n      .doc(this.props.currentUser.uid);\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleMapClick = this.handleMapClick.bind(this);\n    this.updateMyLocation = this.updateMyLocation.bind(this);\n    this.setToCurrentLocation = this.setToCurrentLocation.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  // Handles state of input forms\n  handleInputChange(event) {\n    const value =\n      event.target.type === 'checkbox'\n        ? event.target.checked\n        : event.target.value;\n\n    if (event.target.name !== 'handicapped') {\n      // Any checkbox/input that is not the handicapped checkbox, set state\n      // normally.\n      this.setState({\n        [event.target.name]: value,\n      });\n    } else {\n      // For handicapped checkbox, have to make sure that separateHandicapped\n      // checkbox is unticked when handicapped checkbox is unticked.\n      this.setState({\n        [event.target.name]: value,\n        separateHandicapped: value && this.state.separateHandicapped,\n      });\n    }\n  }\n\n  // Handles map clicks, will update lat lon field to clicked lat lon.\n  handleMapClick(lat, lon) {\n    this.setState({\n      lat,\n      lon,\n    });\n  }\n\n  // Whenever geolocation code in Map component runs, myLat and myLon in local\n  // state will be updated.\n  updateMyLocation(myLat, myLon) {\n    this.setState({\n      myLat,\n      myLon,\n    });\n  }\n\n  // Handles click on \"Set Lat Lon to current location button\". Does what\n  // the button says, sets Lat Lon state to that of current location.\n  // (if available)\n  setToCurrentLocation(event) {\n    event.preventDefault();\n    this.setState({\n      lat: this.state.myLat,\n      lon: this.state.myLon,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // If user is editing submission and does not choose to reupload panorama\n    if (this.state.edit && !this.state.editPanorama) {\n      this.doc\n        .collection('submissions')\n        .doc()\n        .set({\n          facilities: {\n            female: this.state.female,\n            handicapped: this.state.handicapped,\n            hose: this.state.hose,\n            male: this.state.male,\n            separateHandicapped: this.state.separateHandicapped,\n            showerHeads: this.state.showerHeads,\n            waterCooler: this.state.waterCooler,\n          },\n          lat: this.state.lat,\n          lon: this.state.lon,\n          name: this.state.name.trim(),\n\n          // Use old panorama.\n          panorama: this.state.panorama,\n\n          date: new Date(Date.now()),\n          status: {approval: 'pending', remarks: ''},\n        })\n        .then(() => {\n          // Delete old version.\n          this.doc\n            .collection('submissions')\n            .doc(this.state.editDocId)\n            .delete();\n        })\n        .then(() => window.location.reload());\n    } else {\n      // Ensures that file uploaded is an image. Does not work if file format\n      // was changed manually but submit will still not work, just that this\n      // warning will not show too.\n      if (\n        this.fileInput.current.files[0] == null ||\n        !/image\\/*/g.test(this.fileInput.current.files[0].type)\n      ) {\n        alert('Please make sure file uploaded is an image');\n      } else {\n        // Resize images to max width of 4096 to support mobile, after resizing,\n        // image will be uploaded and firestore storage entry would be created.\n        Resizer.imageFileResizer(\n          this.fileInput.current.files[0],\n          4096,\n          4096,\n          'JPEG',\n          70,\n          0,\n          blob => {\n            // Show submission progress.\n            this.setState({progressShown: true});\n\n            // Sets file name, file name appended with a unique id to prevent\n            // overwrites.\n            const fileName = `${this.state.name} - ${uniqid()}.jpeg`;\n\n            // Uploads image to firebase storage\n            let uploadTask = this.storage\n              .ref()\n              .child(fileName)\n              .put(blob);\n\n            uploadTask.on(\n              firebase.storage.TaskEvent.STATE_CHANGED,\n              snapshot => {\n                let progress =\n                  (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n\n                this.setState({progress});\n              },\n              err => {\n                this.setState({error: true});\n              },\n              () => {\n                // Upload completed successfully\n                uploadTask.snapshot.ref.getDownloadURL().then(url => {\n                  // To get the document does not exist message away\n                  this.doc.set({\n                    currentUser: {\n                      name: this.props.currentUser.displayName,\n                      email: this.props.currentUser.email,\n                      photoURL: this.props.currentUser.photoURL,\n                      uid: this.props.currentUser.uid,\n                    },\n                  });\n\n                  this.doc\n                    .collection('submissions')\n                    .doc()\n                    .set({\n                      facilities: {\n                        female: this.state.female,\n                        handicapped: this.state.handicapped,\n                        hose: this.state.hose,\n                        male: this.state.male,\n                        separateHandicapped: this.state.separateHandicapped,\n                        showerHeads: this.state.showerHeads,\n                        waterCooler: this.state.waterCooler,\n                      },\n                      lat: this.state.lat,\n                      lon: this.state.lon,\n                      name: this.state.name.trim(),\n                      panorama: {url, fileName},\n                      date: new Date(Date.now()),\n                      status: {approval: 'pending', remarks: ''},\n                    })\n                    .then(() => {\n                      // If is editing submission, delete old version and old\n                      // panorama\n                      if (this.state.edit) {\n                        this.doc\n                          .collection('submissions')\n                          .doc(this.state.editDocId)\n                          .delete();\n\n                        // Delete old panorama\n                        this.storage\n                          .ref()\n                          .child(this.state.panorama.fileName)\n                          .delete();\n                      }\n                    })\n                    .then(() => window.location.reload());\n                });\n              },\n            );\n          },\n          'blob',\n        );\n      }\n    }\n  }\n\n  // Handle the deleting of submission. Meant to be passed as a prop\n  // into <Submitted /> component.\n  handleDelete(fileName, submissionId) {\n    if (window.confirm('Are you sure you want to delete this submission?')) {\n      // Deletes document from firestore.\n      this.doc\n        .collection('submissions')\n        .doc(submissionId)\n        .delete()\n        .then(() =>\n          // Deletes panorama image from storage.\n          this.storage\n            .ref()\n            .child(fileName)\n            .delete()\n            .then(() => window.location.reload()),\n        );\n    }\n  }\n\n  // Handle the editing of user submitted toilets. Meant to be passed as a prop\n  // into <Submitted /> component.\n  handleEdit(submission, submissionId) {\n    window.scrollTo(0, 0);\n    this.setState({\n      edit: true,\n      female: submission.facilities.female,\n      male: submission.facilities.male,\n      handicapped: submission.facilities.handicapped,\n      separateHandicapped: submission.facilities.separateHandicapped,\n      showerHeads: submission.facilities.showerHeads,\n      waterCooler: submission.facilities.waterCooler,\n      hose: submission.facilities.hose,\n      lat: submission.lat,\n      lon: submission.lon,\n      name: submission.name,\n      panorama: submission.panorama,\n      editDocId: submissionId,\n    });\n  }\n\n  render() {\n    // console.log(this.state);\n    return (\n      <Layout>\n        <h1>Submit to Let It Go</h1>\n        {this.state.edit && <h6>Editing submission</h6>}\n        {/* Main form */}\n        <form onSubmit={this.handleSubmit}>\n          {/* Toilet name input*/}\n          <TextField\n            label=\"Name\"\n            placeholder=\"Enter toilet name\"\n            fullWidth\n            margin=\"normal\"\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            name=\"name\"\n            onChange={this.handleInputChange}\n            value={this.state.name}\n          />\n          {/* Set Lat Lon to current location button */}\n          <Button onClick={this.setToCurrentLocation} variant=\"contained\">\n            Set Lat Lon to current location\n          </Button>\n          <br />\n          {/* Lat input */}\n          <TextField\n            style={{marginRight: '1em'}}\n            label=\"Latitude\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"lat\"\n            onChange={this.handleInputChange}\n            value={this.state.lat}\n          />\n          {/* Lon input */}\n          <TextField\n            label=\"Longitude\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"lon\"\n            onChange={this.handleInputChange}\n            value={this.state.lon}\n          />\n          {/* Map component, takes in 2 functions that are needed to set local\n        state from child component */}\n          <Map\n            handleMapClick={this.handleMapClick}\n            updateMyLocation={this.updateMyLocation}\n          />\n          <br />\n          {/* Checkboxes */}\n          <FormLabel component=\"legend\">Facilities</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.male}\n                  onChange={this.handleInputChange}\n                  name=\"male\"\n                />\n              }\n              label=\"Male\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.female}\n                  onChange={this.handleInputChange}\n                  name=\"female\"\n                />\n              }\n              label=\"Female\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.handicapped}\n                  onChange={this.handleInputChange}\n                  name=\"handicapped\"\n                />\n              }\n              label=\"Handicapped\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.separateHandicapped}\n                  onChange={this.handleInputChange}\n                  name=\"separateHandicapped\"\n                  disabled={!this.state.handicapped}\n                />\n              }\n              label=\"Separate Handicapped\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.hose}\n                  onChange={this.handleInputChange}\n                  name=\"hose\"\n                />\n              }\n              label=\"Hose\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.showerHeads}\n                  onChange={this.handleInputChange}\n                  name=\"showerHeads\"\n                />\n              }\n              label=\"Shower Heads\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.waterCooler}\n                  onChange={this.handleInputChange}\n                  name=\"waterCooler\"\n                />\n              }\n              label=\"Water Cooler\"\n            />\n          </FormGroup>\n          <br />\n\n          {/* Present user with choice to edit Panorama image if edit\n          mode is on */}\n          {this.state.edit && (\n            <div>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={this.state.editPanorama}\n                    onChange={this.handleInputChange}\n                    name=\"editPanorama\"\n                  />\n                }\n                label=\"Edit Panorama image\"\n              />\n              <br />\n            </div>\n          )}\n\n          <input\n            type=\"file\"\n            name=\"paranomaPath\"\n            accept=\"image/*\"\n            ref={this.fileInput}\n            id=\"contained-button-file\"\n            style={{display: 'none'}}\n          />\n\n          {/* Do not show upload Panorama button if in edit mode and\n          edit panorama is not chosen */}\n          {(!this.state.edit || this.state.editPanorama) && (\n            <label htmlFor=\"contained-button-file\">\n              <Button variant=\"contained\" component=\"span\">\n                Select panorama image\n              </Button>\n            </label>\n          )}\n          <br />\n          <br />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            disabled={\n              this.state.name === '' ||\n              this.state.lat === 0 ||\n              this.state.lon === 0\n            }>\n            Submit\n          </Button>\n          {/* Progress indicator */}\n          <span>\n            {this.state.progressShown &&\n              ' ' + Math.floor(this.state.progress) + '%'}\n          </span>\n          {/* Error indicator */}\n          <p>\n            {this.state.error &&\n              'An error occured, please refresh the page and try again'}\n          </p>\n          {this.state.edit && (\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => window.location.reload()}>\n              Cancel\n            </Button>\n          )}\n        </form>\n\n        <Button\n          color=\"secondary\"\n          onClick={() =>\n            this.setState({submissionsShown: !this.state.submissionsShown})\n          }>\n          {`${this.state.submissionsShown ? 'Hide' : 'Show'} your submissions`}\n        </Button>\n\n        {this.state.submissionsShown && (\n          <Submitted\n            uid={this.props.currentUser.uid}\n            doc={this.doc}\n            handleEdit={this.handleEdit}\n            handleDelete={this.handleDelete}\n          />\n        )}\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport Admin from '../Admin';\nimport App from '../App';\n\nimport Button from '@material-ui/core/Button';\n\nexport default class SwitchPortals extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isAdmin: false};\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{textAlign: 'center'}}>\n          <Button\n            onClick={() => this.setState({isAdmin: !this.state.isAdmin})}\n            variant=\"contained\"\n            color=\"secondary\">\n            {`Change to ${this.state.isAdmin ? 'submission' : 'admin'} portal`}\n          </Button>\n        </div>\n        {!this.state.isAdmin ? (\n          <App currentUser={this.props.currentUser} />\n        ) : (\n          <Admin />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Layout from './components/layout';\nimport RandomToiletQuote from './components/randomToiletQuote';\nimport SwitchPortals from './components/switchPortals';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from './utils/firebase';\nimport App from './App';\n\nimport Button from '@material-ui/core/Button';\n\nfunction isNelsonOrZx(email) {\n  return email === 'lowzxx@gmail.com' || email === 'nelsontkyi@gmail.com';\n}\n\n// Implement Google and Firebase signin\n\nconst uiConfig = {\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n};\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSignedIn: false,\n    };\n  }\n\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase\n      .auth()\n      .onAuthStateChanged(user => this.setState({isSignedIn: !!user}));\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <Layout>\n          <h1>Submit to Let It Go</h1>\n          <p>Please sign-in:</p>\n          <StyledFirebaseAuth\n            uiConfig={uiConfig}\n            firebaseAuth={firebase.auth()}\n          />\n          <RandomToiletQuote />\n        </Layout>\n      );\n    } else {\n      return (\n        <div>\n          <Layout>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => firebase.auth().signOut()}>\n              Sign Out\n            </Button>\n          </Layout>\n\n          {/* Give option to switch portals if is admin logging in, else just\n          show the submission portal */}\n          {isNelsonOrZx(firebase.auth().currentUser.email) ? (\n            <SwitchPortals currentUser={firebase.auth().currentUser} />\n          ) : (\n            <App currentUser={firebase.auth().currentUser} />\n          )}\n        </div>\n      );\n    }\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\nimport Typography from 'typography';\nimport fairyGatesTheme from 'typography-theme-fairy-gates';\nimport injectFonts from 'typography-inject-fonts';\n\nconst typography = new Typography(fairyGatesTheme);\ntypography.injectStyles()\ninjectFonts(typography)\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}