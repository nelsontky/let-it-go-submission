{"version":3,"sources":["utils/firebase.js","components/map.js","components/layout.js","components/panorama.js","components/preview.js","components/submissionsSortingDropdown.js","components/status.js","components/submitted.js","App.js","Admin.js","Main.js","index.js"],"names":["firebase","require","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Map","_this","this","navigator","geolocation","id","watchPosition","position","lat","coords","latitude","lon","longitude","props","updateMyLocation","myLocation","setPosition","lng","accuracyRadius","setCenter","setRadius","accuracy","console","log","enableHighAccuracy","_this2","NUS","map","window","google","maps","document","getElementById","zoom","center","Marker","icon","Circle","radius","fillColor","fillOpacity","strokeWeight","addListener","e","handleMapClick","latLng","marker","setMap","getPosition","self","centerControlDiv","createElement","controlDiv","controlUI","style","backgroundColor","border","borderRadius","boxShadow","cursor","textAlign","marginBottom","height","title","appendChild","controlText","innerHTML","addEventListener","index","controls","ControlPosition","LEFT_BOTTOM","push","watchLocation","clearWatch","react_default","a","width","React","Component","layout","_ref","children","margin","maxWidth","padding","Panorama","viewer","pannellum","type","panorama","url","vaov","maxPitch","minPitch","autoLoad","destroy","Preview","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","submission","staticMapUrl","concat","facilities","handicapped","separateHandicapped","bool","textDecoration","color","name","src","alt","listStyle","glanceStyle","male","className","female","handicappedText","waterCooler","showerHeads","hose","SubmissionsSortingDropdown","FormControl","InputLabel","Select","value","autoWidth","onChange","handleSorting","MenuItem","Status","state","remarksShown","approval","status","remarks","Button","onClick","setState","compareByName","b","localeCompare","compareByDate","date","toDate","compareByStatus","aValue","bValue","Submission","status_Status","variant","previewId","handleHide","handlePreview","handleEdit","handleDelete","fileName","Delete_default","fontSize","toLocaleString","day","month","year","hour","minute","second","preview","Submitted","_this3","submissions","loading","sortBy","doc","collection","get","then","querySnapshot","forEach","data","sort","bind","assertThisInitialized","docId","event","slice","target","_this4","length","submissionsSortingDropdown_SubmissionsSortingDropdown","key","Table","TableBody","x","i","TableRow","TableCell","submitted_Submission","uniqid","App","myLat","myLon","progress","progressShown","error","submissionsShown","edit","editPanorama","editDocId","fileInput","createRef","db","firestore","storage","currentUser","uid","handleInputChange","setToCurrentLocation","handleSubmit","_this$setState2","checked","defineProperty","preventDefault","set","trim","Date","now","delete","location","reload","current","files","test","Resizer","imageFileResizer","blob","uploadTask","ref","child","put","on","TaskEvent","STATE_CHANGED","snapshot","bytesTransferred","totalBytes","err","getDownloadURL","displayName","email","photoURL","alert","submissionId","confirm","scrollTo","onSubmit","TextField","label","placeholder","fullWidth","InputLabelProps","shrink","marginRight","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","disabled","accept","display","htmlFor","Math","floor","submitted","Admin","submissionsDb","toiletDb","dialogOpened","submissionToDelete","submissionToApprove","getAllSubmissions","users","user","getSubmissionsForUser","catch","newSubmissions","userUid","isFemale","isMale","isHandicapped","isSeparateHandicapped","hasHose","hasShowerHeads","hasWaterCooler","paranomaUrl","isEditing","prevState","toConsumableArray","flatMap","result","triggerDialogToConfirmApprove","submissionIndex","submissionToEdit","triggerDialogToConfirmDelete","approveDialogOpened","_this5","update","deleteDialogOpened","_this6","_this7","tempName","_this8","Input","defaultValue","multiline","generateFacilities","undefined","size","handleConfirmEdit","submissionAction","_this9","Paper","Dialog","onClose","open","DialogTitle","DialogContent","DialogContentText","DialogActions","approveSubmission","deleteSubmission","TableHead","generateTable","uiConfig","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","Main","isSignedIn","unregisterAuthObserver","onAuthStateChanged","Admin_Admin","signOut","src_App","StyledFirebaseAuth_default","firebaseAuth","typography","Typography","fairyGatesTheme","injectStyles","injectFonts","ReactDOM","render","Main_Main"],"mappings":"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","file":"static/js/main.e113ba05.chunk.js","sourcesContent":["const firebase = require('firebase/app');\nrequire('firebase/firestore');\nrequire(\"firebase/auth\");\nrequire(\"firebase/storage\");\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n  authDomain: \"let-it-go-e6229.firebaseapp.com\",\n  databaseURL: \"https://let-it-go-e6229.firebaseio.com\",\n  projectId: \"let-it-go-e6229\",\n  storageBucket: \"let-it-go-e6229.appspot.com\",\n  messagingSenderId: \"917575844853\",\n  appId: \"1:917575844853:web:88ec0cbe059a0d43\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from 'react';\n\nclass Map extends React.Component {\n  watchLocation() {\n    if (navigator.geolocation) {\n      this.id = navigator.geolocation.watchPosition(\n        position => {\n          const lat = position.coords.latitude;\n          const lon = position.coords.longitude;\n          this.props.updateMyLocation(lat, lon);\n\n          this.myLocation.setPosition({lat: lat, lng: lon});\n          this.accuracyRadius.setCenter({lat: lat, lng: lon});\n          this.accuracyRadius.setRadius(position.coords.accuracy);\n        },\n        () => console.log('No permission'),\n        {\n          enableHighAccuracy: true,\n        },\n      );\n    } else {\n      // Browser doesn't support Geolocation\n      console.log('No permission');\n    }\n  }\n\n  componentDidMount() {\n    const NUS = {lat: 1.296675, lng: 103.776396};\n    this.map = new window.google.maps.Map(document.getElementById('map'), {\n      zoom: 13,\n      center: NUS,\n    });\n\n    this.myLocation = new window.google.maps.Marker({\n      position: NUS,\n      map: this.map,\n      icon:\n        'https://raw.githubusercontent.com/nelsontky/let-it-go/master/assets/icons/locationMarker.png',\n    });\n\n    this.accuracyRadius = new window.google.maps.Circle({\n      map: this.map,\n      center: NUS,\n      radius: 0,\n      fillColor: '#00F',\n      fillOpacity: 0.2,\n      strokeWeight: 0,\n    });\n\n    // Click listeners\n    this.map.addListener('click', e => {\n      this.props.handleMapClick(e.latLng.lat(), e.latLng.lng());\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: e.latLng,\n        map: this.map,\n      });\n    });\n    this.accuracyRadius.addListener('click', e => {\n      this.props.handleMapClick(e.latLng.lat(), e.latLng.lng());\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: e.latLng,\n        map: this.map,\n      });\n    });\n    this.myLocation.addListener('click', () => {\n      this.props.handleMapClick(\n        this.myLocation.getPosition().lat(),\n        this.myLocation.getPosition().lng(),\n      );\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: this.myLocation.getPosition(),\n        map: this.map,\n      });\n    });\n\n    // Location button\n    const self = this;\n    function CenterControl(controlDiv, map) {\n      // Set CSS for the control border.\n      let controlUI = document.createElement('div');\n      controlUI.style.backgroundColor = '#fff';\n      controlUI.style.border = '2px solid #fff';\n      controlUI.style.borderRadius = '3px';\n      controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';\n      controlUI.style.cursor = 'pointer';\n      controlUI.style.textAlign = 'center';\n      controlUI.style.marginBottom = '22px';\n      controlUI.style.height = '31px';\n      controlUI.title = 'Click to recenter the map to location';\n      controlDiv.appendChild(controlUI);\n\n      // Set CSS for the control interior.\n      let controlText = document.createElement('div');\n      controlText.innerHTML = \"<img src='https://i.imgur.com/raFRca2.png' />\";\n      controlUI.appendChild(controlText);\n\n      // Setup the click event listeners\n      controlUI.addEventListener('click', function() {\n        map.setCenter(self.myLocation.getPosition());\n      });\n    }\n\n    // Render the button\n    let centerControlDiv = document.createElement('div');\n    new CenterControl(centerControlDiv, this.map);\n\n    centerControlDiv.index = 1;\n    this.map.controls[window.google.maps.ControlPosition.LEFT_BOTTOM].push(\n      centerControlDiv,\n    );\n\n    this.watchLocation();\n  }\n\n  componentWillUnmount() {\n    navigator.geolocation.clearWatch(this.id);\n  }\n\n  render() {\n    return <div id=\"map\" style={{width: '100%', height: '300px'}}></div>;\n  }\n}\n\nexport default Map;\n","import React from 'react';\n\nexport default ({children}) => (\n  <div style={{margin: `3rem auto`, maxWidth: 650, padding: `0 1rem`}}>\n    {children}\n  </div>\n);\n","import React from 'react';\n\nclass Panorama extends React.Component {\n  componentDidMount() {\n    this.viewer = window.pannellum.viewer('panorama', {\n      type: 'equirectangular',\n      panorama: this.props.url,\n      vaov: 45,\n      maxPitch: 0,\n      minPitch: 0,\n      autoLoad: true,\n    });\n  }\n\n  componentWillUnmount() {\n    console.log('destroy');\n    this.viewer.destroy();\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"panorama\" style={{width: '100%', height: 200}} />\n      </div>\n    );\n  }\n}\n\nexport default Panorama;\n","import React from 'react';\nimport Layout from './layout';\nimport Panorama from './panorama';\n\nclass Preview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submission = this.props.submission;\n\n    this.staticMapUrl = `https://maps.googleapis.com/maps/api/staticmap?size=650x300&markers=|${this.submission.lat}, ${this.submission.lon}&key=${process.env.REACT_APP_GOOGLE_API_KEY}`;\n  }\n\n  handicappedText() {\n    if (!this.submission.facilities.handicapped) {\n      return 'Is handicapped accessible';\n    } else if (!this.submission.facilities.separateHandicapped)\n      return 'Is handicapped accessible (Handicapped cubicle inside toilet)';\n    else {\n      return 'Is handicapped accessible (Has separate handicapped toilet)';\n    }\n  }\n\n  glanceStyle(bool) {\n    return {\n      textDecoration: bool ? '' : 'line-through',\n      color: bool ? '' : 'gray',\n    };\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h3>{this.submission.name}</h3>\n        <img src={this.staticMapUrl} alt=\"Static map preview\" />\n        <Panorama url={this.submission.panorama.url} />\n        <h4>At a glance</h4>\n        <ul style={{listStyle: 'none'}}>\n          <li style={this.glanceStyle(this.submission.facilities.male)}>\n            <i className=\"em-svg em-man-raising-hand\" />\n            Has Male toilet\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.female)}>\n            <i className=\"em-svg em-woman-raising-hand\" />\n            Has Female toilet\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.handicapped)}>\n            <i className=\"em-svg em-wheelchair\" />\n            {this.handicappedText()}\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.waterCooler)}>\n            <i className=\"em-svg em-potable_water\" />\n            Has water cooler\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.showerHeads)}>\n            <i className=\"em-svg em-shower\" />\n            Has shower heads\n          </li>\n          <li style={this.glanceStyle(this.submission.facilities.hose)}>\n            <i className=\"em-svg em-sweat_drops\" />\n            Has hose\n          </li>\n        </ul>\n      </Layout>\n    );\n  }\n}\n\nexport default Preview;\n","import React from 'react';\n\n// Material UI imports\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nexport default class SubmissionsSortingDropdown extends React.Component {\n  render() {\n    return (\n      <FormControl>\n        <InputLabel>Sort by</InputLabel>\n        <Select\n          value={this.props.value}\n          autoWidth\n          onChange={this.props.handleSorting}\n        >\n          <MenuItem value=\"name\">Name</MenuItem>\n          <MenuItem value=\"date\">Date (Newest first)</MenuItem>\n          <MenuItem value=\"status\">Status</MenuItem>\n        </Select>\n      </FormControl>\n    );\n  }\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nexport default class Status extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {remarksShown: false};\n\n    this.approval = this.props.status.approval;\n    this.remarks = this.props.status.remarks;\n  }\n\n  render() {\n    if (this.approval === 'rejected') {\n      return (\n        <div>\n          <p style={{color: 'red'}}>\n            {'Rejected '}\n            <Button\n              color='primary'\n              onClick={() =>\n                this.setState({remarksShown: !this.state.remarksShown})\n              }>\n                {this.state.remarksShown ? 'Hide' : 'Show reason'}\n            </Button>\n          </p>\n          {this.state.remarksShown && <p>{this.remarks}</p>}\n        </div>\n      );\n    } else if (this.approval === 'pending') {\n      return (\n        <p>\n          <em>Submission pending review</em>\n        </p>\n      );\n    } else {\n      return <p style={{color: 'green'}}>Approved!</p>;\n    }\n  }\n}\n","import React from 'react';\nimport Preview from './preview';\nimport SubmissionsSortingDropdown from './submissionsSortingDropdown';\nimport Status from './status';\n\n// Material UI imports\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nfunction compareByName(a, b) {\n  return a.submission.name.localeCompare(b.submission.name);\n}\n\nfunction compareByDate(a, b) {\n  return b.submission.date.toDate() - a.submission.date.toDate();\n}\n\nfunction compareByStatus(a, b) {\n  let aValue;\n  let bValue;\n\n  switch (a.submission.status.approval) {\n    case 'rejected':\n      aValue = -1;\n      break;\n    case 'approved':\n      aValue = 0;\n      break;\n    default:\n      aValue = 1;\n      break;\n  }\n\n  switch (b.submission.status.approval) {\n    case 'rejected':\n      bValue = -1;\n      break;\n    case 'approved':\n      bValue = 0;\n      break;\n    default:\n      bValue = 1;\n      break;\n  }\n\n  return aValue - bValue;\n}\n\nclass Submission extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submission = this.props.children.submission;\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>{this.submission.name}</h4>\n\n        <Status status={this.submission.status} />\n        <div>\n          {/* Preview button */}\n          <Button\n            variant=\"contained\"\n            color={\n              this.props.children.id === this.props.previewId\n                ? 'secondary'\n                : 'default'\n            }\n            onClick={\n              this.props.children.id === this.props.previewId\n                ? this.props.handleHide\n                : () => this.props.handlePreview(this.props.children.id)\n            }>\n            {this.props.children.id === this.props.previewId\n              ? 'Hide'\n              : 'Preview'}\n          </Button>{' '}\n          {/* Edit button */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() =>\n              this.props.handleEdit(this.submission, this.props.children.id)\n            }>\n            Edit\n          </Button>{' '}\n          {/* Delete button */}\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() =>\n              this.props.handleDelete(\n                this.submission.panorama.fileName,\n                this.props.children.id,\n              )\n            }>\n            Delete\n            <DeleteIcon />\n          </Button>\n        </div>\n        <br />\n        <div style={{color: 'gray', fontSize: '80%'}}>\n          Submitted:{' '}\n          {this.submission.date.toDate().toLocaleString('default', {\n            day: 'numeric',\n            month: 'long',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n          })}\n        </div>\n        <br />\n        {this.props.children.id === this.props.previewId && (\n          <Preview submission={this.submission} />\n        )}\n      </div>\n    );\n  }\n}\n\nclass Submitted extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      submissions: [],\n      previewId: '',\n      loading: true,\n      sortBy: 'name',\n    };\n\n    // Read all of current user's submissions from firestore, then adds all\n    // submissions into state.\n    let submissions = [];\n    this.props.doc\n      .collection('submissions')\n      .get()\n      .then(querySnapshot =>\n        querySnapshot.forEach(doc => {\n          submissions.push({submission: doc.data(), id: doc.id});\n        }),\n      )\n      .then(() => {\n        submissions.sort(compareByName);\n        this.setState({submissions, loading: false});\n      });\n\n    this.handlePreview = this.handlePreview.bind(this);\n    this.handleHide = this.handleHide.bind(this);\n    this.handleSorting = this.handleSorting.bind(this);\n  }\n\n  handlePreview(docId) {\n    this.setState({\n      previewId: docId,\n    });\n  }\n\n  handleHide() {\n    this.setState({previewId: ''});\n  }\n\n  handleSorting(event) {\n    let submissions = this.state.submissions.slice();\n\n    switch (event.target.value) {\n      case 'name':\n        submissions.sort(compareByName);\n        break;\n      case 'date':\n        submissions.sort(compareByDate);\n        break;\n      case 'status':\n        submissions.sort(compareByStatus);\n        break;\n      default:\n        break;\n    }\n\n    this.setState({submissions, sortBy: event.target.value});\n  }\n\n  render() {\n    return (\n      <div>\n        {/* Loading message */}\n        {this.state.loading && <span>Loading... ...</span>}\n        {!this.state.loading && this.state.submissions.length === 0 && (\n          <span>You have not created any submissions (yet!)</span>\n        )}\n\n        {!this.state.loading && this.state.submissions.length !== 0 && (\n          <div>\n            <br />\n            <SubmissionsSortingDropdown\n              key={this.state.sortBy}\n              value={this.state.sortBy}\n              handleSorting={this.handleSorting}\n            />\n            <Table>\n              <TableBody>\n                {this.state.submissions.map((x, i) => (\n                  <TableRow key={i}>\n                    <TableCell>\n                      <Submission\n                        key={this.state.sortBy}\n                        handleEdit={this.props.handleEdit}\n                        handleDelete={this.props.handleDelete}\n                        handlePreview={this.handlePreview}\n                        handleHide={this.handleHide}\n                        previewId={this.state.previewId}>\n                        {x}\n                      </Submission>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default Submitted;\n","import React from 'react';\nimport Map from './components/map';\nimport Submitted from './components/submitted';\nimport Layout from './components/layout';\nimport firebase from './utils/firebase';\nimport Resizer from 'react-image-file-resizer';\n\n// Material UI imports\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nconst uniqid = require('uniqid');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      lat: 0,\n      lon: 0,\n      myLat: 0,\n      myLon: 0,\n      handicapped: false,\n      separateHandicapped: false,\n      hose: false,\n      showerHeads: false,\n      male: false,\n      female: false,\n      waterCooler: false,\n      progress: 0,\n      progressShown: false,\n      error: false,\n      submissionsShown: false,\n\n      // Fields in charge of editing.\n      edit: false,\n      panorama: {},\n      editPanorama: false,\n      editDocId: '',\n    };\n\n    this.fileInput = React.createRef();\n\n    this.db = firebase.firestore();\n    this.storage = firebase.storage();\n\n    // Document created by user\n    this.doc = this.db\n      .collection('userSubmissions')\n      .doc(this.props.currentUser.uid);\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleMapClick = this.handleMapClick.bind(this);\n    this.updateMyLocation = this.updateMyLocation.bind(this);\n    this.setToCurrentLocation = this.setToCurrentLocation.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  // Handles state of input forms\n  handleInputChange(event) {\n    const value =\n      event.target.type === 'checkbox'\n        ? event.target.checked\n        : event.target.value;\n\n    if (event.target.name !== 'handicapped') {\n      // Any checkbox/input that is not the handicapped checkbox, set state\n      // normally.\n      this.setState({\n        [event.target.name]: value,\n      });\n    } else {\n      // For handicapped checkbox, have to make sure that separateHandicapped\n      // checkbox is unticked when handicapped checkbox is unticked.\n      this.setState({\n        [event.target.name]: value,\n        separateHandicapped: value && this.state.separateHandicapped,\n      });\n    }\n  }\n\n  // Handles map clicks, will update lat lon field to clicked lat lon.\n  handleMapClick(lat, lon) {\n    this.setState({\n      lat,\n      lon,\n    });\n  }\n\n  // Whenever geolocation code in Map component runs, myLat and myLon in local\n  // state will be updated.\n  updateMyLocation(myLat, myLon) {\n    this.setState({\n      myLat,\n      myLon,\n    });\n  }\n\n  // Handles click on \"Set Lat Lon to current location button\". Does what\n  // the button says, sets Lat Lon state to that of current location.\n  // (if available)\n  setToCurrentLocation(event) {\n    event.preventDefault();\n    this.setState({\n      lat: this.state.myLat,\n      lon: this.state.myLon,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // If user is editing submission and does not choose to reupload panorama\n    if (this.state.edit && !this.state.editPanorama) {\n      this.doc\n        .collection('submissions')\n        .doc()\n        .set({\n          facilities: {\n            female: this.state.female,\n            handicapped: this.state.handicapped,\n            hose: this.state.hose,\n            male: this.state.male,\n            separateHandicapped: this.state.separateHandicapped,\n            showerHeads: this.state.showerHeads,\n            waterCooler: this.state.waterCooler,\n          },\n          lat: this.state.lat,\n          lon: this.state.lon,\n          name: this.state.name.trim(),\n\n          // Use old panorama.\n          panorama: this.state.panorama,\n\n          date: new Date(Date.now()),\n          status: {approval: 'pending', remarks: ''},\n        })\n        .then(() => {\n          // Delete old version.\n          this.doc\n            .collection('submissions')\n            .doc(this.state.editDocId)\n            .delete();\n        })\n        .then(() => window.location.reload());\n    } else {\n      // Ensures that file uploaded is an image. Does not work if file format\n      // was changed manually but submit will still not work, just that this\n      // warning will not show too.\n      if (\n        this.fileInput.current.files[0] == null ||\n        !/image\\/*/g.test(this.fileInput.current.files[0].type)\n      ) {\n        alert('Please make sure file uploaded is an image');\n      } else {\n        // Resize images to max width of 4096 to support mobile, after resizing,\n        // image will be uploaded and firestore storage entry would be created.\n        Resizer.imageFileResizer(\n          this.fileInput.current.files[0],\n          4096,\n          4096,\n          'JPEG',\n          70,\n          0,\n          blob => {\n            // Show submission progress.\n            this.setState({progressShown: true});\n\n            // Sets file name, file name appended with a unique id to prevent\n            // overwrites.\n            const fileName = `${this.state.name} - ${uniqid()}.jpeg`;\n\n            // Uploads image to firebase storage\n            let uploadTask = this.storage\n              .ref()\n              .child(fileName)\n              .put(blob);\n\n            uploadTask.on(\n              firebase.storage.TaskEvent.STATE_CHANGED,\n              snapshot => {\n                let progress =\n                  (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n\n                this.setState({progress});\n              },\n              err => {\n                this.setState({error: true});\n              },\n              () => {\n                // Upload completed successfully\n                uploadTask.snapshot.ref.getDownloadURL().then(url => {\n                  // To get the document does not exist message away\n                  this.doc.set({\n                    currentUser: {\n                      name: this.props.currentUser.displayName,\n                      email: this.props.currentUser.email,\n                      photoURL: this.props.currentUser.photoURL,\n                      uid: this.props.currentUser.uid,\n                    },\n                  });\n\n                  this.doc\n                    .collection('submissions')\n                    .doc()\n                    .set({\n                      facilities: {\n                        female: this.state.female,\n                        handicapped: this.state.handicapped,\n                        hose: this.state.hose,\n                        male: this.state.male,\n                        separateHandicapped: this.state.separateHandicapped,\n                        showerHeads: this.state.showerHeads,\n                        waterCooler: this.state.waterCooler,\n                      },\n                      lat: this.state.lat,\n                      lon: this.state.lon,\n                      name: this.state.name.trim(),\n                      panorama: {url, fileName},\n                      date: new Date(Date.now()),\n                      status: {approval: 'pending', remarks: ''},\n                    })\n                    .then(() => {\n                      // If is editing submission, delete old version and old\n                      // panorama\n                      if (this.state.edit) {\n                        this.doc\n                          .collection('submissions')\n                          .doc(this.state.editDocId)\n                          .delete();\n\n                        // Delete old panorama\n                        this.storage\n                          .ref()\n                          .child(this.state.panorama.fileName)\n                          .delete();\n                      }\n                    })\n                    .then(() => window.location.reload());\n                });\n              },\n            );\n          },\n          'blob',\n        );\n      }\n    }\n  }\n\n  // Handle the deleting of submission. Meant to be passed as a prop\n  // into <Submitted /> component.\n  handleDelete(fileName, submissionId) {\n    if (window.confirm('Are you sure you want to delete this submission?')) {\n      // Deletes document from firestore.\n      this.doc\n        .collection('submissions')\n        .doc(submissionId)\n        .delete()\n        .then(() =>\n          // Deletes panorama image from storage.\n          this.storage\n            .ref()\n            .child(fileName)\n            .delete()\n            .then(() => window.location.reload()),\n        );\n    }\n  }\n\n  // Handle the editing of user submitted toilets. Meant to be passed as a prop\n  // into <Submitted /> component.\n  handleEdit(submission, submissionId) {\n    window.scrollTo(0, 0);\n    this.setState({\n      edit: true,\n      female: submission.facilities.female,\n      male: submission.facilities.male,\n      handicapped: submission.facilities.handicapped,\n      separateHandicapped: submission.facilities.separateHandicapped,\n      showerHeads: submission.facilities.showerHeads,\n      waterCooler: submission.facilities.waterCooler,\n      hose: submission.facilities.hose,\n      lat: submission.lat,\n      lon: submission.lon,\n      name: submission.name,\n      panorama: submission.panorama,\n      editDocId: submissionId,\n    });\n  }\n\n  render() {\n    // console.log(this.state);\n    return (\n      <Layout>\n        {this.state.edit && <h6>Editing submission</h6>}\n        {/* Main form */}\n        <form onSubmit={this.handleSubmit}>\n          {/* Toilet name input*/}\n          <TextField\n            label=\"Name\"\n            placeholder=\"Enter toilet name\"\n            fullWidth\n            margin=\"normal\"\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            name=\"name\"\n            onChange={this.handleInputChange}\n            value={this.state.name}\n          />\n          {/* Set Lat Lon to current location button */}\n          <Button onClick={this.setToCurrentLocation} variant=\"contained\">\n            Set Lat Lon to current location\n          </Button>\n          <br />\n          {/* Lat input */}\n          <TextField\n            style={{marginRight: '1em'}}\n            label=\"Latitude\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"lat\"\n            onChange={this.handleInputChange}\n            value={this.state.lat}\n          />\n          {/* Lon input */}\n          <TextField\n            label=\"Longitude\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"lon\"\n            onChange={this.handleInputChange}\n            value={this.state.lon}\n          />\n          {/* Map component, takes in 2 functions that are needed to set local\n        state from child component */}\n          <Map\n            handleMapClick={this.handleMapClick}\n            updateMyLocation={this.updateMyLocation}\n          />\n          <br />\n          {/* Checkboxes */}\n          <FormLabel component=\"legend\">Facilities</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.male}\n                  onChange={this.handleInputChange}\n                  name=\"male\"\n                />\n              }\n              label=\"Male\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.female}\n                  onChange={this.handleInputChange}\n                  name=\"female\"\n                />\n              }\n              label=\"Female\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.handicapped}\n                  onChange={this.handleInputChange}\n                  name=\"handicapped\"\n                />\n              }\n              label=\"Handicapped\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.separateHandicapped}\n                  onChange={this.handleInputChange}\n                  name=\"separateHandicapped\"\n                  disabled={!this.state.handicapped}\n                />\n              }\n              label=\"Separate Handicapped\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.hose}\n                  onChange={this.handleInputChange}\n                  name=\"hose\"\n                />\n              }\n              label=\"Hose\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.showerHeads}\n                  onChange={this.handleInputChange}\n                  name=\"showerHeads\"\n                />\n              }\n              label=\"Shower Heads\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.waterCooler}\n                  onChange={this.handleInputChange}\n                  name=\"waterCooler\"\n                />\n              }\n              label=\"Water Cooler\"\n            />\n          </FormGroup>\n          <br />\n\n          {/* Present user with choice to edit Panorama image if edit\n          mode is on */}\n          {this.state.edit && (\n            <div>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={this.state.editPanorama}\n                    onChange={this.handleInputChange}\n                    name=\"editPanorama\"\n                  />\n                }\n                label=\"Edit Panorama image\"\n              />\n              <br />\n            </div>\n          )}\n\n          <input\n            type=\"file\"\n            name=\"paranomaPath\"\n            accept=\"image/*\"\n            ref={this.fileInput}\n            id=\"contained-button-file\"\n            style={{display: 'none'}}\n          />\n\n          {/* Do not show upload Panorama button if in edit mode and\n          edit panorama is not chosen */}\n          {(!this.state.edit || this.state.editPanorama) && (\n            <label htmlFor=\"contained-button-file\">\n              <Button variant=\"contained\" component=\"span\">\n                Select panorama image\n              </Button>\n              {this.fileInput.current != null &&\n                this.fileInput.current.files[0] != null &&\n                ` ${this.fileInput.current.files[0].name}`}\n            </label>\n          )}\n          <br />\n          <br />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            disabled={\n              this.state.name === '' ||\n              this.state.lat === 0 ||\n              this.state.lon === 0\n            }>\n            Submit\n          </Button>\n          {/* Progress indicator */}\n          <span>\n            {this.state.progressShown &&\n              ' ' + Math.floor(this.state.progress) + '%'}\n          </span>\n          {/* Error indicator */}\n          <p>\n            {this.state.error &&\n              'An error occured, please refresh the page and try again'}\n          </p>\n          {this.state.edit && (\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => window.location.reload()}>\n              Cancel\n            </Button>\n          )}\n        </form>\n\n        <Button\n          color=\"secondary\"\n          onClick={() =>\n            this.setState({submissionsShown: !this.state.submissionsShown})\n          }>\n          {`${this.state.submissionsShown ? 'Hide' : 'Show'} your submissions`}\n        </Button>\n\n        {this.state.submissionsShown && (\n          <Submitted\n            uid={this.props.currentUser.uid}\n            doc={this.doc}\n            handleEdit={this.handleEdit}\n            handleDelete={this.handleDelete}\n          />\n        )}\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport firebase from './utils/firebase';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport {\n    DialogContent,\n    DialogTitle,\n    Dialog,\n    DialogActions,\n    DialogContentText,\n    Input,\n} from '@material-ui/core';\n\nexport default class Admin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.submissionsDb = firebase.firestore().collection('users');\n        this.toiletDb = firebase.firestore().collection('toilets');\n        this.state = {\n            submissions: [],\n            dialogOpened: false,\n            submissionToDelete: {},\n            submissionToApprove: {},\n\n        };\n        this.getAllSubmissions();\n\n    }\n\n    componentWiUpdate() {\n        this.getAllSubmissions();\n    }\n\n    getAllSubmissions() {\n        let users = [];\n        this.submissionsDb\n            .get()\n            .then(querySnapshot => {\n                querySnapshot.forEach(user => {\n                    users.push(user.data().uid);\n                });\n            })\n            .then(() => {\n                users.forEach(user => this.getSubmissionsForUser(user));\n            })\n            .catch(error => {\n                alert(error);\n            });\n    }\n\n    getSubmissionsForUser(user) {\n        let newSubmissions = [];\n        this.submissionsDb\n            .doc(user)\n            .collection('submissions')\n            .get()\n            .then(querySnapshot => {\n                querySnapshot.forEach(submission => {\n                    newSubmissions.push({\n                        userUid: user,\n                        isFemale: submission.data().facilities.female,\n                        isMale: submission.data().facilities.male,\n                        isHandicapped: submission.data().facilities.handicapped,\n                        isSeparateHandicapped: submission.data().facilities\n                            .separateHandicapped,\n                        hasHose: submission.data().facilities.hose,\n                        hasShowerHeads: submission.data().facilities.showerHeads,\n                        hasWaterCooler: submission.data().facilities.waterCooler,\n                        lat: submission.data().lat,\n                        lon: submission.data().lon,\n                        name: submission.data().name,\n                        paranomaUrl: submission.data().paranomaUrl,\n                        status: submission.data().status,\n                        isEditing: false\n                    });\n                });\n            })\n            .then(() => {\n                this.setState(prevState => ({\n                    submissions: [...prevState.submissions, newSubmissions],\n                }));\n            })\n            .then(() => {\n                this.setState(prevState => ({\n                    submissions: prevState.submissions.flatMap(x => x),\n                }));\n                console.log(this.state.submissions);\n            });\n    }\n\n    generateFacilities(submission) {\n        let result = '';\n\n        if (submission.isMale) {\n            result += '🙋‍♂️';\n        }\n        if (submission.isFemale) {\n            result += '🙋‍';\n        }\n        if (submission.hasWaterCooler) {\n            result += '🚰';\n        }\n        if (submission.hasShowerHeads) {\n            result += '🚿';\n        }\n        if (submission.hasHose) {\n            result += '💦';\n        }\n        if (submission.isHandicapped) {\n            result += '♿';\n        }\n        if (submission.isSeparateHandicapped) {\n            result += '😭';\n        }\n        return result;\n    }\n\n    submissionAction(index) {\n        const values = {\n            age: [10, 20, 30],\n        };\n        return (\n            <FormControl>\n                <Select\n                    value={values.age}\n                    onChange={event => {\n\n                        let submission = this.state.submissions[index];\n                        switch (event.target.value) {\n\n                            case \"Approved\":\n\n                                this.triggerDialogToConfirmApprove(submission, index)\n                                break;\n                            case \"Edit\":\n                                let submissions = [...this.state.submissions];\n                                submission.isEditing = true;\n                                submissions[index] = submission;\n                                this.setState({\n                                    submissions: submissions,\n                                    submissionIndex: index,\n                                    submissionToEdit : submission\n                                })\n                                break;\n                            case \"Rejected\":\n                                this.triggerDialogToConfirmDelete(submission, index)\n                                break;\n                        }\n                    }}>\n                    <MenuItem value={'Edit'}>Edit</MenuItem>\n                    <MenuItem value={'Approved'}>Approved</MenuItem>\n                    <MenuItem value={'Rejected'}>Rejected</MenuItem>\n                </Select>\n            </FormControl>\n        );\n    }\n    triggerDialogToConfirmApprove(submission, index) {\n        this.setState({\n            submissionToApprove: submission,\n            submissionIndex: index,\n            approveDialogOpened: true,\n        });\n    }\n    approveSubmission() {\n        // This chunk is just to update an object in the array of the state\n        let submissions = [...this.state.submissions];\n        let submission = this.state.submissionToApprove;\n        submission.status = 'Approved';\n        submissions[this.state.submissionIndex] = submission;\n        // update submissions to show approved \n        this.submissionsDb\n            .doc(this.state.submissionToApprove.userUid)\n            .collection('submissions')\n            .doc(this.state.submissionToApprove.name)\n            .update({\n                status: \"Approved\"\n            })\n\n\n\n        // submission to official toilet database\n        this.toiletDb\n            .doc(submission.name)\n            .set({\n                facilities: {\n                    female: submission.isFemale,\n                    handicapped: submission.isHandicapped,\n                    hose: submission.hasHose,\n                    male: submission.isMale,\n                    separateHandicapped: submission.isSeparateHandicapped,\n                    showerHeads: submission.hasShowerHeads,\n                    waterCooler: submission.hasWaterCooler,\n                },\n                lat: submission.lat,\n                lon: submission.lon,\n                name: submission.name,\n                paranomaUrl: submission.paranomaUrl,\n            })\n            .then(() => {\n                this.setState({\n                    submissions: submissions,\n                    approveDialogOpened: false,\n                });\n                alert(submission.name + ' has been approved!');\n            });\n    }\n    triggerDialogToConfirmDelete(submission, index) {\n        this.setState({\n            submissionToDelete: submission,\n            submissionIndex: index,\n            deleteDialogOpened: true,\n        });\n    }\n    deleteSubmission() {\n        this.submissionsDb\n            .doc(this.state.submissionToDelete.userUid)\n            .collection('submissions')\n            .doc(this.state.submissionToDelete.name)\n            .delete()\n            .then(() => {\n                this.setState({\n                    deleteDialogOpened: false,\n                });\n                this.getAllSubmissions();\n                alert(this.state.submissionToDelete.name + ' has been deleted forever');\n                window.location.reload();\n            });\n    }\n\n\n    handleConfirmEdit(index) {\n        let submission = this.state.submissionToEdit\n        // create a new doc \n        this.submissionsDb\n            .doc(this.state.submissionToEdit.userUid)\n            .collection('submissions')\n            .doc(this.state.tempName)\n            .set({\n                facilities: {\n                    female: submission.isFemale,\n                    handicapped: submission.isHandicapped,\n                    hose: submission.hasHose,\n                    male: submission.isMale,\n                    separateHandicapped: submission.isSeparateHandicapped,\n                    showerHeads: submission.hasShowerHeads,\n                    waterCooler: submission.hasWaterCooler,\n                },\n                lat: submission.lat,\n                lon: submission.lon,\n                name: this.state.tempName,\n                paranomaUrl: submission.paranomaUrl,\n            }).then(\n                () => {\n                    let submissions = [...this.state.submissions];\n                    submission.isEditing = false;\n                    submissions[this.state.submissionIndex] = submission;\n                    this.submissionsDb\n                        .doc(this.state.submissionToEdit.userUid)\n                        .collection('submissions')\n                        .doc(this.state.submissionToEdit.name)\n                        .delete()\n                        .then(\n                            () => {\n                                this.setState({\n                                    submissions,\n                                })\n                                alert('Successfully edited!')\n                                window.location.reload()\n                            }\n                        ).catch(\n                            error => alert(error)\n                        )\n                }\n            )\n\n    }\n\n\n    generateTable() {\n        let index = -1;\n        return (\n            this.state.submissions.map(submission => {\n                index++;\n                return submission.isEditing\n                    ? (<TableRow>\n                        <TableCell>\n                            <Input\n                                defaultValue={this.state.submissions[index].name}\n                                multiline\n                                fullWidth\n                                onChange={(event) => this.setState({\n                                    tempName: event.target.value,\n                                    submissionToEdit: submission\n                                })}\n                            />\n                        </TableCell>\n                        <TableCell>{submission.userUid}</TableCell>\n                        <TableCell>{this.generateFacilities(submission)}</TableCell>\n                        <TableCell>\n                            {submission.status == undefined\n                                ? 'Pending'\n                                : submission.status}{' '}\n                        </TableCell>\n                        <TableCell>\n                            <Button size = 'small' onClick={() => {\n                                this.handleConfirmEdit(index)\n                            }}> Confirm Changes </Button>\n                            <Button size = 'small' onClick={() => {\n                                let submissions = [...this.state.submissions];\n                                let submission = this.state.submissionToEdit;\n                                submission.isEditing = false;\n                                submissions[index] = submission;\n                                \n                                this.setState({\n                                    submissions : submissions\n                                })\n                                \n                            }}> Cancel </Button>\n                        </TableCell>\n                    </TableRow>\n                    )\n                    : (\n                        <TableRow>\n                            <TableCell>{submission.name}</TableCell>\n                            <TableCell>{submission.userUid}</TableCell>\n                            <TableCell>{this.generateFacilities(submission)}</TableCell>\n                            <TableCell>\n                                {submission.status == undefined\n                                    ? 'Pending'\n                                    : submission.status}{' '}\n                            </TableCell>\n                            <TableCell>{this.submissionAction(index)}</TableCell>\n                        </TableRow>\n                    )\n\n            })\n        )\n    }\n\n\n\n    render() {\n\n        return (\n            <Paper style={{ margin: 20 }}>\n                <Dialog\n                    onClose={() => {\n                        this.setState({ approveDialogOpened: false });\n                    }}\n                    open={this.state.approveDialogOpened}>\n                    <DialogTitle>Are you sure?</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {'Once you press approve the submission, ' +\n                                this.state.submissionToApprove.name +\n                                ' will be pushed to the main database'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => this.approveSubmission()}>Approve</Button>\n                        <Button\n                            onClick={() => {\n                                this.setState({ approveDialogOpened: false });\n                            }}>\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    onClose={() => {\n                        this.setState({ deleteDialogOpened: false });\n                    }}\n                    open={this.state.deleteDialogOpened}>\n                    <DialogTitle>Are you sure?</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {'Once you press delete there is no turning back, the submission, ' +\n                                this.state.submissionToDelete.name +\n                                ' will forever be gone!'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => this.deleteSubmission()}>Delete</Button>\n                        <Button\n                            onClick={() => {\n                                this.setState({ deleteDialogOpened: false });\n                            }}>\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n\n\n\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Location</TableCell>\n                            <TableCell>User </TableCell>\n                            <TableCell>Facilities</TableCell>\n                            <TableCell>Status</TableCell>\n                            <TableCell>Action</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.generateTable()}\n                    </TableBody>\n                </Table>\n            </Paper>\n        );\n    }\n}\n","import React from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"./utils/firebase\";\nimport App from \"./App\";\nimport Admin from \"./Admin\";\n\n// Implement Google and Firebase signin\n\nconst uiConfig = {\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID]\n};\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSignedIn: false\n    };\n  }\n\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase\n      .auth()\n      .onAuthStateChanged(user => this.setState({ isSignedIn: !!user }));\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <div>\n          <h1>My App</h1>\n          <p>Please sign-in:</p>\n          <StyledFirebaseAuth\n            uiConfig={uiConfig}\n            firebaseAuth={firebase.auth()}\n          />\n        </div>\n      );\n    }\n\n    if (\n      firebase.auth().currentUser.email == \"lowzxx@gmail.com\" ||\n      firebase.auth().currentUser.email == \"nelsontkyi@gmail.comz\"\n    ) {\n      return (\n        <div>\n          <Admin />\n          <div style={{ textAlign: \"center\" }}>\n            <button onClick={() => firebase.auth().signOut()}>Sign Out</button>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <App currentUser={firebase.auth().currentUser} />\n          <div style={{ textAlign: \"center\" }}>\n            <button onClick={() => firebase.auth().signOut()}>Sign Out</button>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\nimport Typography from 'typography';\nimport fairyGatesTheme from 'typography-theme-fairy-gates';\nimport injectFonts from 'typography-inject-fonts';\n\nconst typography = new Typography(fairyGatesTheme);\ntypography.injectStyles()\ninjectFonts(typography)\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}