{"version":3,"sources":["utils/firebase.js","components/map.js","components/layout.js","App.js","Main.js","index.js"],"names":["firebase","require","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Map","_this","this","navigator","geolocation","id","watchPosition","position","lat","coords","latitude","lon","longitude","props","updateMyLocation","myLocation","setPosition","lng","accuracyRadius","setCenter","setRadius","accuracy","console","log","enableHighAccuracy","_this2","NUS","map","window","google","maps","document","getElementById","zoom","center","Marker","icon","Circle","radius","fillColor","fillOpacity","strokeWeight","addListener","e","handleMapClick","latLng","marker","setMap","getPosition","self","centerControlDiv","createElement","controlDiv","controlUI","style","backgroundColor","border","borderRadius","boxShadow","cursor","textAlign","marginBottom","height","title","appendChild","controlText","innerHTML","addEventListener","index","controls","ControlPosition","LEFT_BOTTOM","push","watchLocation","clearWatch","react_default","a","width","React","Component","layout","_ref","children","margin","maxWidth","padding","uniqid","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","name","myLat","myLon","handicapped","separateHandicapped","hose","showerHeads","male","female","waterCooler","progress","progressShown","error","fileInput","createRef","db","firestore","storage","handleInputChange","bind","assertThisInitialized","setToCurrentLocation","handleSubmit","event","_this$setState2","value","target","type","checked","setState","defineProperty","preventDefault","current","files","test","Resizer","imageFileResizer","blob","uploadTask","ref","child","put","on","TaskEvent","STATE_CHANGED","snapshot","bytesTransferred","totalBytes","err","getDownloadURL","then","paranomaUrl","doc","collection","uid","set","facilities","location","reload","alert","onSubmit","onChange","onClick","accept","disabled","Math","floor","uiConfig","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","Main","isSignedIn","unregisterAuthObserver","onAuthStateChanged","user","src_App","currentUser","signOut","StyledFirebaseAuth_default","firebaseAuth","typography","Typography","fairyGatesTheme","injectStyles","injectFonts","ReactDOM","render","Main_Main"],"mappings":"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","file":"static/js/main.48862b59.chunk.js","sourcesContent":["const firebase = require('firebase/app');\nrequire('firebase/firestore');\nrequire(\"firebase/auth\");\nrequire(\"firebase/storage\");\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n  authDomain: 'let-it-go-submission.firebaseapp.com',\n  databaseURL: 'https://let-it-go-submission.firebaseio.com',\n  projectId: 'let-it-go-submission',\n  storageBucket: 'let-it-go-submission.appspot.com',\n  messagingSenderId: '676873668301',\n  appId: '1:676873668301:web:adfb3a281bd39ead',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from 'react';\n\nclass Map extends React.Component {\n  watchLocation() {\n    if (navigator.geolocation) {\n      this.id = navigator.geolocation.watchPosition(\n        position => {\n          const lat = position.coords.latitude;\n          const lon = position.coords.longitude;\n          this.props.updateMyLocation(lat, lon);\n\n          this.myLocation.setPosition({lat: lat, lng: lon});\n          this.accuracyRadius.setCenter({lat: lat, lng: lon});\n          this.accuracyRadius.setRadius(position.coords.accuracy);\n        },\n        () => console.log('No permission'),\n        {\n          enableHighAccuracy: true,\n        },\n      );\n    } else {\n      // Browser doesn't support Geolocation\n      console.log('no permission');\n    }\n  }\n\n  componentDidMount() {\n    const NUS = {lat: 1.296675, lng: 103.776396};\n    this.map = new window.google.maps.Map(document.getElementById('map'), {\n      zoom: 13,\n      center: NUS,\n    });\n\n    this.myLocation = new window.google.maps.Marker({\n      position: NUS,\n      map: this.map,\n      icon:\n        'https://raw.githubusercontent.com/nelsontky/let-it-go/master/assets/icons/locationMarker.png',\n    });\n\n    this.accuracyRadius = new window.google.maps.Circle({\n      map: this.map,\n      center: NUS,\n      radius: 0,\n      fillColor: '#00F',\n      fillOpacity: 0.2,\n      strokeWeight: 0,\n    });\n\n    // Click listeners\n    this.map.addListener('click', e => {\n      this.props.handleMapClick(e.latLng.lat(), e.latLng.lng());\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: e.latLng,\n        map: this.map,\n      });\n    });\n    this.accuracyRadius.addListener('click', e => {\n      this.props.handleMapClick(e.latLng.lat(), e.latLng.lng());\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: e.latLng,\n        map: this.map,\n      });\n    });\n    this.myLocation.addListener('click', () => {\n      this.props.handleMapClick(\n        this.myLocation.getPosition().lat(),\n        this.myLocation.getPosition().lng(),\n      );\n      if (this.marker != null) {\n        this.marker.setMap(null);\n      }\n      this.marker = new window.google.maps.Marker({\n        position: this.myLocation.getPosition(),\n        map: this.map,\n      });\n    });\n\n    // Location button\n    const self = this;\n    function CenterControl(controlDiv, map) {\n      // Set CSS for the control border.\n      let controlUI = document.createElement('div');\n      controlUI.style.backgroundColor = '#fff';\n      controlUI.style.border = '2px solid #fff';\n      controlUI.style.borderRadius = '3px';\n      controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';\n      controlUI.style.cursor = 'pointer';\n      controlUI.style.textAlign = 'center';\n      controlUI.style.marginBottom = '22px';\n      controlUI.style.height = '31px';\n      controlUI.title = 'Click to recenter the map to location';\n      controlDiv.appendChild(controlUI);\n\n      // Set CSS for the control interior.\n      let controlText = document.createElement('div');\n      controlText.innerHTML = \"<img src='https://i.imgur.com/raFRca2.png' />\";\n      controlUI.appendChild(controlText);\n\n      // Setup the click event listeners\n      controlUI.addEventListener('click', function() {\n        map.setCenter(self.myLocation.getPosition());\n      });\n    }\n\n    // Render the button\n    let centerControlDiv = document.createElement('div');\n    new CenterControl(centerControlDiv, this.map);\n\n    centerControlDiv.index = 1;\n    this.map.controls[window.google.maps.ControlPosition.LEFT_BOTTOM].push(\n      centerControlDiv,\n    );\n\n    this.watchLocation();\n  }\n\n  componentWillUnmount() {\n    navigator.geolocation.clearWatch(this.id);\n  }\n\n  render() {\n    return <div id=\"map\" style={{width: '100%', height: '400px'}}></div>;\n  }\n}\n\nexport default Map;\n","import React from 'react';\n\nexport default ({children}) => (\n  <div style={{margin: `3rem auto`, maxWidth: 650, padding: `0 1rem`}}>\n    {children}\n  </div>\n);\n","import React from 'react';\nimport Map from './components/map';\nimport Layout from './components/layout';\nimport firebase from './utils/firebase';\nimport Resizer from 'react-image-file-resizer';\n\nconst uniqid = require('uniqid');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      lat: 0,\n      lon: 0,\n      myLat: 0,\n      myLon: 0,\n      handicapped: false,\n      separateHandicapped: false,\n      hose: false,\n      showerHeads: false,\n      male: false,\n      female: false,\n      waterCooler: false,\n      progress: 0,\n      progressShown: false,\n      error: false,\n    };\n\n    this.fileInput = React.createRef();\n\n    this.db = firebase.firestore();\n    this.storage = firebase.storage();\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleMapClick = this.handleMapClick.bind(this);\n    this.updateMyLocation = this.updateMyLocation.bind(this);\n    this.setToCurrentLocation = this.setToCurrentLocation.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // Handles state of input forms\n  handleInputChange(event) {\n    const value =\n      event.target.type === 'checkbox'\n        ? event.target.checked\n        : event.target.value;\n\n    if (event.target.name !== 'handicapped') {\n      // Any checkbox/input that is not the handicapped checkbox, set state\n      // normally.\n      this.setState({\n        [event.target.name]: value,\n      });\n    } else {\n      // For handicapped checkbox, have to make sure that separateHandicapped\n      // checkbox is unticked when handicapped checkbox is unticked.\n      this.setState({\n        [event.target.name]: value,\n        separateHandicapped: value && this.state.separateHandicapped,\n      });\n    }\n  }\n\n  // Handles map clicks, will update lat lon field to clicked lat lon.\n  handleMapClick(lat, lon) {\n    this.setState({\n      lat,\n      lon,\n    });\n  }\n\n  // Whenever geolocation code in Map component runs, myLat and myLon in local\n  // state will be updated.\n  updateMyLocation(myLat, myLon) {\n    this.setState({\n      myLat,\n      myLon,\n    });\n  }\n\n  // Handles click on \"Set Lat Lon to current location button\". Does what\n  // the button says, sets Lat Lon state to that of current location.\n  // (if available)\n  setToCurrentLocation(event) {\n    event.preventDefault();\n    this.setState({\n      lat: this.state.myLat,\n      lon: this.state.myLon,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // Ensures that file uploaded is an image. Does not work if file format\n    // was changed manually but submit will still not work, just that this\n    // warning will not show too.\n    if (\n      this.fileInput.current.files[0] == null ||\n      !/image\\/*/g.test(this.fileInput.current.files[0].type)\n    ) {\n      alert('Please make sure file uploaded is an image');\n    } else {\n      // Resize images to max width of 4096 to support mobile, after resizing,\n      // image will be uploaded and firestore entry would be created\n      Resizer.imageFileResizer(\n        this.fileInput.current.files[0],\n        4096,\n        4096,\n        'JPEG',\n        70,\n        0,\n        blob => {\n          // Show submission progress\n          this.setState({progressShown: true});\n\n          // Uploads image to firebase storage\n          let uploadTask = this.storage\n            .ref()\n            // Names file appended with a unique id so as to prevent overwrites\n            .child(uniqid(this.state.name + '-'))\n            .put(blob);\n\n          uploadTask.on(\n            firebase.storage.TaskEvent.STATE_CHANGED,\n            snapshot => {\n              let progress =\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n\n              this.setState({progress});\n            },\n            err => {\n              this.setState({error: true});\n            },\n            () => {\n              // Upload completed successfully\n              uploadTask.snapshot.ref.getDownloadURL().then(paranomaUrl => {\n                const doc = this.db\n                  .collection('users')\n                  // Set doc name to user uid\n                  .doc(this.props.uid);\n\n                // To get the document does not exist message away\n                doc.set({uid: this.props.uid});\n\n                doc\n                  .collection('submissions')\n                  .doc(this.state.name)\n                  .set({\n                    facilities: {\n                      female: this.state.female,\n                      handicapped: this.state.handicapped,\n                      hose: this.state.hose,\n                      male: this.state.male,\n                      separateHandicapped: this.state.separateHandicapped,\n                      showerHeads: this.state.showerHeads,\n                      waterCooler: this.state.waterCooler,\n                    },\n                    lat: this.state.lat,\n                    lon: this.state.lon,\n                    name: this.state.name,\n                    paranomaUrl,\n                  })\n                  .then(() => window.location.reload());\n                // Should {merge: true}??? KIV\n              });\n            },\n          );\n        },\n        'blob',\n      );\n    }\n  }\n\n  render() {\n    return (\n      <Layout>\n        {/* Main form */}\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleInputChange}\n            />\n          </label>\n          <br />\n\n          <button onClick={this.setToCurrentLocation}>\n            Set Lat Lon to current location\n          </button>\n          <br />\n\n          <label>\n            Lat\n            <br />\n            <input\n              type=\"text\"\n              name=\"lat\"\n              value={this.state.lat}\n              onChange={this.handleInputChange}\n              style={{width: '50%'}}\n            />\n          </label>\n          <br />\n\n          <label>\n            Lon\n            <br />\n            <input\n              type=\"text\"\n              name=\"lon\"\n              value={this.state.lon}\n              onChange={this.handleInputChange}\n              style={{width: '50%'}}\n            />\n          </label>\n          <br />\n\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"male\"\n              checked={this.state.male}\n              onChange={this.handleInputChange}\n            />\n            Male{' '}\n          </label>\n\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"female\"\n              checked={this.state.female}\n              onChange={this.handleInputChange}\n            />\n            Female{' '}\n          </label>\n\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"handicapped\"\n              checked={this.state.handicapped}\n              onChange={this.handleInputChange}\n            />\n            Handicapped{' '}\n          </label>\n\n          {/* Show only if handicapped is selected */}\n          {this.state.handicapped && (\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"separateHandicapped\"\n                checked={this.state.separateHandicapped}\n                onChange={this.handleInputChange}\n              />\n              Seperate Handicapped{' '}\n            </label>\n          )}\n          <br />\n\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"hose\"\n              checked={this.state.hose}\n              onChange={this.handleInputChange}\n            />\n            Hose{' '}\n          </label>\n\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"showerHeads\"\n              checked={this.state.showerHeads}\n              onChange={this.handleInputChange}\n            />\n            Shower Heads{' '}\n          </label>\n\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"waterCooler\"\n              checked={this.state.waterCooler}\n              onChange={this.handleInputChange}\n            />\n            Water Cooler{' '}\n          </label>\n          <br />\n\n          <br />\n          <label>\n            Select a paranoma image:\n            <br />\n            <input\n              type=\"file\"\n              name=\"paranomaPath\"\n              accept=\"image/*\"\n              ref={this.fileInput}\n            />\n          </label>\n          <br />\n\n          <br />\n          <input\n            type=\"submit\"\n            disabled={\n              this.state.name === '' ||\n              this.state.lat === 0 ||\n              this.state.lon === 0\n            }\n            value=\"Submit\"\n          />\n\n          {/* Progress indicator */}\n          <span>\n            {this.state.progressShown &&\n              ' ' + Math.floor(this.state.progress) + '%'}\n          </span>\n\n          {/* Error indicator */}\n          <p>\n            {this.state.error &&\n              'An error occured, please refresh the page and try again'}\n          </p>\n        </form>\n\n        {/* Map component, takes in 2 functions that are needed to set local\n        state from child component */}\n        <Map\n          handleMapClick={this.handleMapClick}\n          updateMyLocation={this.updateMyLocation}\n        />\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from './utils/firebase';\nimport App from './App';\n\n// Implement Google and Firebase signin\n\nconst uiConfig = {\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n};\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSignedIn: false,\n    };\n  }\n\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase\n      .auth()\n      .onAuthStateChanged(user => this.setState({isSignedIn: !!user}));\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <div>\n          <h1>My App</h1>\n          <p>Please sign-in:</p>\n          <StyledFirebaseAuth\n            uiConfig={uiConfig}\n            firebaseAuth={firebase.auth()}\n          />\n        </div>\n      );\n    }\n    return (\n      <div>\n        <App uid={firebase.auth().currentUser.uid} />\n        <div style={{textAlign: 'center'}}>\n          <button onClick={() => firebase.auth().signOut()}>Sign Out</button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\nimport Typography from 'typography';\nimport fairyGatesTheme from 'typography-theme-fairy-gates';\nimport injectFonts from 'typography-inject-fonts';\nimport './components/input.css';\n\nconst typography = new Typography(fairyGatesTheme);\ntypography.injectStyles();\ninjectFonts(typography);\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}